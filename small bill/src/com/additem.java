/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import small.bill.DBClass;

/**
 *
 * @author CHETHANA
 */
public class additem extends javax.swing.JFrame {

    public additem() {
        initComponents();
        lebaleSet(0);
        jScrollPane1.setVisible(false);
        jButton1.setVisible(false);
    }

    //---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /* *** >>> Date ------------>>> 
     * *** >>> What ------------>>> Singltan class 
     * *** >>> Why ------------->>> ek object ekk hdnn
     * *** >>> Parameters ------>>>
     * *** >>> Status ---------->>>
     */
//>>>>>>>>> Get Instance <<<<<<<<<<<  
    private static additem call_popup_ = new additem();

    public static additem getCallPopup() {
        return call_popup_;
    }
//>>>>>>>>> Get Instance <<<<<<<<<<<         

//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\     
//---------########---------*********************---------########---------*********************---------########---------\\ 
//---------########---------*********************---------########---------*********************---------########---------\\    
//---------########---------*********************---------########---------*********************---------########---------\\ 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel37 = new javax.swing.JLabel();
        tx_itemid = new javax.swing.JTextField();
        jLayeredPaneTop = new javax.swing.JLayeredPane();
        la_minimise = new javax.swing.JLabel();
        la_close = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel53 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        tx_u1 = new javax.swing.JTextField();
        la_u1 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        la_u6 = new javax.swing.JLabel();
        la_c6 = new javax.swing.JLabel();
        tx_u6 = new javax.swing.JTextField();
        la_u002 = new javax.swing.JLabel();
        la_p002 = new javax.swing.JLabel();
        la_c2 = new javax.swing.JLabel();
        tx_u2 = new javax.swing.JTextField();
        la_u2 = new javax.swing.JLabel();
        la_c3 = new javax.swing.JLabel();
        tx_u3 = new javax.swing.JTextField();
        la_u3 = new javax.swing.JLabel();
        la_c4 = new javax.swing.JLabel();
        tx_u4 = new javax.swing.JTextField();
        la_u4 = new javax.swing.JLabel();
        tx_u7 = new javax.swing.JTextField();
        la_c7 = new javax.swing.JLabel();
        la_u7 = new javax.swing.JLabel();
        la_u8 = new javax.swing.JLabel();
        la_c8 = new javax.swing.JLabel();
        tx_u8 = new javax.swing.JTextField();
        la_u5 = new javax.swing.JLabel();
        la_c5 = new javax.swing.JLabel();
        tx_u5 = new javax.swing.JTextField();
        b_enter = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        tx_itemname = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        b_search = new javax.swing.JButton();
        b_clear = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setLocation(new java.awt.Point(145, 45));
        setMinimumSize(new java.awt.Dimension(668, 596));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(668, 596));
        getContentPane().setLayout(null);

        jLabel37.setBackground(new java.awt.Color(23, 160, 160));
        jLabel37.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("ITEMS");
        jLabel37.setOpaque(true);
        getContentPane().add(jLabel37);
        jLabel37.setBounds(0, 30, 670, 40);

        tx_itemid.setBackground(new java.awt.Color(255, 255, 255));
        tx_itemid.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_itemid.setForeground(new java.awt.Color(0, 0, 0));
        tx_itemid.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_itemidAncestorRemoved(evt);
            }
        });
        tx_itemid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_itemidActionPerformed(evt);
            }
        });
        tx_itemid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_itemidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_itemidKeyReleased(evt);
            }
        });
        getContentPane().add(tx_itemid);
        tx_itemid.setBounds(180, 140, 340, 35);

        jLayeredPaneTop.setBackground(new java.awt.Color(4, 37, 87));
        jLayeredPaneTop.setMinimumSize(new java.awt.Dimension(1380, 45));
        jLayeredPaneTop.setOpaque(true);

        la_minimise.setBackground(new java.awt.Color(4, 37, 87));
        la_minimise.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        la_minimise.setForeground(new java.awt.Color(255, 255, 255));
        la_minimise.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_minimise.setText("-");
        la_minimise.setOpaque(true);
        la_minimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_minimiseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_minimiseMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_minimiseMouseClicked(evt);
            }
        });
        jLayeredPaneTop.add(la_minimise);
        la_minimise.setBounds(580, 0, 35, 30);

        la_close.setBackground(new java.awt.Color(4, 37, 87));
        la_close.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        la_close.setForeground(new java.awt.Color(255, 255, 255));
        la_close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_close.setText("x");
        la_close.setOpaque(true);
        la_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_closeMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_closeMouseClicked(evt);
            }
        });
        jLayeredPaneTop.add(la_close);
        la_close.setBounds(620, 0, 40, 30);

        getContentPane().add(jLayeredPaneTop);
        jLayeredPaneTop.setBounds(0, 0, 670, 30);

        jComboBox1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Klkaya", "Paththu", "Taylaya", "Churnaya", "Lepaya", "Paniya", "Gugul", "Sruthaya", "Lehaya", "Kwathaya", "Arishataya", "Rasayanaya", "Asawaya", "Thewilla", "Other" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(180, 90, 140, 40);

        jList1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(180, 180, 340, 131);

        jLabel53.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(0, 0, 0));
        jLabel53.setText("Item ID");
        getContentPane().add(jLabel53);
        jLabel53.setBounds(30, 140, 90, 29);

        jLabel39.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 0));
        jLabel39.setText(":");
        getContentPane().add(jLabel39);
        jLabel39.setBounds(160, 140, 10, 29);

        jLabel54.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(0, 0, 0));
        jLabel54.setText("Price");
        getContentPane().add(jLabel54);
        jLabel54.setBounds(180, 260, 90, 29);

        jLabel40.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 0, 0));
        jLabel40.setText(":");
        getContentPane().add(jLabel40);
        jLabel40.setBounds(160, 290, 10, 29);

        tx_u1.setBackground(new java.awt.Color(255, 255, 255));
        tx_u1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u1.setForeground(new java.awt.Color(0, 0, 0));
        tx_u1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u1AncestorRemoved(evt);
            }
        });
        tx_u1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u1ActionPerformed(evt);
            }
        });
        tx_u1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u1KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u1);
        tx_u1.setBounds(180, 290, 140, 35);

        la_u1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u1.setForeground(new java.awt.Color(0, 0, 0));
        la_u1.setText("Name");
        getContentPane().add(la_u1);
        la_u1.setBounds(30, 290, 120, 29);

        jLabel56.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(0, 0, 0));
        jLabel56.setText("Unit");
        getContentPane().add(jLabel56);
        jLabel56.setBounds(30, 260, 90, 29);

        la_u6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u6.setForeground(new java.awt.Color(0, 0, 0));
        la_u6.setText("Name");
        getContentPane().add(la_u6);
        la_u6.setBounds(360, 340, 90, 29);

        la_c6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c6.setForeground(new java.awt.Color(0, 0, 0));
        la_c6.setText(":");
        getContentPane().add(la_c6);
        la_c6.setBounds(490, 340, 10, 29);

        tx_u6.setBackground(new java.awt.Color(255, 255, 255));
        tx_u6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u6.setForeground(new java.awt.Color(0, 0, 0));
        tx_u6.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u6AncestorRemoved(evt);
            }
        });
        tx_u6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u6ActionPerformed(evt);
            }
        });
        tx_u6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u6KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u6KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u6);
        tx_u6.setBounds(510, 340, 140, 35);

        la_u002.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u002.setForeground(new java.awt.Color(0, 0, 0));
        la_u002.setText("Unit");
        getContentPane().add(la_u002);
        la_u002.setBounds(360, 260, 90, 29);

        la_p002.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_p002.setForeground(new java.awt.Color(0, 0, 0));
        la_p002.setText("Price");
        getContentPane().add(la_p002);
        la_p002.setBounds(510, 260, 90, 29);

        la_c2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c2.setForeground(new java.awt.Color(0, 0, 0));
        la_c2.setText(":");
        getContentPane().add(la_c2);
        la_c2.setBounds(160, 340, 10, 29);

        tx_u2.setBackground(new java.awt.Color(255, 255, 255));
        tx_u2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u2.setForeground(new java.awt.Color(0, 0, 0));
        tx_u2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u2AncestorRemoved(evt);
            }
        });
        tx_u2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u2ActionPerformed(evt);
            }
        });
        tx_u2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u2KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u2);
        tx_u2.setBounds(180, 340, 140, 35);

        la_u2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u2.setForeground(new java.awt.Color(0, 0, 0));
        la_u2.setText("Name");
        getContentPane().add(la_u2);
        la_u2.setBounds(30, 340, 120, 29);

        la_c3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c3.setForeground(new java.awt.Color(0, 0, 0));
        la_c3.setText(":");
        getContentPane().add(la_c3);
        la_c3.setBounds(160, 390, 10, 29);

        tx_u3.setBackground(new java.awt.Color(255, 255, 255));
        tx_u3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u3.setForeground(new java.awt.Color(0, 0, 0));
        tx_u3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u3AncestorRemoved(evt);
            }
        });
        tx_u3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u3ActionPerformed(evt);
            }
        });
        tx_u3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u3KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u3);
        tx_u3.setBounds(180, 390, 140, 35);

        la_u3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u3.setForeground(new java.awt.Color(0, 0, 0));
        la_u3.setText("Name");
        getContentPane().add(la_u3);
        la_u3.setBounds(30, 390, 120, 29);

        la_c4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c4.setForeground(new java.awt.Color(0, 0, 0));
        la_c4.setText(":");
        getContentPane().add(la_c4);
        la_c4.setBounds(160, 440, 10, 29);

        tx_u4.setBackground(new java.awt.Color(255, 255, 255));
        tx_u4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u4.setForeground(new java.awt.Color(0, 0, 0));
        tx_u4.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u4AncestorRemoved(evt);
            }
        });
        tx_u4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u4ActionPerformed(evt);
            }
        });
        tx_u4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u4KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u4KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u4);
        tx_u4.setBounds(180, 440, 140, 35);

        la_u4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u4.setForeground(new java.awt.Color(0, 0, 0));
        la_u4.setText("Name");
        getContentPane().add(la_u4);
        la_u4.setBounds(30, 440, 120, 29);

        tx_u7.setBackground(new java.awt.Color(255, 255, 255));
        tx_u7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u7.setForeground(new java.awt.Color(0, 0, 0));
        tx_u7.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u7AncestorRemoved(evt);
            }
        });
        tx_u7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u7ActionPerformed(evt);
            }
        });
        tx_u7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u7KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u7KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u7);
        tx_u7.setBounds(510, 390, 140, 35);

        la_c7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c7.setForeground(new java.awt.Color(0, 0, 0));
        la_c7.setText(":");
        getContentPane().add(la_c7);
        la_c7.setBounds(490, 390, 10, 29);

        la_u7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u7.setForeground(new java.awt.Color(0, 0, 0));
        la_u7.setText("Name");
        getContentPane().add(la_u7);
        la_u7.setBounds(360, 390, 90, 29);

        la_u8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u8.setForeground(new java.awt.Color(0, 0, 0));
        la_u8.setText("Name");
        getContentPane().add(la_u8);
        la_u8.setBounds(360, 440, 90, 29);

        la_c8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c8.setForeground(new java.awt.Color(0, 0, 0));
        la_c8.setText(":");
        getContentPane().add(la_c8);
        la_c8.setBounds(490, 440, 10, 29);

        tx_u8.setBackground(new java.awt.Color(255, 255, 255));
        tx_u8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u8.setForeground(new java.awt.Color(0, 0, 0));
        tx_u8.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u8AncestorRemoved(evt);
            }
        });
        tx_u8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u8ActionPerformed(evt);
            }
        });
        tx_u8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u8KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u8KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u8);
        tx_u8.setBounds(510, 440, 140, 35);

        la_u5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_u5.setForeground(new java.awt.Color(0, 0, 0));
        la_u5.setText("Name");
        getContentPane().add(la_u5);
        la_u5.setBounds(360, 290, 120, 29);

        la_c5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c5.setForeground(new java.awt.Color(0, 0, 0));
        la_c5.setText(":");
        getContentPane().add(la_c5);
        la_c5.setBounds(490, 290, 10, 29);

        tx_u5.setBackground(new java.awt.Color(255, 255, 255));
        tx_u5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_u5.setForeground(new java.awt.Color(0, 0, 0));
        tx_u5.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_u5AncestorRemoved(evt);
            }
        });
        tx_u5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_u5ActionPerformed(evt);
            }
        });
        tx_u5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_u5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_u5KeyReleased(evt);
            }
        });
        getContentPane().add(tx_u5);
        tx_u5.setBounds(510, 290, 140, 35);

        b_enter.setBackground(new java.awt.Color(19, 198, 190));
        b_enter.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        b_enter.setForeground(new java.awt.Color(0, 0, 0));
        b_enter.setText("Enter");
        b_enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_enterActionPerformed(evt);
            }
        });
        getContentPane().add(b_enter);
        b_enter.setBounds(180, 520, 340, 50);

        jLabel55.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(0, 0, 0));
        jLabel55.setText("Name");
        getContentPane().add(jLabel55);
        jLabel55.setBounds(30, 190, 90, 29);

        jLabel57.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(0, 0, 0));
        jLabel57.setText(":");
        getContentPane().add(jLabel57);
        jLabel57.setBounds(160, 190, 10, 29);

        tx_itemname.setBackground(new java.awt.Color(255, 255, 255));
        tx_itemname.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_itemname.setForeground(new java.awt.Color(0, 0, 0));
        tx_itemname.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_itemnameAncestorRemoved(evt);
            }
        });
        tx_itemname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_itemnameActionPerformed(evt);
            }
        });
        tx_itemname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_itemnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_itemnameKeyReleased(evt);
            }
        });
        getContentPane().add(tx_itemname);
        tx_itemname.setBounds(180, 190, 340, 35);

        jLabel58.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 0, 0));
        jLabel58.setText("Catogery ");
        getContentPane().add(jLabel58);
        jLabel58.setBounds(30, 100, 120, 29);

        jLabel41.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText(":");
        getContentPane().add(jLabel41);
        jLabel41.setBounds(160, 100, 10, 29);

        b_search.setBackground(new java.awt.Color(19, 198, 190));
        b_search.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        b_search.setForeground(new java.awt.Color(0, 0, 0));
        b_search.setText("Search");
        b_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_searchActionPerformed(evt);
            }
        });
        getContentPane().add(b_search);
        b_search.setBounds(540, 185, 100, 30);

        b_clear.setBackground(new java.awt.Color(210, 50, 50));
        b_clear.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        b_clear.setForeground(new java.awt.Color(0, 0, 0));
        b_clear.setText("Clear");
        b_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clearActionPerformed(evt);
            }
        });
        getContentPane().add(b_clear);
        b_clear.setBounds(540, 140, 100, 30);

        jButton1.setBackground(new java.awt.Color(255, 204, 102));
        jButton1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(540, 230, 100, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tx_itemidAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_itemidAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_itemidAncestorRemoved

    private void tx_itemidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_itemidActionPerformed
        if (tx_itemid.getText().trim().equals("")) {
            jComboBox1.grabFocus();
            jComboBox1.showPopup();
        } else {
            tx_itemid.grabFocus();
        }
    }//GEN-LAST:event_tx_itemidActionPerformed

    private void tx_itemidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_itemidKeyPressed
        txValidateKeyEvent(evt, tx_itemid, "NA", 15);
        if (evt.getKeyCode() == 10) {
            if (!tx_itemid.getText().equals("")) {
                tx_itemname.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_itemidKeyPressed

    private void tx_itemidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_itemidKeyReleased
        jScrollPane1.setVisible(true);
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            jList1.grabFocus();
        } else if (!(tx_itemid.getText().trim().isEmpty())) {
            String tableName = jComboBox1.getSelectedItem().toString();
            searchANDList(tableName, "id", tx_itemid.getText(), jList1);
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!tx_itemid.getText().isEmpty()) {
                jScrollPane1.setVisible(false);
                tx_itemname.grabFocus();
            }
        }

        if (evt.getKeyChar() == KeyEvent.VK_F10) {
            if (tx_itemname.getText().trim().isEmpty()) {
                tx_itemname.grabFocus();
            } else {
                b_search.doClick();
            }
        }
    }//GEN-LAST:event_tx_itemidKeyReleased

    private void la_closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearMethod();
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            la_close.setBackground(new Color(4, 37, 87));
        }
    }//GEN-LAST:event_la_closeMouseClicked

    private void la_closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseEntered
        la_close.setBackground(Color.red);
    }//GEN-LAST:event_la_closeMouseEntered

    private void la_closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseExited
        la_close.setBackground(new Color(4, 37, 87));
    }//GEN-LAST:event_la_closeMouseExited

    private void la_minimiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_la_minimiseMouseClicked

    private void la_minimiseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseEntered
        la_minimise.setBackground(Color.GRAY);
    }//GEN-LAST:event_la_minimiseMouseEntered

    private void la_minimiseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseExited
        la_minimise.setBackground(new Color(4, 37, 87));
    }//GEN-LAST:event_la_minimiseMouseExited

    private void tx_u1AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u1AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u1AncestorRemoved

    private void tx_u1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u1ActionPerformed

    private void tx_u1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u1KeyPressed
        txValidateKeyEvent(evt, tx_u1, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u1.getText().equals("")) {
                tx_u2.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u1KeyPressed

    private void tx_u1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u1KeyReleased

    private void tx_u6AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u6AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u6AncestorRemoved

    private void tx_u6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u6ActionPerformed

    private void tx_u6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u6KeyPressed
        txValidateKeyEvent(evt, tx_u6, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u6.getText().equals("")) {
                tx_u8.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u6KeyPressed

    private void tx_u6KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u6KeyReleased
        if (evt.getKeyCode() == 121) {
            if (!tx_u6.getText().trim().equals("")) {
                tx_u6.grabFocus();
            } else {
                b_enter.doClick();
            }
        }
    }//GEN-LAST:event_tx_u6KeyReleased

    private void tx_u2AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u2AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u2AncestorRemoved

    private void tx_u2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u2ActionPerformed

    private void tx_u2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u2KeyPressed
        txValidateKeyEvent(evt, tx_u2, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u2.getText().equals("")) {
                tx_u3.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u2KeyPressed

    private void tx_u2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u2KeyReleased

    private void tx_u3AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u3AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u3AncestorRemoved

    private void tx_u3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u3ActionPerformed

    private void tx_u3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u3KeyPressed
        txValidateKeyEvent(evt, tx_u3, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u3.getText().equals("")) {
                tx_u4.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u3KeyPressed

    private void tx_u3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u3KeyReleased
        if (evt.getKeyCode() == 121) {
            if (!tx_u3.getText().trim().equals("")) {
                tx_u3.grabFocus();
            } else {
                b_enter.doClick();
            }
        }
    }//GEN-LAST:event_tx_u3KeyReleased

    private void tx_u4AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u4AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u4AncestorRemoved

    private void tx_u4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u4ActionPerformed

    private void tx_u4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u4KeyPressed
        txValidateKeyEvent(evt, tx_u4, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u4.getText().equals("")) {
                tx_u5.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u4KeyPressed

    private void tx_u4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u4KeyReleased
        if (evt.getKeyCode() == 121) {
            if (!tx_u4.getText().trim().equals("")) {
                tx_u4.grabFocus();
            } else {
                b_enter.doClick();
            }
        }
    }//GEN-LAST:event_tx_u4KeyReleased

    private void tx_u7AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u7AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u7AncestorRemoved

    private void tx_u7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u7ActionPerformed

    private void tx_u7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u7KeyPressed
        txValidateKeyEvent(evt, tx_u7, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u7.getText().equals("")) {
                tx_u8.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u7KeyPressed

    private void tx_u7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u7KeyReleased
        if (evt.getKeyCode() == 121) {
            if (!tx_u7.getText().trim().equals("")) {
                tx_u7.grabFocus();
            } else {
                b_enter.doClick();
            }
        }
    }//GEN-LAST:event_tx_u7KeyReleased

    private void tx_u8AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u8AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u8AncestorRemoved

    private void tx_u8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u8ActionPerformed

    private void tx_u8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u8KeyPressed
        txValidateKeyEvent(evt, tx_u8, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u8.getText().equals("")) {
                b_enter.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u8KeyPressed

    private void tx_u8KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u8KeyReleased
        if (evt.getKeyCode() == 121) {
            if (!tx_u8.getText().trim().equals("")) {
                tx_u8.grabFocus();
            } else {
                b_enter.doClick();
            }
        }
    }//GEN-LAST:event_tx_u8KeyReleased

    private void tx_u5AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_u5AncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u5AncestorRemoved

    private void tx_u5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_u5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_u5ActionPerformed

    private void tx_u5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u5KeyPressed
        txValidateKeyEvent(evt, tx_u5, "N", 5);
        if (evt.getKeyCode() == 39) {
            if (!tx_u5.getText().equals("")) {
                tx_u6.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_u5KeyPressed

    private void tx_u5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_u5KeyReleased
        if (evt.getKeyCode() == 121) {
            if (!tx_u5.getText().trim().equals("")) {
                tx_u5.grabFocus();
            } else {
                b_enter.doClick();
            }
        }
    }//GEN-LAST:event_tx_u5KeyReleased

    private void b_enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_enterActionPerformed
        insertDataItemsTables();
    }//GEN-LAST:event_b_enterActionPerformed

    private void tx_itemnameAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_itemnameAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_itemnameAncestorRemoved

    private void tx_itemnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_itemnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_itemnameActionPerformed

    private void tx_itemnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_itemnameKeyPressed
        txValidateKeyEvent(evt, tx_itemname, "NA", 30);
        if (evt.getKeyCode() == 10) {
            if (!tx_itemname.getText().equals("")) {
                tx_u1.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_itemnameKeyPressed

    private void tx_itemnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_itemnameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_itemnameKeyReleased

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int x = jComboBox1.getSelectedIndex();
        lebaleSet(x);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void b_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_searchActionPerformed
        if (!tx_itemid.getText().trim().isEmpty()) {
            searchMethode();
        } else {
            tx_itemid.grabFocus();
        }
    }//GEN-LAST:event_b_searchActionPerformed

    private void b_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clearActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want to Clear All", "Clear All", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearMethod();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }

    }//GEN-LAST:event_b_clearActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        tx_itemid.grabFocus();
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList1.isSelectionEmpty()) {
                tx_itemid.setText(jList1.getSelectedValue().toString());
                jScrollPane1.setVisible(false);
                tx_itemname.grabFocus();
            }
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//        if (!(tx_itemid.getText().trim().isEmpty() | tx_itemname.getText().trim().isEmpty())) {
//            int txt = selectTxt(jComboBox1.getSelectedIndex());
//            try {
//                
//                DBClass.putData("update"+jComboBox1.getSelectedItem()+" set amount='" + beroreamount + "' where  doctorid ='" + did + "' ");
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery Update!!! \n " + e, "Error", JOptionPane.ERROR_MESSAGE);
//            }
//        } else {
//            tx_itemid.grabFocus();
//        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(additem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(additem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(additem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(additem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new additem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear;
    private javax.swing.JButton b_enter;
    private javax.swing.JButton b_search;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLayeredPane jLayeredPaneTop;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel la_c2;
    private javax.swing.JLabel la_c3;
    private javax.swing.JLabel la_c4;
    private javax.swing.JLabel la_c5;
    private javax.swing.JLabel la_c6;
    private javax.swing.JLabel la_c7;
    private javax.swing.JLabel la_c8;
    private javax.swing.JLabel la_close;
    private javax.swing.JLabel la_minimise;
    private javax.swing.JLabel la_p002;
    private javax.swing.JLabel la_u002;
    private javax.swing.JLabel la_u1;
    private javax.swing.JLabel la_u2;
    private javax.swing.JLabel la_u3;
    private javax.swing.JLabel la_u4;
    private javax.swing.JLabel la_u5;
    private javax.swing.JLabel la_u6;
    private javax.swing.JLabel la_u7;
    private javax.swing.JLabel la_u8;
    private static javax.swing.JTextField tx_itemid;
    private javax.swing.JTextField tx_itemname;
    private javax.swing.JTextField tx_u1;
    private javax.swing.JTextField tx_u2;
    private javax.swing.JTextField tx_u3;
    private javax.swing.JTextField tx_u4;
    private javax.swing.JTextField tx_u5;
    private javax.swing.JTextField tx_u6;
    private javax.swing.JTextField tx_u7;
    private javax.swing.JTextField tx_u8;
    // End of variables declaration//GEN-END:variables

    private void lebaleSet(int x) {
        if (x == 0) {  //Klkaya
            la_u1.setText("SP 200g");
            la_u2.setText("SP 500g");
            la_u3.setText("50g");
            la_u4.setText("100g");
            la_u5.setText("500g");
            la_u6.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 1) {  // Paththu
            la_u1.setText("100g");
            la_u2.setText("250g");
            la_u3.setText("500g");
            la_u4.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(false);
            tx_u5.setVisible(false);
            la_c5.setVisible(false);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 2) {  // Taylaya 
            la_u1.setText("28ml");
            la_u2.setText("50ml");
            la_u3.setText("185ml");
            la_u4.setText("375ml");
            la_u5.setText("750ml");
            la_u6.setText("4.5L");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 3) { // Churnaya 
            la_u1.setText("SP 100g");
            la_u2.setText("SP 200g");
            la_u3.setText("SP 400g");
            la_u4.setText("SP 500g");
            la_u5.setText("50g");
            la_u6.setText("100g");
            la_u7.setText("500g");
            la_u8.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(true);
            tx_u7.setVisible(true);
            la_c7.setVisible(true);
            la_u8.setVisible(true);
            tx_u8.setVisible(true);
            la_c8.setVisible(false);
        }
        if (x == 4) {  // lepaya
            la_u1.setText("10g");
            la_u2.setText("30g");
            la_u3.setText("50g");
            la_u4.setText("100g");
            la_u5.setText("500g");
            la_u6.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 5) {  //paniya
            la_u1.setText("125ml");
            la_u2.setText("185ml");
            la_u3.setText("375ml");
            la_u4.setText("750ml");
            la_u5.setText("1L");
            la_u6.setText("2L");
            la_u7.setText("4.5L");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(true);
            tx_u7.setVisible(true);
            la_c7.setVisible(true);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 6) { // gugul
            la_u1.setText("SP 200g");
            la_u2.setText("SP 500g");
            la_u3.setText("50g");
            la_u4.setText("100g");
            la_u5.setText("250g");
            la_u6.setText("500g");
            la_u7.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(true);
            tx_u7.setVisible(true);
            la_c7.setVisible(true);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 7) {  // sruthaya
            la_u1.setText("SP 500ml");
            la_u2.setText("185ml");
            la_u3.setText("375ml");
            la_u4.setText("750ml");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(false);
            tx_u5.setVisible(false);
            la_c5.setVisible(false);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 8) { //Lehaya
            la_u1.setText("SP 50g");
            la_u2.setText("SP 200g");
            la_u3.setText("SP 400g");
            la_u4.setText("SP 500g");
            la_u5.setText("50g");
            la_u6.setText("100g");
            la_u7.setText("500g");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(true);
            tx_u7.setVisible(true);
            la_c7.setVisible(true);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 9) { // Kwathaya 
            la_u1.setText("375ml");
            la_u2.setText("500ml");
            la_u3.setText("750ml");
            la_u4.setText("4.5L");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(false);
            tx_u5.setVisible(false);
            la_c5.setVisible(false);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 10) {  //Arishataya 
            la_u1.setText("375ml");
            la_u2.setText("750ml");
            la_u3.setText("1L");
            la_u4.setText("2L");
            la_u5.setText("4.5L");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);

        }
        if (x == 11) { //Rasayanaya 
            la_u1.setText("SP 100g");
            la_u2.setText("SP 200g");
            la_u3.setText("SP 400g");
            la_u4.setText("SP 500g");
            la_u5.setText("50g");
            la_u6.setText("100g");
            la_u7.setText("500g");
            la_u8.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(true);
            tx_u6.setVisible(true);
            la_c6.setVisible(true);
            la_u7.setVisible(true);
            tx_u7.setVisible(true);
            la_c7.setVisible(true);
            la_u8.setVisible(true);
            tx_u8.setVisible(true);
            la_c8.setVisible(true);
        }
        if (x == 12) { //Asawaya 
            la_u1.setText("375ml");
            la_u2.setText("750ml");
            la_u3.setText("1L");
            la_u4.setText("2L");
            la_u5.setText("4.5L");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(true);
            tx_u4.setVisible(true);
            la_c4.setVisible(true);
            la_u5.setVisible(true);
            tx_u5.setVisible(true);
            la_c5.setVisible(true);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);

        }
        if (x == 13) { //thewilla
            la_u1.setText("250g");
            la_u2.setText("500g");
            la_u3.setText("1kg");
            la_u2.setVisible(true);
            tx_u2.setVisible(true);
            la_c2.setVisible(true);
            la_u3.setVisible(true);
            tx_u3.setVisible(true);
            la_c3.setVisible(true);
            la_u4.setVisible(false);
            tx_u4.setVisible(false);
            la_c4.setVisible(false);
            la_u5.setVisible(false);
            tx_u5.setVisible(false);
            la_c5.setVisible(false);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c4.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
        if (x == 14) { // other
            la_u1.setText("unit01");
            la_u2.setVisible(false);
            tx_u2.setVisible(false);
            la_c2.setVisible(false);
            la_u3.setVisible(false);
            tx_u3.setVisible(false);
            la_c3.setVisible(false);
            la_u4.setVisible(false);
            tx_u4.setVisible(false);
            la_c4.setVisible(false);
            la_u5.setVisible(false);
            tx_u5.setVisible(false);
            la_c5.setVisible(false);
            la_u6.setVisible(false);
            tx_u6.setVisible(false);
            la_c6.setVisible(false);
            la_u7.setVisible(false);
            tx_u7.setVisible(false);
            la_c7.setVisible(false);
            la_u8.setVisible(false);
            tx_u8.setVisible(false);
            la_c8.setVisible(false);
        }
    }

    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {

            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }

    public void clearMethod() {
        la_u1.setText("");
        la_u2.setText("");
        la_u3.setText("");
        la_u4.setText("");
        la_u5.setText("");
        la_u6.setText("");
        la_u5.setText("");
        la_u6.setText("");
        la_u7.setText("");
        la_u8.setText("");
        tx_u1.setText("");
        tx_u2.setText("");
        tx_u3.setText("");
        tx_u4.setText("");
        tx_u5.setText("");
        tx_u6.setText("");
        tx_u5.setText("");
        tx_u6.setText("");
        tx_u7.setText("");
        tx_u8.setText("");
        tx_itemname.setText("");
        tx_itemid.setText("");
        jComboBox1.setSelectedIndex(0);
    }

    private void insertDataItemsTables() {

        String tableName = jComboBox1.getSelectedItem().toString();
        String id = tx_itemid.getText();
        String name = tx_itemname.getText();
        double u1, u2, u3, u4, u5, u6, u7, u8;
        u1 = Double.parseDouble(tx_u1.getText());
        if (!tx_u2.getText().trim().isEmpty()) {
            u2 = Double.parseDouble(tx_u2.getText());
        } else {
            u2 = 0;
        }
        if (!tx_u3.getText().trim().isEmpty()) {
            u3 = Double.parseDouble(tx_u3.getText());
        } else {
            u3 = 0;
        }
        if (!tx_u4.getText().trim().isEmpty()) {
            u4 = Double.parseDouble(tx_u4.getText());
        } else {
            u4 = 0;
        }
        if (!tx_u5.getText().trim().isEmpty()) {
            u5 = Double.parseDouble(tx_u5.getText());
        } else {
            u5 = 0;
        }
        if (!tx_u6.getText().trim().isEmpty()) {
            u6 = Double.parseDouble(tx_u6.getText());
        } else {
            u6 = 0;
        }
        if (!tx_u7.getText().trim().isEmpty()) {
            u7 = Double.parseDouble(tx_u7.getText());
        } else {
            u7 = 0;
        }
        if (!tx_u8.getText().trim().isEmpty()) {
            u8 = Double.parseDouble(tx_u8.getText());
        } else {
            u8 = 0;
        }

        if (tableName.equals("Klkaya")) {
            try {
                DBClass.putData("insert into kalkaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Paththu")) {
            try {
                DBClass.putData("insert into paththu values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Taylaya")) {
            try {
                DBClass.putData("insert into taylaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Churnaya")) {
            try {
                DBClass.putData("insert into churnaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "','" + u7 + "' ,'" + u8 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Lepaya")) {
            try {
                DBClass.putData("insert into lepaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Paniya")) {
            try {
                DBClass.putData("insert into paniya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "','" + u7 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Gugul")) {
            try {
                DBClass.putData("insert into gugul values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "','" + u7 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Sruthaya")) {
            try {
                DBClass.putData("insert into sruthaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Lehaya")) {
            try {
                DBClass.putData("insert into lehaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "','" + u7 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Kwathaya")) {
            try {
                DBClass.putData("insert into kwathaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Arishataya")) {
            try {
                DBClass.putData("insert into arishtaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "' ,'" + u5 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Rasayanaya")) {
            try {
                DBClass.putData("insert into rasayanaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "','" + u5 + "' ,'" + u6 + "','" + u7 + "' ,'" + u8 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Asawaya")) {
            try {
                DBClass.putData("insert into asawaya values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "' ,'" + u4 + "' ,'" + u5 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Thewilla")) {
            try {
                DBClass.putData("insert into thewilla values('" + id + "' , '" + name + "' , '" + u1 + "' ,'" + u2 + "' ,'" + u3 + "'  )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (tableName.equals("Other")) {
            try {
                DBClass.putData("insert into other values('" + id + "' , '" + name + "' , '" + u1 + "' )");
                JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY");
                clearMethodItems();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + id + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_itemid.grabFocus();
                }
            } catch (Exception ex) {
                Logger.getLogger(additem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void searchMethode() {
        try {
            String tableName = jComboBox1.getSelectedItem().toString();
            int silectTableName = jComboBox1.getSelectedIndex();
            String searchValue = tx_itemid.getText().trim();
            lebaleSet(silectTableName);
            String sql = "select * from  " + tableName + " where id ='" + searchValue + "'";
            DBClass.getData(sql);
            if (silectTableName == 0) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("sp200g"));
                    tx_u2.setText(DBClass.r.getString("sp500g"));
                    tx_u3.setText(DBClass.r.getString("50g"));
                    tx_u4.setText(DBClass.r.getString("100g"));
                    tx_u5.setText(DBClass.r.getString("500g"));
                    tx_u6.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 1) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("100g"));
                    tx_u2.setText(DBClass.r.getString("250g"));
                    tx_u3.setText(DBClass.r.getString("500g"));
                    tx_u4.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 2) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("28ml"));
                    tx_u2.setText(DBClass.r.getString("50ml"));
                    tx_u3.setText(DBClass.r.getString("185ml"));
                    tx_u4.setText(DBClass.r.getString("375ml"));
                    tx_u5.setText(DBClass.r.getString("750ml"));
                    tx_u6.setText(DBClass.r.getString("4_5L"));
                }
            }
            if (silectTableName == 3) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("sp100g"));
                    tx_u2.setText(DBClass.r.getString("sp200g"));
                    tx_u3.setText(DBClass.r.getString("sp400g"));
                    tx_u4.setText(DBClass.r.getString("sp500g"));
                    tx_u5.setText(DBClass.r.getString("50g"));
                    tx_u6.setText(DBClass.r.getString("100g"));
                    tx_u7.setText(DBClass.r.getString("500g"));
                    tx_u8.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 4) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("10g"));
                    tx_u2.setText(DBClass.r.getString("30g"));
                    tx_u3.setText(DBClass.r.getString("50g"));
                    tx_u4.setText(DBClass.r.getString("100g"));
                    tx_u5.setText(DBClass.r.getString("500g"));
                    tx_u6.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 5) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("125ml"));
                    tx_u2.setText(DBClass.r.getString("185ml"));
                    tx_u3.setText(DBClass.r.getString("375ml"));
                    tx_u4.setText(DBClass.r.getString("750ml"));
                    tx_u5.setText(DBClass.r.getString("1L"));
                    tx_u6.setText(DBClass.r.getString("2L"));
                    tx_u7.setText(DBClass.r.getString("4_5L"));
                }
            }
            if (silectTableName == 6) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("sp200g"));
                    tx_u2.setText(DBClass.r.getString("sp500g"));
                    tx_u3.setText(DBClass.r.getString("50g"));
                    tx_u4.setText(DBClass.r.getString("100g"));
                    tx_u5.setText(DBClass.r.getString("250g"));
                    tx_u6.setText(DBClass.r.getString("500g"));
                    tx_u7.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 7) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("sp500ml"));
                    tx_u2.setText(DBClass.r.getString("185ml"));
                    tx_u3.setText(DBClass.r.getString("375ml"));
                    tx_u4.setText(DBClass.r.getString("750ml"));
                }
            }
            if (silectTableName == 8) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("sp50g"));
                    tx_u2.setText(DBClass.r.getString("sp200g"));
                    tx_u3.setText(DBClass.r.getString("sp400g"));
                    tx_u4.setText(DBClass.r.getString("sp500g"));
                    tx_u5.setText(DBClass.r.getString("50g"));
                    tx_u6.setText(DBClass.r.getString("100g"));
                    tx_u7.setText(DBClass.r.getString("500g"));
                }
            }
            if (silectTableName == 9) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("375ml"));
                    tx_u2.setText(DBClass.r.getString("500ml"));
                    tx_u3.setText(DBClass.r.getString("750ml"));
                    tx_u4.setText(DBClass.r.getString("4_5L"));
                }
            }
            if (silectTableName == 10) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("375ml"));
                    tx_u2.setText(DBClass.r.getString("750ml"));
                    tx_u3.setText(DBClass.r.getString("1L"));
                    tx_u4.setText(DBClass.r.getString("2L"));
                    tx_u5.setText(DBClass.r.getString("4_5L"));
                }
            }
            if (silectTableName == 11) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("sp100g"));
                    tx_u2.setText(DBClass.r.getString("sp200g"));
                    tx_u3.setText(DBClass.r.getString("sp400g"));
                    tx_u4.setText(DBClass.r.getString("sp500g"));
                    tx_u5.setText(DBClass.r.getString("50g"));
                    tx_u6.setText(DBClass.r.getString("100g"));
                    tx_u7.setText(DBClass.r.getString("500g"));
                    tx_u8.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 12) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("375ml"));
                    tx_u2.setText(DBClass.r.getString("750ml"));
                    tx_u3.setText(DBClass.r.getString("1L"));
                    tx_u4.setText(DBClass.r.getString("2L"));
                    tx_u5.setText(DBClass.r.getString("4_5L"));
                }
            }
            if (silectTableName == 13) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("250g"));
                    tx_u2.setText(DBClass.r.getString("500g"));
                    tx_u3.setText(DBClass.r.getString("1kg"));
                }
            }
            if (silectTableName == 14) {
                while (DBClass.r.next()) {
                    tx_itemname.setText(DBClass.r.getString("productName"));
                    tx_u1.setText(DBClass.r.getString("unit01"));
                }
            }

        } catch (SQLException e) {
            //  System.out.println(e);
            JOptionPane.showMessageDialog(null, "Wrong id or name \n" + e.getSQLState());
            tx_itemid.grabFocus();
        } catch (Exception e) {
           // e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Wrong id or name \n" + e);
            tx_itemid.grabFocus();
        }

        /*
         com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure
         The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.

         */
    }

    private void clearMethodItems() {
        tx_u1.setText(null);
        tx_u2.setText(null);
        tx_u3.setText(null);
        tx_u4.setText(null);
        tx_u5.setText(null);
        tx_u6.setText(null);
        tx_u7.setText(null);
        tx_u8.setText(null);
        tx_itemid.setText(null);
        tx_itemname.setText(null);
        jComboBox1.grabFocus();
        jComboBox1.showPopup();
    }

    public static void searchANDList(String dbtable, String searchAgainsed, String value, JList list) {  //  
        try {
            DBClass.getData("select " + searchAgainsed + " from " + dbtable + " where " + searchAgainsed + " like '" + value + "%' order by " + searchAgainsed);
            System.out.println("query ekt psse");
            Vector v = new Vector();
            list.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString(searchAgainsed));
                    list.setListData(v);
                    //   System.out.println("while ek athule");
                }
            } else {
                list.setListData(v);
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "Wrong details " + sqle.getSQLState());
            tx_itemid.grabFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error Massage Found" + e.getMessage());
            tx_itemid.grabFocus();
        }
    }

    private int selectTxt(int x) {

        if (x == 0) {  //Klkaya
            return 6;
        } else if (x == 1) {  // Paththu
            return 4;
        } else if (x == 2) {  // Taylaya 
            return 6;
        } else if (x == 3) { // Churnaya 
            return 8;
        } else if (x == 4) {  // lepaya
            return 6;
        } else if (x == 5) {  //paniya
            return 7;
        } else if (x == 6) { // gugul
            return 7;
        } else if (x == 7) {  // sruthaya
            return 4;
        } else if (x == 8) { //Lehaya
            return 7;
        } else if (x == 9) { // Kwathaya 
            return 4;
        } else if (x == 10) {  //Arishataya 
            return 5;
        } else if (x == 11) { //Rasayanaya 
            return 8;
        } else if (x == 12) { //Asawaya 
            return 5;
        } else if (x == 13) { //thewilla
            return 3;
        } else { // other
            return 1;
        }
    }

}
