/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import small.bill.DBClass;
import small.bill.SaveFilePath;

/**
 *
 * @author CHETHANA
 */
public class invoice extends javax.swing.JFrame {

    /**
     * Creates new form invoice
     */
    public static int RN = 0;
    public static double VOU = 0;
    public static int iddoctor;
    public static double buyprice = 0;
    private static DecimalFormat df2 = new DecimalFormat("#.##");

    public invoice() {
        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        imagei();
        lastNumber();
        dateTime();
        fristVisible();
        clearjLayeredPane_invoice();
        checkFirstDateAndSaveAmountAndClearDoctorAmount();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane_jTable_jdoctoramount = new javax.swing.JScrollPane();
        jTable_jdoctoramount = new javax.swing.JTable();
        jScrollPanej_Table_rxamount = new javax.swing.JScrollPane();
        jTable_rxamount = new javax.swing.JTable();
        jLayeredPaneMenu = new javax.swing.JLayeredPane();
        logo = new javax.swing.JLabel();
        la_report = new javax.swing.JLabel();
        la_invoice = new javax.swing.JLabel();
        la_doctors = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLayeredPaneTop = new javax.swing.JLayeredPane();
        la_close = new javax.swing.JLabel();
        la_minimise = new javax.swing.JLabel();
        la_date = new javax.swing.JLabel();
        la_time = new javax.swing.JLabel();
        jLayeredPane_Doctors = new javax.swing.JLayeredPane();
        jScrollPane_jLayeredPane_Doctors = new javax.swing.JScrollPane();
        jList_jLayeredPane_Doctors = new javax.swing.JList();
        jLabel37 = new javax.swing.JLabel();
        b_enter_jLayeredPaneDoctors = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        tx_id_jLayeredPane_doctoers = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        tx_name_jLayeredPane_doctoers = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        tx_phone_jLayeredPane_doctoers = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        tx_address_jLayeredPane_doctoers = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        tx_banknumber_jLayeredPane_doctoers = new javax.swing.JTextField();
        tx_acountnumber_jLayeredPane_doctoers = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jCheckBox_active_jLayeredPane_doctoers = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_jpanal_doctors = new javax.swing.JTable();
        b_search_jLayeredPaneDoctors1 = new javax.swing.JButton();
        la_lastid_doctors = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        b_clear_jLayeredPaneDoctors1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        tx_branchname_jLayeredPane_doctoers = new javax.swing.JTextField();
        jLayeredPaneReport = new javax.swing.JLayeredPane();
        jLabel23 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        b_searchamounts_jLayeredPaneReport = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_report_jLayeredPaneReport = new javax.swing.JTable();
        b_savepdf_jLayeredPaneReport = new javax.swing.JButton();
        b_searchinvoices_jLayeredPaneReport = new javax.swing.JButton();
        jComboBox1_invoice_type_jLayeredPaneReport = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        b_ouramount_jLayeredPaneReport = new javax.swing.JButton();
        jLayeredPane_invoice = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane_did_jLayeredPane_invoice = new javax.swing.JScrollPane();
        jList_did_jLayeredPane_invoice = new javax.swing.JList();
        tx_refno_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        la_lastRxnumber = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tx_billto_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tx_addressB_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        tx_phoneB_jLayeredPane_invoice = new javax.swing.JTextField();
        tx_phoneD_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tx_addressD_jLayeredPane_invoice = new javax.swing.JTextField();
        tx_deliverto_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jCheckBox_issame_jLayeredPane_invoice = new javax.swing.JCheckBox();
        combo_paymentmethod_jLayeredPane_invoice = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tx_productname_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        tx_unitprice_jLayeredPane_invoice = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        tx_qty_jLayeredPane_invoice = new javax.swing.JTextField();
        jScrollPane_item_jLayeredPane_invoice = new javax.swing.JScrollPane();
        jList_item_jLayeredPane_invoice = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_rxitem_jLayeredPane_invoice = new javax.swing.JTable();
        b_print_jLayeredPane_invoice = new javax.swing.JButton();
        b_remove_jLayeredPane_invoice = new javax.swing.JButton();
        tx_subtotal_jLayeredPane_invoice = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        tx_shipingcost_jLayeredPane_invoice = new javax.swing.JTextField();
        tx_total_jLayeredPane_invoice = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        tx_voucher_jLayeredPane_invoice = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        la_did_jLayeredPane_invoice1 = new javax.swing.JLabel();
        la_cc_jLayeredPane_invoice1 = new javax.swing.JLabel();
        tx_iddoctor_jLayeredPane_invoice1 = new javax.swing.JTextField();
        jComboBox_catogery_jLayeredPane_invoice = new javax.swing.JComboBox();
        jComboBox_units_jLayeredPane_invoice = new javax.swing.JComboBox();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        combo_type_jLayeredPane_invoice = new javax.swing.JComboBox();
        la_buyprice_jLayeredPane_invoice = new javax.swing.JLabel();
        la_c_buyprice_jLayeredPane_invoice = new javax.swing.JLabel();
        tx_buyprice_jLayeredPane_invoice = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_item_jLayeredPane_invoice1 = new javax.swing.JTable();
        b_lastprint_jLayeredPane_invoice = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RefNo", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable2);

        jTable_jdoctoramount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Doctor ID", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane_jTable_jdoctoramount.setViewportView(jTable_jdoctoramount);

        jTable_rxamount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RefNo", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPanej_Table_rxamount.setViewportView(jTable_rxamount);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1280, 960));
        setUndecorated(true);
        setPreferredSize(null);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(null);

        jLayeredPaneMenu.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPaneMenu.setOpaque(true);
        jLayeredPaneMenu.add(logo);
        logo.setBounds(0, 275, 140, 140);

        la_report.setBackground(new java.awt.Color(255, 255, 255));
        la_report.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_report.setForeground(new java.awt.Color(0, 0, 0));
        la_report.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_report.setText("Report");
        la_report.setOpaque(true);
        la_report.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_reportMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_reportMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_reportMouseExited(evt);
            }
        });
        jLayeredPaneMenu.add(la_report);
        la_report.setBounds(6, 118, 90, 52);

        la_invoice.setBackground(new java.awt.Color(255, 255, 255));
        la_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_invoice.setForeground(new java.awt.Color(0, 0, 0));
        la_invoice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_invoice.setText("Invoice");
        la_invoice.setOpaque(true);
        la_invoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_invoiceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_invoiceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_invoiceMouseExited(evt);
            }
        });
        jLayeredPaneMenu.add(la_invoice);
        la_invoice.setBounds(6, 29, 96, 52);

        la_doctors.setBackground(new java.awt.Color(255, 255, 255));
        la_doctors.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_doctors.setForeground(new java.awt.Color(0, 0, 0));
        la_doctors.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_doctors.setText("Doctors");
        la_doctors.setOpaque(true);
        la_doctors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_doctorsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_doctorsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_doctorsMouseExited(evt);
            }
        });
        jLayeredPaneMenu.add(la_doctors);
        la_doctors.setBounds(6, 506, 100, 52);

        jLabel55.setBackground(new java.awt.Color(255, 255, 255));
        jLabel55.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(0, 0, 0));
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Items");
        jLabel55.setOpaque(true);
        jLabel55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel55MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel55MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel55MouseExited(evt);
            }
        });
        jLayeredPaneMenu.add(jLabel55);
        jLabel55.setBounds(6, 576, 100, 52);

        jLabel59.setBackground(new java.awt.Color(255, 255, 255));
        jLabel59.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(0, 0, 0));
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("Employee");
        jLabel59.setOpaque(true);
        jLabel59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel59MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel59MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel59MouseExited(evt);
            }
        });
        jLayeredPaneMenu.add(jLabel59);
        jLabel59.setBounds(6, 646, 100, 52);

        getContentPane().add(jLayeredPaneMenu);
        jLayeredPaneMenu.setBounds(0, 35, 140, 730);

        jLayeredPaneTop.setBackground(new java.awt.Color(4, 37, 87));
        jLayeredPaneTop.setMinimumSize(new java.awt.Dimension(1380, 45));
        jLayeredPaneTop.setOpaque(true);

        la_close.setBackground(new java.awt.Color(4, 37, 87));
        la_close.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        la_close.setForeground(new java.awt.Color(255, 255, 255));
        la_close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_close.setText("x");
        la_close.setOpaque(true);
        la_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_closeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_closeMouseExited(evt);
            }
        });

        la_minimise.setBackground(new java.awt.Color(4, 37, 87));
        la_minimise.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        la_minimise.setForeground(new java.awt.Color(255, 255, 255));
        la_minimise.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_minimise.setText("-");
        la_minimise.setOpaque(true);
        la_minimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_minimiseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_minimiseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_minimiseMouseExited(evt);
            }
        });

        la_date.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_date.setForeground(new java.awt.Color(255, 255, 255));
        la_date.setText("D");

        la_time.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_time.setForeground(new java.awt.Color(255, 255, 255));
        la_time.setText("T");

        javax.swing.GroupLayout jLayeredPaneTopLayout = new javax.swing.GroupLayout(jLayeredPaneTop);
        jLayeredPaneTop.setLayout(jLayeredPaneTopLayout);
        jLayeredPaneTopLayout.setHorizontalGroup(
            jLayeredPaneTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPaneTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(la_date, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(la_time, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 911, Short.MAX_VALUE)
                .addComponent(la_minimise, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(la_close, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jLayeredPaneTopLayout.setVerticalGroup(
            jLayeredPaneTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPaneTopLayout.createSequentialGroup()
                .addGroup(jLayeredPaneTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPaneTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(la_minimise, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(la_close, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPaneTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(la_date, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(la_time, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 15, Short.MAX_VALUE))
        );
        jLayeredPaneTop.setLayer(la_close, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTop.setLayer(la_minimise, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTop.setLayer(la_date, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPaneTop.setLayer(la_time, javax.swing.JLayeredPane.DEFAULT_LAYER);

        getContentPane().add(jLayeredPaneTop);
        jLayeredPaneTop.setBounds(0, 0, 1280, 30);

        jLayeredPane_Doctors.setBackground(new java.awt.Color(174, 180, 184));
        jLayeredPane_Doctors.setForeground(new java.awt.Color(0, 0, 0));
        jLayeredPane_Doctors.setOpaque(true);

        jList_jLayeredPane_Doctors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_jLayeredPane_DoctorsKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList_jLayeredPane_DoctorsKeyReleased(evt);
            }
        });
        jScrollPane_jLayeredPane_Doctors.setViewportView(jList_jLayeredPane_Doctors);

        jLayeredPane_Doctors.add(jScrollPane_jLayeredPane_Doctors);
        jScrollPane_jLayeredPane_Doctors.setBounds(210, 130, 200, 131);

        jLabel37.setBackground(new java.awt.Color(23, 160, 160));
        jLabel37.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Doctor");
        jLabel37.setOpaque(true);
        jLayeredPane_Doctors.add(jLabel37);
        jLabel37.setBounds(0, 0, 1170, 40);

        b_enter_jLayeredPaneDoctors.setBackground(new java.awt.Color(37, 65, 151));
        b_enter_jLayeredPaneDoctors.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_enter_jLayeredPaneDoctors.setForeground(new java.awt.Color(0, 0, 0));
        b_enter_jLayeredPaneDoctors.setText("Enter");
        b_enter_jLayeredPaneDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_enter_jLayeredPaneDoctorsActionPerformed(evt);
            }
        });
        jLayeredPane_Doctors.add(b_enter_jLayeredPaneDoctors);
        b_enter_jLayeredPaneDoctors.setBounds(960, 270, 170, 50);

        jLabel38.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 0));
        jLabel38.setText(":");
        jLayeredPane_Doctors.add(jLabel38);
        jLabel38.setBounds(200, 50, 10, 29);

        tx_id_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_id_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_id_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_id_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_id_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_id_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_id_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_id_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_id_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_id_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_id_jLayeredPane_doctoers);
        tx_id_jLayeredPane_doctoers.setBounds(210, 90, 200, 38);

        jLabel40.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 0, 0));
        jLabel40.setText("Doctor's Name");
        jLayeredPane_Doctors.add(jLabel40);
        jLabel40.setBounds(500, 90, 190, 29);

        jLabel41.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText(":");
        jLayeredPane_Doctors.add(jLabel41);
        jLabel41.setBounds(690, 90, 10, 29);

        tx_name_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_name_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_name_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_name_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_name_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_name_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_name_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_name_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_name_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_name_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_name_jLayeredPane_doctoers);
        tx_name_jLayeredPane_doctoers.setBounds(700, 90, 430, 38);

        jLabel42.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 0));
        jLabel42.setText("Phone Number");
        jLayeredPane_Doctors.add(jLabel42);
        jLabel42.setBounds(10, 210, 190, 29);

        jLabel43.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setText(":");
        jLayeredPane_Doctors.add(jLabel43);
        jLabel43.setBounds(200, 210, 10, 29);

        tx_phone_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_phone_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_phone_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_phone_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_phone_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_phone_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_phone_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_phone_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_phone_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_phone_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_phone_jLayeredPane_doctoers);
        tx_phone_jLayeredPane_doctoers.setBounds(210, 210, 200, 38);

        jLabel44.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 0));
        jLabel44.setText("Address");
        jLayeredPane_Doctors.add(jLabel44);
        jLabel44.setBounds(10, 160, 190, 29);

        jLabel45.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 0));
        jLabel45.setText(":");
        jLayeredPane_Doctors.add(jLabel45);
        jLabel45.setBounds(200, 160, 10, 29);

        tx_address_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_address_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_address_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_address_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_address_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_address_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_address_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_address_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_address_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_address_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_address_jLayeredPane_doctoers);
        tx_address_jLayeredPane_doctoers.setBounds(210, 160, 920, 38);

        jLabel46.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(0, 0, 0));
        jLabel46.setText(":");
        jLayeredPane_Doctors.add(jLabel46);
        jLabel46.setBounds(690, 270, 10, 29);

        jLabel47.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(0, 0, 0));
        jLabel47.setText("Active/Inactive");
        jLayeredPane_Doctors.add(jLabel47);
        jLabel47.setBounds(500, 270, 190, 29);

        jLabel48.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(0, 0, 0));
        jLabel48.setText("Bank Name");
        jLayeredPane_Doctors.add(jLabel48);
        jLabel48.setBounds(10, 310, 190, 29);

        jLabel49.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(0, 0, 0));
        jLabel49.setText(":");
        jLayeredPane_Doctors.add(jLabel49);
        jLabel49.setBounds(200, 260, 10, 29);

        tx_banknumber_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_banknumber_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_banknumber_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_banknumber_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_banknumber_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_banknumber_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_banknumber_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_banknumber_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_banknumber_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_banknumber_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_banknumber_jLayeredPane_doctoers);
        tx_banknumber_jLayeredPane_doctoers.setBounds(210, 310, 200, 38);

        tx_acountnumber_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_acountnumber_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_acountnumber_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_acountnumber_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_acountnumber_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_acountnumber_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_acountnumber_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_acountnumber_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_acountnumber_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_acountnumber_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_acountnumber_jLayeredPane_doctoers);
        tx_acountnumber_jLayeredPane_doctoers.setBounds(700, 210, 430, 38);

        jLabel50.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(0, 0, 0));
        jLabel50.setText(":");
        jLayeredPane_Doctors.add(jLabel50);
        jLabel50.setBounds(690, 210, 10, 29);

        jLabel51.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(0, 0, 0));
        jLabel51.setText("Acount Number");
        jLayeredPane_Doctors.add(jLabel51);
        jLabel51.setBounds(500, 210, 190, 29);

        jCheckBox_active_jLayeredPane_doctoers.setText(" Click");
        jCheckBox_active_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_active_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        jCheckBox_active_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBox_active_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(jCheckBox_active_jLayeredPane_doctoers);
        jCheckBox_active_jLayeredPane_doctoers.setBounds(700, 270, 60, 30);

        jTable_jpanal_doctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor's ID", "Name", "Address", "Phone Number", "Acount Number", "Bank Name", "Branch Name", "Is Active"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable_jpanal_doctors);
        if (jTable_jpanal_doctors.getColumnModel().getColumnCount() > 0) {
            jTable_jpanal_doctors.getColumnModel().getColumn(0).setMinWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(1).setMinWidth(150);
            jTable_jpanal_doctors.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTable_jpanal_doctors.getColumnModel().getColumn(1).setMaxWidth(150);
            jTable_jpanal_doctors.getColumnModel().getColumn(2).setMinWidth(300);
            jTable_jpanal_doctors.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTable_jpanal_doctors.getColumnModel().getColumn(2).setMaxWidth(300);
            jTable_jpanal_doctors.getColumnModel().getColumn(3).setMinWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(4).setMinWidth(120);
            jTable_jpanal_doctors.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable_jpanal_doctors.getColumnModel().getColumn(4).setMaxWidth(120);
            jTable_jpanal_doctors.getColumnModel().getColumn(5).setMinWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable_jpanal_doctors.getColumnModel().getColumn(7).setMinWidth(50);
            jTable_jpanal_doctors.getColumnModel().getColumn(7).setPreferredWidth(50);
            jTable_jpanal_doctors.getColumnModel().getColumn(7).setMaxWidth(50);
        }

        jLayeredPane_Doctors.add(jScrollPane3);
        jScrollPane3.setBounds(20, 350, 1020, 310);

        b_search_jLayeredPaneDoctors1.setBackground(new java.awt.Color(24, 54, 145));
        b_search_jLayeredPaneDoctors1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_search_jLayeredPaneDoctors1.setForeground(new java.awt.Color(0, 0, 0));
        b_search_jLayeredPaneDoctors1.setText("Search");
        b_search_jLayeredPaneDoctors1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_search_jLayeredPaneDoctors1ActionPerformed(evt);
            }
        });
        jLayeredPane_Doctors.add(b_search_jLayeredPaneDoctors1);
        b_search_jLayeredPaneDoctors1.setBounds(20, 670, 190, 50);

        la_lastid_doctors.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_lastid_doctors.setForeground(new java.awt.Color(0, 0, 0));
        la_lastid_doctors.setText("last ID");
        jLayeredPane_Doctors.add(la_lastid_doctors);
        la_lastid_doctors.setBounds(210, 50, 190, 29);

        jLabel56.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(0, 0, 0));
        jLabel56.setText("Doctor's ID");
        jLayeredPane_Doctors.add(jLabel56);
        jLabel56.setBounds(10, 90, 190, 29);

        jLabel39.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 0));
        jLabel39.setText(":");
        jLayeredPane_Doctors.add(jLabel39);
        jLabel39.setBounds(200, 90, 10, 29);

        jLabel57.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(0, 0, 0));
        jLabel57.setText("Last ID");
        jLayeredPane_Doctors.add(jLabel57);
        jLabel57.setBounds(10, 50, 190, 29);

        b_clear_jLayeredPaneDoctors1.setBackground(new java.awt.Color(210, 50, 50));
        b_clear_jLayeredPaneDoctors1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_clear_jLayeredPaneDoctors1.setForeground(new java.awt.Color(0, 0, 0));
        b_clear_jLayeredPaneDoctors1.setText("Clear");
        b_clear_jLayeredPaneDoctors1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clear_jLayeredPaneDoctors1ActionPerformed(evt);
            }
        });
        jLayeredPane_Doctors.add(b_clear_jLayeredPaneDoctors1);
        b_clear_jLayeredPaneDoctors1.setBounds(970, 670, 160, 45);

        jButton1.setBackground(new java.awt.Color(66, 55, 231));
        jButton1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jLayeredPane_Doctors.add(jButton1);
        jButton1.setBounds(500, 670, 190, 50);

        jLabel52.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(0, 0, 0));
        jLabel52.setText("Branch Name");
        jLayeredPane_Doctors.add(jLabel52);
        jLabel52.setBounds(10, 260, 190, 29);

        jLabel58.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 0, 0));
        jLabel58.setText(":");
        jLayeredPane_Doctors.add(jLabel58);
        jLabel58.setBounds(200, 310, 10, 29);

        tx_branchname_jLayeredPane_doctoers.setBackground(new java.awt.Color(255, 255, 255));
        tx_branchname_jLayeredPane_doctoers.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_branchname_jLayeredPane_doctoers.setForeground(new java.awt.Color(0, 0, 0));
        tx_branchname_jLayeredPane_doctoers.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_branchname_jLayeredPane_doctoersAncestorRemoved(evt);
            }
        });
        tx_branchname_jLayeredPane_doctoers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_branchname_jLayeredPane_doctoersActionPerformed(evt);
            }
        });
        tx_branchname_jLayeredPane_doctoers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_branchname_jLayeredPane_doctoersKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_branchname_jLayeredPane_doctoersKeyReleased(evt);
            }
        });
        jLayeredPane_Doctors.add(tx_branchname_jLayeredPane_doctoers);
        tx_branchname_jLayeredPane_doctoers.setBounds(210, 260, 200, 38);

        getContentPane().add(jLayeredPane_Doctors);
        jLayeredPane_Doctors.setBounds(145, 40, 1135, 730);

        jLayeredPaneReport.setBackground(new java.awt.Color(174, 180, 184));

        jLabel23.setBackground(new java.awt.Color(23, 160, 160));
        jLabel23.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Report");
        jLabel23.setOpaque(true);
        jLayeredPaneReport.add(jLabel23);
        jLabel23.setBounds(0, -1, 1170, 40);

        jLabel27.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText(":");
        jLayeredPaneReport.add(jLabel27);
        jLabel27.setBounds(160, 50, 20, 29);

        jLabel33.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 0));
        jLabel33.setText("Date");
        jLayeredPaneReport.add(jLabel33);
        jLabel33.setBounds(50, 50, 110, 29);

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setForeground(new java.awt.Color(0, 0, 0));
        jLayeredPaneReport.add(jDateChooser1);
        jDateChooser1.setBounds(180, 50, 170, 30);

        b_searchamounts_jLayeredPaneReport.setBackground(new java.awt.Color(243, 209, 141));
        b_searchamounts_jLayeredPaneReport.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_searchamounts_jLayeredPaneReport.setForeground(new java.awt.Color(0, 0, 0));
        b_searchamounts_jLayeredPaneReport.setText("Report Amount");
        b_searchamounts_jLayeredPaneReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_searchamounts_jLayeredPaneReportActionPerformed(evt);
            }
        });
        jLayeredPaneReport.add(b_searchamounts_jLayeredPaneReport);
        b_searchamounts_jLayeredPaneReport.setBounds(890, 220, 240, 50);

        table_report_jLayeredPaneReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ref.No", "Payment Method", "Sub Total", "Shiping Cost", "Voucher", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_report_jLayeredPaneReport);
        if (table_report_jLayeredPaneReport.getColumnModel().getColumnCount() > 0) {
            table_report_jLayeredPaneReport.getColumnModel().getColumn(1).setMinWidth(125);
            table_report_jLayeredPaneReport.getColumnModel().getColumn(1).setPreferredWidth(125);
            table_report_jLayeredPaneReport.getColumnModel().getColumn(1).setMaxWidth(125);
        }

        jLayeredPaneReport.add(jScrollPane2);
        jScrollPane2.setBounds(60, 110, 740, 610);

        b_savepdf_jLayeredPaneReport.setBackground(new java.awt.Color(82, 243, 82));
        b_savepdf_jLayeredPaneReport.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        b_savepdf_jLayeredPaneReport.setForeground(new java.awt.Color(0, 0, 0));
        b_savepdf_jLayeredPaneReport.setText("Save PDF");
        b_savepdf_jLayeredPaneReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_savepdf_jLayeredPaneReportActionPerformed(evt);
            }
        });
        jLayeredPaneReport.add(b_savepdf_jLayeredPaneReport);
        b_savepdf_jLayeredPaneReport.setBounds(890, 620, 260, 90);

        b_searchinvoices_jLayeredPaneReport.setBackground(new java.awt.Color(19, 198, 190));
        b_searchinvoices_jLayeredPaneReport.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_searchinvoices_jLayeredPaneReport.setForeground(new java.awt.Color(0, 0, 0));
        b_searchinvoices_jLayeredPaneReport.setText("Report Invoice");
        b_searchinvoices_jLayeredPaneReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_searchinvoices_jLayeredPaneReportActionPerformed(evt);
            }
        });
        jLayeredPaneReport.add(b_searchinvoices_jLayeredPaneReport);
        b_searchinvoices_jLayeredPaneReport.setBounds(890, 50, 240, 50);

        jComboBox1_invoice_type_jLayeredPaneReport.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1_invoice_type_jLayeredPaneReport.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jComboBox1_invoice_type_jLayeredPaneReport.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox1_invoice_type_jLayeredPaneReport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "RX" }));
        jLayeredPaneReport.add(jComboBox1_invoice_type_jLayeredPaneReport);
        jComboBox1_invoice_type_jLayeredPaneReport.setBounds(370, 50, 140, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ref.No", "D.ID", "Payment Method", "Sub Total", "Shiping Cost", "Vourcher", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jLayeredPaneReport.add(jScrollPane5);
        jScrollPane5.setBounds(20, 113, 780, 610);

        b_ouramount_jLayeredPaneReport.setBackground(new java.awt.Color(255, 39, 111));
        b_ouramount_jLayeredPaneReport.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_ouramount_jLayeredPaneReport.setForeground(new java.awt.Color(0, 0, 0));
        b_ouramount_jLayeredPaneReport.setText("Amount Main");
        b_ouramount_jLayeredPaneReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_ouramount_jLayeredPaneReportActionPerformed(evt);
            }
        });
        jLayeredPaneReport.add(b_ouramount_jLayeredPaneReport);
        b_ouramount_jLayeredPaneReport.setBounds(890, 380, 240, 50);

        getContentPane().add(jLayeredPaneReport);
        jLayeredPaneReport.setBounds(145, 40, 1170, 730);

        jLayeredPane_invoice.setBackground(new java.awt.Color(174, 180, 184));
        jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        jLayeredPane_invoice.setOpaque(true);
        jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLayeredPane_invoiceKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText(":");
        jLayeredPane_invoice.add(jLabel1);
        jLabel1.setBounds(180, 0, 20, 29);

        jScrollPane_did_jLayeredPane_invoice.setViewportView(jList_did_jLayeredPane_invoice);

        jLayeredPane_invoice.add(jScrollPane_did_jLayeredPane_invoice);
        jScrollPane_did_jLayeredPane_invoice.setBounds(600, 70, 160, 80);

        tx_refno_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_refno_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_refno_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_refno_jLayeredPane_invoice.setText("27585");
        tx_refno_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_refno_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_refno_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_refno_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_refno_jLayeredPane_invoice);
        tx_refno_jLayeredPane_invoice.setBounds(200, 30, 210, 38);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Ref.No");
        jLayeredPane_invoice.add(jLabel2);
        jLabel2.setBounds(10, 29, 150, 40);

        la_lastRxnumber.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_lastRxnumber.setForeground(new java.awt.Color(0, 0, 0));
        la_lastRxnumber.setText("Last RfeNo ");
        jLayeredPane_invoice.add(la_lastRxnumber);
        la_lastRxnumber.setBounds(200, 0, 160, 29);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText(":");
        jLayeredPane_invoice.add(jLabel4);
        jLabel4.setBounds(1000, 30, 20, 29);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Bill To");
        jLayeredPane_invoice.add(jLabel5);
        jLabel5.setBounds(10, 90, 150, 29);

        tx_billto_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_billto_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_billto_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_billto_jLayeredPane_invoice.setText("P.H.chethana udayanga");
        tx_billto_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_billto_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_billto_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_billto_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_billto_jLayeredPane_invoice);
        tx_billto_jLayeredPane_invoice.setBounds(200, 90, 500, 38);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText(":");
        jLayeredPane_invoice.add(jLabel6);
        jLabel6.setBounds(180, 90, 20, 29);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Address");
        jLayeredPane_invoice.add(jLabel7);
        jLabel7.setBounds(10, 140, 150, 29);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText(":");
        jLayeredPane_invoice.add(jLabel8);
        jLabel8.setBounds(180, 140, 20, 29);

        tx_addressB_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_addressB_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_addressB_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_addressB_jLayeredPane_invoice.setText("204 / 4 malwathu hiripitiya buthpitiya gampaha ");
        tx_addressB_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_addressB_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_addressB_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_addressB_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_addressB_jLayeredPane_invoice);
        tx_addressB_jLayeredPane_invoice.setBounds(200, 140, 950, 38);

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Phone");
        jLayeredPane_invoice.add(jLabel9);
        jLabel9.setBounds(10, 190, 150, 29);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText(":");
        jLayeredPane_invoice.add(jLabel10);
        jLabel10.setBounds(180, 190, 20, 29);

        tx_phoneB_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_phoneB_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_phoneB_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_phoneB_jLayeredPane_invoice.setText("94711094182");
        tx_phoneB_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_phoneB_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_phoneB_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_phoneB_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_phoneB_jLayeredPane_invoice);
        tx_phoneB_jLayeredPane_invoice.setBounds(200, 190, 210, 38);

        tx_phoneD_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_phoneD_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_phoneD_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_phoneD_jLayeredPane_invoice.setText("94711094182");
        tx_phoneD_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_phoneD_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_phoneD_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_phoneD_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_phoneD_jLayeredPane_invoice);
        tx_phoneD_jLayeredPane_invoice.setBounds(200, 350, 210, 38);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText(":");
        jLayeredPane_invoice.add(jLabel11);
        jLabel11.setBounds(180, 350, 20, 29);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Phone");
        jLayeredPane_invoice.add(jLabel12);
        jLabel12.setBounds(10, 350, 150, 29);

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Address");
        jLayeredPane_invoice.add(jLabel13);
        jLabel13.setBounds(10, 300, 150, 29);

        jLabel14.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText(":");
        jLayeredPane_invoice.add(jLabel14);
        jLabel14.setBounds(180, 300, 20, 29);

        tx_addressD_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_addressD_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_addressD_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_addressD_jLayeredPane_invoice.setText("204 / 4 malwathu hiripitiya buthpitiya gampaha ");
        tx_addressD_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_addressD_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_addressD_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_addressD_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_addressD_jLayeredPane_invoice);
        tx_addressD_jLayeredPane_invoice.setBounds(200, 300, 950, 38);

        tx_deliverto_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_deliverto_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_deliverto_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_deliverto_jLayeredPane_invoice.setText("P.H.chethana udayanga");
        tx_deliverto_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_deliverto_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_deliverto_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_deliverto_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_deliverto_jLayeredPane_invoice);
        tx_deliverto_jLayeredPane_invoice.setBounds(200, 250, 500, 38);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText(":");
        jLayeredPane_invoice.add(jLabel15);
        jLabel15.setBounds(180, 250, 20, 29);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Deliver To");
        jLayeredPane_invoice.add(jLabel16);
        jLabel16.setBounds(10, 250, 150, 29);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jSeparator1.setOpaque(true);
        jLayeredPane_invoice.add(jSeparator1);
        jSeparator1.setBounds(10, 400, 1140, 1);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jSeparator2.setOpaque(true);
        jLayeredPane_invoice.add(jSeparator2);
        jSeparator2.setBounds(10, 240, 1140, 1);

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jSeparator3.setOpaque(true);
        jLayeredPane_invoice.add(jSeparator3);
        jSeparator3.setBounds(10, 79, 1140, 2);

        jCheckBox_issame_jLayeredPane_invoice.setBackground(new java.awt.Color(174, 180, 184));
        jCheckBox_issame_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCheckBox_issame_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        jCheckBox_issame_jLayeredPane_invoice.setText("If the recipient is the same");
        jCheckBox_issame_jLayeredPane_invoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox_issame_jLayeredPane_invoiceMouseClicked(evt);
            }
        });
        jCheckBox_issame_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_issame_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        jCheckBox_issame_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBox_issame_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(jCheckBox_issame_jLayeredPane_invoice);
        jCheckBox_issame_jLayeredPane_invoice.setBounds(720, 260, 240, 24);

        combo_paymentmethod_jLayeredPane_invoice.setBackground(new java.awt.Color(174, 180, 184));
        combo_paymentmethod_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        combo_paymentmethod_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        combo_paymentmethod_jLayeredPane_invoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COD", "Payed" }));
        combo_paymentmethod_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_paymentmethod_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        combo_paymentmethod_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_paymentmethod_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(combo_paymentmethod_jLayeredPane_invoice);
        combo_paymentmethod_jLayeredPane_invoice.setBounds(1010, 30, 110, 40);

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Product Name");
        jLayeredPane_invoice.add(jLabel17);
        jLabel17.setBounds(10, 410, 170, 29);

        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText(":");
        jLayeredPane_invoice.add(jLabel18);
        jLabel18.setBounds(180, 410, 20, 29);

        tx_productname_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_productname_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_productname_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_productname_jLayeredPane_invoice.setText("sudharshan wati");
        tx_productname_jLayeredPane_invoice.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_productname_jLayeredPane_invoiceAncestorRemoved(evt);
            }
        });
        tx_productname_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_productname_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_productname_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_productname_jLayeredPane_invoiceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_productname_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(tx_productname_jLayeredPane_invoice);
        tx_productname_jLayeredPane_invoice.setBounds(360, 410, 360, 38);

        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText(":");
        jLayeredPane_invoice.add(jLabel19);
        jLabel19.setBounds(990, 410, 20, 29);

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Unit Price");
        jLayeredPane_invoice.add(jLabel20);
        jLabel20.setBounds(900, 410, 90, 29);

        tx_unitprice_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_unitprice_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tx_unitprice_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_unitprice_jLayeredPane_invoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_unitprice_jLayeredPane_invoice.setText("10");
        tx_unitprice_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_unitprice_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_unitprice_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_unitprice_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_unitprice_jLayeredPane_invoice);
        tx_unitprice_jLayeredPane_invoice.setBounds(1000, 410, 130, 38);

        jLabel21.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Qty");
        jLayeredPane_invoice.add(jLabel21);
        jLabel21.setBounds(900, 460, 60, 29);

        jLabel22.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText(":");
        jLayeredPane_invoice.add(jLabel22);
        jLabel22.setBounds(990, 460, 20, 29);

        tx_qty_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_qty_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tx_qty_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_qty_jLayeredPane_invoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_qty_jLayeredPane_invoice.setText("100");
        tx_qty_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_qty_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_qty_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_qty_jLayeredPane_invoiceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_qty_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(tx_qty_jLayeredPane_invoice);
        tx_qty_jLayeredPane_invoice.setBounds(1000, 460, 130, 38);

        jList_item_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        jList_item_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jList_item_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        jList_item_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList_item_jLayeredPane_invoiceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList_item_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jScrollPane_item_jLayeredPane_invoice.setViewportView(jList_item_jLayeredPane_invoice);

        jLayeredPane_invoice.add(jScrollPane_item_jLayeredPane_invoice);
        jScrollPane_item_jLayeredPane_invoice.setBounds(370, 500, 360, 131);

        table_rxitem_jLayeredPane_invoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Buy Price", "Unit Price", "Qty", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_rxitem_jLayeredPane_invoice.setRowHeight(25);
        jScrollPane1.setViewportView(table_rxitem_jLayeredPane_invoice);
        if (table_rxitem_jLayeredPane_invoice.getColumnModel().getColumnCount() > 0) {
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(0).setMinWidth(200);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(0).setPreferredWidth(200);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(0).setMaxWidth(200);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(1).setMinWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(1).setPreferredWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(1).setMaxWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(2).setMinWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(2).setPreferredWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(2).setMaxWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(3).setMinWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(3).setPreferredWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(3).setMaxWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(4).setMinWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(4).setPreferredWidth(100);
            table_rxitem_jLayeredPane_invoice.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jLayeredPane_invoice.add(jScrollPane1);
        jScrollPane1.setBounds(10, 520, 610, 200);

        b_print_jLayeredPane_invoice.setBackground(new java.awt.Color(80, 251, 251));
        b_print_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        b_print_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        b_print_jLayeredPane_invoice.setText("Print");
        b_print_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_print_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        b_print_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                b_print_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(b_print_jLayeredPane_invoice);
        b_print_jLayeredPane_invoice.setBounds(1000, 530, 130, 200);

        b_remove_jLayeredPane_invoice.setBackground(new java.awt.Color(210, 50, 50));
        b_remove_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        b_remove_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        b_remove_jLayeredPane_invoice.setText("Remove");
        b_remove_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_remove_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        jLayeredPane_invoice.add(b_remove_jLayeredPane_invoice);
        b_remove_jLayeredPane_invoice.setBounds(20, 460, 160, 40);

        tx_subtotal_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tx_subtotal_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_subtotal_jLayeredPane_invoice.setText("Sub Total");
        jLayeredPane_invoice.add(tx_subtotal_jLayeredPane_invoice);
        tx_subtotal_jLayeredPane_invoice.setBounds(820, 510, 150, 29);

        jLabel24.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText(":");
        jLayeredPane_invoice.add(jLabel24);
        jLabel24.setBounds(800, 510, 20, 29);

        jLabel25.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Shiping Cost");
        jLayeredPane_invoice.add(jLabel25);
        jLabel25.setBounds(640, 570, 160, 29);

        jLabel26.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 0));
        jLabel26.setText(":");
        jLayeredPane_invoice.add(jLabel26);
        jLabel26.setBounds(800, 570, 20, 29);

        tx_shipingcost_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_shipingcost_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tx_shipingcost_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_shipingcost_jLayeredPane_invoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_shipingcost_jLayeredPane_invoice.setText("1000");
        tx_shipingcost_jLayeredPane_invoice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_shipingcost_jLayeredPane_invoiceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_shipingcost_jLayeredPane_invoiceFocusLost(evt);
            }
        });
        tx_shipingcost_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_shipingcost_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_shipingcost_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_shipingcost_jLayeredPane_invoiceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_shipingcost_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(tx_shipingcost_jLayeredPane_invoice);
        tx_shipingcost_jLayeredPane_invoice.setBounds(820, 570, 170, 38);

        tx_total_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tx_total_jLayeredPane_invoice.setForeground(new java.awt.Color(255, 51, 51));
        tx_total_jLayeredPane_invoice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tx_total_jLayeredPane_invoice.setText("900");
        jLayeredPane_invoice.add(tx_total_jLayeredPane_invoice);
        tx_total_jLayeredPane_invoice.setBounds(820, 670, 170, 50);

        jLabel28.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 0, 0));
        jLabel28.setText("Voucher");
        jLayeredPane_invoice.add(jLabel28);
        jLabel28.setBounds(640, 620, 120, 29);

        jLabel29.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 0, 0));
        jLabel29.setText(":");
        jLayeredPane_invoice.add(jLabel29);
        jLabel29.setBounds(800, 620, 20, 29);

        jLabel30.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 0, 0));
        jLabel30.setText(":");
        jLayeredPane_invoice.add(jLabel30);
        jLabel30.setBounds(800, 680, 20, 29);

        tx_voucher_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_voucher_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        tx_voucher_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_voucher_jLayeredPane_invoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_voucher_jLayeredPane_invoice.setText("10%");
        tx_voucher_jLayeredPane_invoice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tx_voucher_jLayeredPane_invoiceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tx_voucher_jLayeredPane_invoiceFocusLost(evt);
            }
        });
        tx_voucher_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_voucher_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_voucher_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_voucher_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_voucher_jLayeredPane_invoice);
        tx_voucher_jLayeredPane_invoice.setBounds(820, 620, 170, 38);

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jSeparator4.setOpaque(true);
        jLayeredPane_invoice.add(jSeparator4);
        jSeparator4.setBounds(550, 508, 600, 2);

        jLabel31.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 0, 0));
        jLabel31.setText("Total");
        jLayeredPane_invoice.add(jLabel31);
        jLabel31.setBounds(640, 680, 120, 29);

        jLabel32.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 0, 0));
        jLabel32.setText("Sub Total");
        jLayeredPane_invoice.add(jLabel32);
        jLabel32.setBounds(640, 510, 120, 29);

        jLabel34.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 0));
        jLabel34.setText("Payment Method");
        jLayeredPane_invoice.add(jLabel34);
        jLabel34.setBounds(790, 30, 210, 29);

        jLabel35.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 0, 0));
        jLabel35.setText(":");
        jLayeredPane_invoice.add(jLabel35);
        jLabel35.setBounds(180, 29, 20, 40);

        jLabel36.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(0, 0, 0));
        jLabel36.setText("Last RfeNo ");
        jLayeredPane_invoice.add(jLabel36);
        jLabel36.setBounds(10, 0, 160, 29);

        la_did_jLayeredPane_invoice1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_did_jLayeredPane_invoice1.setForeground(new java.awt.Color(0, 0, 0));
        la_did_jLayeredPane_invoice1.setText("D.ID");
        jLayeredPane_invoice.add(la_did_jLayeredPane_invoice1);
        la_did_jLayeredPane_invoice1.setBounds(460, 28, 110, 40);

        la_cc_jLayeredPane_invoice1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_cc_jLayeredPane_invoice1.setForeground(new java.awt.Color(0, 0, 0));
        la_cc_jLayeredPane_invoice1.setText(":");
        jLayeredPane_invoice.add(la_cc_jLayeredPane_invoice1);
        la_cc_jLayeredPane_invoice1.setBounds(570, 20, 20, 50);

        tx_iddoctor_jLayeredPane_invoice1.setBackground(new java.awt.Color(255, 255, 255));
        tx_iddoctor_jLayeredPane_invoice1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_iddoctor_jLayeredPane_invoice1.setForeground(new java.awt.Color(0, 0, 0));
        tx_iddoctor_jLayeredPane_invoice1.setText("27585");
        tx_iddoctor_jLayeredPane_invoice1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_iddoctor_jLayeredPane_invoice1ActionPerformed(evt);
            }
        });
        tx_iddoctor_jLayeredPane_invoice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_iddoctor_jLayeredPane_invoice1KeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_iddoctor_jLayeredPane_invoice1);
        tx_iddoctor_jLayeredPane_invoice1.setBounds(600, 30, 160, 38);

        jComboBox_catogery_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_catogery_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jComboBox_catogery_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_catogery_jLayeredPane_invoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Klkaya", "Paththu", "Taylaya", "Churnaya", "Lepaya", "Paniya", "Gugul", "Sruthaya", "Lehaya", "Kwathaya", "Arishataya", "Rasayanaya", "Asawaya", "Thewilla", "Other", "RX" }));
        jComboBox_catogery_jLayeredPane_invoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_catogery_jLayeredPane_invoiceMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jComboBox_catogery_jLayeredPane_invoiceMouseReleased(evt);
            }
        });
        jComboBox_catogery_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_catogery_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        jComboBox_catogery_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_catogery_jLayeredPane_invoiceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox_catogery_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(jComboBox_catogery_jLayeredPane_invoice);
        jComboBox_catogery_jLayeredPane_invoice.setBounds(200, 410, 140, 40);

        jComboBox_units_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox_units_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jComboBox_units_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox_units_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_units_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        jComboBox_units_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_units_jLayeredPane_invoiceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBox_units_jLayeredPane_invoiceKeyReleased(evt);
            }
        });
        jLayeredPane_invoice.add(jComboBox_units_jLayeredPane_invoice);
        jComboBox_units_jLayeredPane_invoice.setBounds(740, 410, 140, 40);

        jLabel53.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(0, 0, 0));
        jLabel53.setText("Type");
        jLayeredPane_invoice.add(jLabel53);
        jLabel53.setBounds(460, 0, 100, 29);

        jLabel54.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(0, 0, 0));
        jLabel54.setText(":");
        jLayeredPane_invoice.add(jLabel54);
        jLabel54.setBounds(570, 0, 20, 29);

        combo_type_jLayeredPane_invoice.setBackground(new java.awt.Color(174, 180, 184));
        combo_type_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        combo_type_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        combo_type_jLayeredPane_invoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "DR", "Full Normal" }));
        combo_type_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_type_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        jLayeredPane_invoice.add(combo_type_jLayeredPane_invoice);
        combo_type_jLayeredPane_invoice.setBounds(600, 0, 110, 30);

        la_buyprice_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        la_buyprice_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        la_buyprice_jLayeredPane_invoice.setText("Buy Price");
        jLayeredPane_invoice.add(la_buyprice_jLayeredPane_invoice);
        la_buyprice_jLayeredPane_invoice.setBounds(360, 460, 120, 29);

        la_c_buyprice_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        la_c_buyprice_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        la_c_buyprice_jLayeredPane_invoice.setText(":");
        jLayeredPane_invoice.add(la_c_buyprice_jLayeredPane_invoice);
        la_c_buyprice_jLayeredPane_invoice.setBounds(480, 460, 20, 29);

        tx_buyprice_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 255, 255));
        tx_buyprice_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        tx_buyprice_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        tx_buyprice_jLayeredPane_invoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tx_buyprice_jLayeredPane_invoice.setText("10");
        tx_buyprice_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_buyprice_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        tx_buyprice_jLayeredPane_invoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_buyprice_jLayeredPane_invoiceKeyPressed(evt);
            }
        });
        jLayeredPane_invoice.add(tx_buyprice_jLayeredPane_invoice);
        tx_buyprice_jLayeredPane_invoice.setBounds(490, 460, 130, 38);

        table_item_jLayeredPane_invoice1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Unit Price", "Qty", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_item_jLayeredPane_invoice1.setRowHeight(25);
        jScrollPane4.setViewportView(table_item_jLayeredPane_invoice1);
        if (table_item_jLayeredPane_invoice1.getColumnModel().getColumnCount() > 0) {
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(0).setMinWidth(200);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(0).setPreferredWidth(200);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(0).setMaxWidth(200);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(1).setMinWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(1).setPreferredWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(1).setMaxWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(2).setMinWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(2).setPreferredWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(2).setMaxWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(3).setMinWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(3).setPreferredWidth(100);
            table_item_jLayeredPane_invoice1.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jLayeredPane_invoice.add(jScrollPane4);
        jScrollPane4.setBounds(20, 510, 500, 210);

        b_lastprint_jLayeredPane_invoice.setBackground(new java.awt.Color(255, 153, 102));
        b_lastprint_jLayeredPane_invoice.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b_lastprint_jLayeredPane_invoice.setForeground(new java.awt.Color(0, 0, 0));
        b_lastprint_jLayeredPane_invoice.setText("Last Print");
        b_lastprint_jLayeredPane_invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_lastprint_jLayeredPane_invoiceActionPerformed(evt);
            }
        });
        jLayeredPane_invoice.add(b_lastprint_jLayeredPane_invoice);
        b_lastprint_jLayeredPane_invoice.setBounds(1010, 0, 110, 25);

        getContentPane().add(jLayeredPane_invoice);
        jLayeredPane_invoice.setBounds(145, 40, 1135, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void la_closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close the System ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            System.exit(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            la_close.setBackground(new Color(4, 37, 87));
        }
    }//GEN-LAST:event_la_closeMouseClicked

    private void la_minimiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_la_minimiseMouseClicked

    private void la_minimiseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseEntered
        la_minimise.setBackground(Color.GRAY);
    }//GEN-LAST:event_la_minimiseMouseEntered

    private void la_closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseEntered
        la_close.setBackground(Color.red);
    }//GEN-LAST:event_la_closeMouseEntered

    private void la_minimiseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseExited
        la_minimise.setBackground(new Color(4, 37, 87));
    }//GEN-LAST:event_la_minimiseMouseExited

    private void la_closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseExited
        la_close.setBackground(new Color(4, 37, 87));
    }//GEN-LAST:event_la_closeMouseExited

    private void tx_refno_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_refno_jLayeredPane_invoiceActionPerformed

        if (!tx_refno_jLayeredPane_invoice.getText().trim().equals("")) {
            if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0 | combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
                combo_paymentmethod_jLayeredPane_invoice.grabFocus();
                combo_paymentmethod_jLayeredPane_invoice.showPopup();
            } else {
                tx_iddoctor_jLayeredPane_invoice1.grabFocus();
            }
        } else {
            tx_refno_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_refno_jLayeredPane_invoiceActionPerformed

    private void tx_billto_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_billto_jLayeredPane_invoiceActionPerformed
        if (!tx_billto_jLayeredPane_invoice.getText().equals("")) {
            tx_addressB_jLayeredPane_invoice.grabFocus();
        } else {
            tx_billto_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_billto_jLayeredPane_invoiceActionPerformed

    private void tx_addressB_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_addressB_jLayeredPane_invoiceActionPerformed
        if (!tx_addressB_jLayeredPane_invoice.getText().equals("")) {
            tx_phoneB_jLayeredPane_invoice.grabFocus();
        } else {
            tx_addressB_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_addressB_jLayeredPane_invoiceActionPerformed

    private void tx_phoneB_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_phoneB_jLayeredPane_invoiceActionPerformed
        if (!tx_phoneB_jLayeredPane_invoice.getText().equals("")) {
            jCheckBox_issame_jLayeredPane_invoice.grabFocus();
        } else {
            tx_phoneB_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_phoneB_jLayeredPane_invoiceActionPerformed

    private void tx_phoneD_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_phoneD_jLayeredPane_invoiceActionPerformed

        if (!tx_phoneD_jLayeredPane_invoice.getText().trim().equals("")) {
            if (tx_productname_jLayeredPane_invoice.getText().trim().equals("Priscription Row Matirial")) {
                jScrollPane_item_jLayeredPane_invoice.setVisible(false);
                jComboBox_units_jLayeredPane_invoice.setVisible(false);
                tx_buyprice_jLayeredPane_invoice.setVisible(true);
                la_c_buyprice_jLayeredPane_invoice.setVisible(true);
                la_buyprice_jLayeredPane_invoice.setVisible(true);
                tx_buyprice_jLayeredPane_invoice.grabFocus();
            } else if (combo_type_jLayeredPane_invoice.getSelectedItem().equals("Full Normal")) {
                tx_productname_jLayeredPane_invoice.grabFocus();
            } else {
                jComboBox_catogery_jLayeredPane_invoice.grabFocus();
                jComboBox_catogery_jLayeredPane_invoice.showPopup();
            }

        } else {
            tx_phoneD_jLayeredPane_invoice.grabFocus();
        }


    }//GEN-LAST:event_tx_phoneD_jLayeredPane_invoiceActionPerformed

    private void tx_addressD_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_addressD_jLayeredPane_invoiceActionPerformed
        if (!tx_addressD_jLayeredPane_invoice.getText().equals("")) {
            tx_phoneD_jLayeredPane_invoice.grabFocus();
        } else {
            tx_addressD_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_addressD_jLayeredPane_invoiceActionPerformed

    private void tx_deliverto_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_deliverto_jLayeredPane_invoiceActionPerformed
        if (!tx_deliverto_jLayeredPane_invoice.getText().equals("")) {
            tx_addressD_jLayeredPane_invoice.grabFocus();
        } else {
            tx_deliverto_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_deliverto_jLayeredPane_invoiceActionPerformed

    private void tx_productname_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_productname_jLayeredPane_invoiceActionPerformed
//        if (!tx_productname_jLayeredPane_invoice.getText().trim().equals("")) {
//            jComboBox_units_jLayeredPane_invoice.grabFocus();
//            jComboBox_units_jLayeredPane_invoice.showPopup();
//        } else {
//            tx_productname_jLayeredPane_invoice.grabFocus();
//        }

    }//GEN-LAST:event_tx_productname_jLayeredPane_invoiceActionPerformed

    private void tx_unitprice_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_unitprice_jLayeredPane_invoiceActionPerformed
        if (!tx_unitprice_jLayeredPane_invoice.getText().trim().equals("")) {
            tx_qty_jLayeredPane_invoice.grabFocus();
        } else {
            tx_unitprice_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_unitprice_jLayeredPane_invoiceActionPerformed

    private void tx_qty_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_qty_jLayeredPane_invoiceActionPerformed

    }//GEN-LAST:event_tx_qty_jLayeredPane_invoiceActionPerformed

    private void jCheckBox_issame_jLayeredPane_invoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_issame_jLayeredPane_invoiceMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you want to SELECT THIS ?", "SELECT", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            jCheckBox_issame_jLayeredPane_invoice.setSelected(true);
            jcheckBoxMouseClick();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            jCheckBox_issame_jLayeredPane_invoice.setSelected(false);
            tx_deliverto_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_jCheckBox_issame_jLayeredPane_invoiceMouseClicked

    private void b_remove_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_remove_jLayeredPane_invoiceActionPerformed

        if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0 | combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
            DefaultTableModel dff = (DefaultTableModel) table_item_jLayeredPane_invoice1.getModel();
            int rw = table_item_jLayeredPane_invoice1.getSelectedRow();
            if (rw >= 0) {

                int x = JOptionPane.showConfirmDialog(this, "Do you want to Remove this ROW ?", "Remove ROW", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    double st = Double.parseDouble(tx_subtotal_jLayeredPane_invoice.getText()) - Double.parseDouble(dff.getValueAt(rw, 3).toString());
                    tx_subtotal_jLayeredPane_invoice.setText("" + st);
                    setTotalMethod();
                    dff.removeRow(rw);
                } else if (JOptionPane.NO_OPTION == x) {
                    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    tx_productname_jLayeredPane_invoice.grabFocus();
                }
            } else {
                tx_productname_jLayeredPane_invoice.grabFocus();
            }
        } else {
            DefaultTableModel dff = (DefaultTableModel) table_rxitem_jLayeredPane_invoice.getModel();
            int rw = table_rxitem_jLayeredPane_invoice.getSelectedRow();
            if (rw >= 0) {

                int x = JOptionPane.showConfirmDialog(this, "Do you want to Remove this ROW ?", "Remove ROW", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    double st = Double.parseDouble(tx_subtotal_jLayeredPane_invoice.getText()) - Double.parseDouble(dff.getValueAt(rw, 4).toString());
                    tx_subtotal_jLayeredPane_invoice.setText("" + st);
                    setTotalMethod();
                    dff.removeRow(rw);
                } else if (JOptionPane.NO_OPTION == x) {
                    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    tx_productname_jLayeredPane_invoice.grabFocus();
                }
            } else {
                tx_productname_jLayeredPane_invoice.grabFocus();
            }
        }

        tx_productname_jLayeredPane_invoice.grabFocus();

    }//GEN-LAST:event_b_remove_jLayeredPane_invoiceActionPerformed

    private void tx_productname_jLayeredPane_invoiceAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_productname_jLayeredPane_invoiceAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_productname_jLayeredPane_invoiceAncestorRemoved

    private void tx_qty_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_qty_jLayeredPane_invoiceKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {

            if (!tx_productname_jLayeredPane_invoice.getText().equals("") & !tx_unitprice_jLayeredPane_invoice.getText().equals("") & !tx_qty_jLayeredPane_invoice.getText().equals("")) {
                if (tx_productname_jLayeredPane_invoice.getText().trim().equals("Priscription Row Matirial")) {
                    DefaultTableModel defTabModPen = (DefaultTableModel) table_rxitem_jLayeredPane_invoice.getModel();
                    jScrollPane4.setVisible(false);
                    jScrollPane1.setVisible(true);
                    // defTabModPen.setRowCount(0);
                    Vector v = new Vector();
                    v.add(tx_productname_jLayeredPane_invoice.getText());
                    v.add(tx_buyprice_jLayeredPane_invoice.getText());
                    v.add(tx_unitprice_jLayeredPane_invoice.getText());
                    v.add(tx_qty_jLayeredPane_invoice.getText());
                    double price = Double.parseDouble(tx_unitprice_jLayeredPane_invoice.getText()) * Double.parseDouble(tx_qty_jLayeredPane_invoice.getText());
                    v.add(price);

                    defTabModPen.addRow(v);

                    tx_productname_jLayeredPane_invoice.setText("");
                    tx_buyprice_jLayeredPane_invoice.setText("");
                    tx_unitprice_jLayeredPane_invoice.setText("");
                    tx_qty_jLayeredPane_invoice.setText("");

                    double st = 0;
                    for (int x = 0; x < table_rxitem_jLayeredPane_invoice.getRowCount(); x++) {
                        st += Double.parseDouble(defTabModPen.getValueAt(x, 4).toString());
                    }
                    tx_subtotal_jLayeredPane_invoice.setText("" + st);

                    jComboBox_catogery_jLayeredPane_invoice.grabFocus();
                    jComboBox_catogery_jLayeredPane_invoice.showPopup();
                } else if (combo_type_jLayeredPane_invoice.getSelectedItem().equals("Full Normal")) {
                    DefaultTableModel defTabModPen = (DefaultTableModel) table_item_jLayeredPane_invoice1.getModel();
                    jScrollPane4.setVisible(true);
                    jScrollPane1.setVisible(false);

                    // defTabModPen.setRowCount(0);
                    Vector v = new Vector();
                    v.add(tx_productname_jLayeredPane_invoice.getText());
                    v.add(tx_unitprice_jLayeredPane_invoice.getText());
                    v.add(tx_qty_jLayeredPane_invoice.getText());
                    double price = Double.parseDouble(tx_unitprice_jLayeredPane_invoice.getText()) * Double.parseDouble(tx_qty_jLayeredPane_invoice.getText());
                    v.add(price);

                    defTabModPen.addRow(v);

                    tx_productname_jLayeredPane_invoice.setText("");
                    tx_unitprice_jLayeredPane_invoice.setText("");
                    tx_qty_jLayeredPane_invoice.setText("");

                    double st = 0;
                    for (int x = 0; x < table_item_jLayeredPane_invoice1.getRowCount(); x++) {
                        st += Double.parseDouble(defTabModPen.getValueAt(x, 3).toString());
                    }
                    tx_subtotal_jLayeredPane_invoice.setText("" + st);
                    tx_productname_jLayeredPane_invoice.grabFocus();
                } else {
                    DefaultTableModel defTabModPen = (DefaultTableModel) table_item_jLayeredPane_invoice1.getModel();
                    jScrollPane4.setVisible(true);
                    jScrollPane1.setVisible(false);
                    // defTabModPen.setRowCount(0);
                    Vector v = new Vector();
                    v.add(tx_productname_jLayeredPane_invoice.getText());
                    v.add(tx_unitprice_jLayeredPane_invoice.getText());
                    v.add(tx_qty_jLayeredPane_invoice.getText());
                    double price = Double.parseDouble(tx_unitprice_jLayeredPane_invoice.getText()) * Double.parseDouble(tx_qty_jLayeredPane_invoice.getText());
                    v.add(price);

                    defTabModPen.addRow(v);

                    tx_productname_jLayeredPane_invoice.setText("");
                    tx_unitprice_jLayeredPane_invoice.setText("");
                    tx_qty_jLayeredPane_invoice.setText("");

                    double st = 0;
                    for (int x = 0; x < table_item_jLayeredPane_invoice1.getRowCount(); x++) {
                        st += Double.parseDouble(defTabModPen.getValueAt(x, 3).toString());
                    }
                    tx_subtotal_jLayeredPane_invoice.setText("" + st);

                    jComboBox_catogery_jLayeredPane_invoice.grabFocus();
                    jComboBox_catogery_jLayeredPane_invoice.showPopup();
                }
            } else if (tx_productname_jLayeredPane_invoice.getText().trim().equals("")) {
                tx_productname_jLayeredPane_invoice.grabFocus();
            } else if (tx_unitprice_jLayeredPane_invoice.getText().trim().equals("")) {
                tx_unitprice_jLayeredPane_invoice.grabFocus();
            } else if (tx_qty_jLayeredPane_invoice.getText().trim().equals("")) {
                tx_qty_jLayeredPane_invoice.grabFocus();

            }
        }
    }//GEN-LAST:event_tx_qty_jLayeredPane_invoiceKeyReleased

    private void tx_shipingcost_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_shipingcost_jLayeredPane_invoiceActionPerformed
        if (!tx_shipingcost_jLayeredPane_invoice.getText().trim().equals("")) {
            if (tx_voucher_jLayeredPane_invoice.getText().trim().equals("0%")) {
                tx_voucher_jLayeredPane_invoice.grabFocus();
            } else if (tx_voucher_jLayeredPane_invoice.getText().trim().equals("0.0")) {
                setTotalMethod();
                b_print_jLayeredPane_invoice.setVisible(true);
                b_print_jLayeredPane_invoice.grabFocus();
            }
        } else {
            tx_shipingcost_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_shipingcost_jLayeredPane_invoiceActionPerformed

    private void tx_voucher_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_voucher_jLayeredPane_invoiceActionPerformed
        if (!tx_voucher_jLayeredPane_invoice.getText().trim().equals("0%")) {
            setTotalMethod();
            b_print_jLayeredPane_invoice.setVisible(true);
            b_print_jLayeredPane_invoice.grabFocus();
        } else if (tx_voucher_jLayeredPane_invoice.getText().trim().equals("0.0")) {
            setTotalMethod();
            b_print_jLayeredPane_invoice.setVisible(true);
            b_print_jLayeredPane_invoice.grabFocus();
        } else {
            tx_voucher_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_voucher_jLayeredPane_invoiceActionPerformed

    private void tx_productname_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_productname_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_productname_jLayeredPane_invoice, "A", 50);
        if (evt.getKeyCode() == 39) {
            if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0) {
                if (!tx_productname_jLayeredPane_invoice.getText().equals("")) {
                    jComboBox_units_jLayeredPane_invoice.setVisible(true);
                    jComboBox_units_jLayeredPane_invoice.grabFocus();
                    jComboBox_units_jLayeredPane_invoice.showPopup();
                } else {
                    tx_productname_jLayeredPane_invoice.grabFocus();
                }
            } else if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 1) {
                tx_buyprice_jLayeredPane_invoice.grabFocus();
            } else if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
                tx_unitprice_jLayeredPane_invoice.grabFocus();
            }

        }

    }//GEN-LAST:event_tx_productname_jLayeredPane_invoiceKeyPressed

    private void b_print_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_print_jLayeredPane_invoiceActionPerformed
        //  printButtonIncertQuery();

        if (printButtonIncertQuery() == true) {
            printInvoice();
            clearjLayeredPane_invoice();
            lastNumber();
            this.setState(JFrame.ICONIFIED);
        } else {
            tx_refno_jLayeredPane_invoice.grabFocus();
        }

    }//GEN-LAST:event_b_print_jLayeredPane_invoiceActionPerformed

    private void combo_paymentmethod_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_paymentmethod_jLayeredPane_invoiceActionPerformed
        if (!combo_paymentmethod_jLayeredPane_invoice.getSelectedItem().equals("COD") | !combo_paymentmethod_jLayeredPane_invoice.getSelectedItem().equals("Payed")) {
            tx_billto_jLayeredPane_invoice.grabFocus();
        } else {
            combo_paymentmethod_jLayeredPane_invoice.grabFocus();
            combo_paymentmethod_jLayeredPane_invoice.showPopup();
        }
    }//GEN-LAST:event_combo_paymentmethod_jLayeredPane_invoiceActionPerformed

    private void b_print_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b_print_jLayeredPane_invoiceKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            b_print_jLayeredPane_invoice.doClick();
        }
    }//GEN-LAST:event_b_print_jLayeredPane_invoiceKeyReleased

    private void tx_shipingcost_jLayeredPane_invoiceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_shipingcost_jLayeredPane_invoiceFocusGained
        if (tx_shipingcost_jLayeredPane_invoice.getText().equals("0.0")) {
            tx_shipingcost_jLayeredPane_invoice.setText("");
        }

    }//GEN-LAST:event_tx_shipingcost_jLayeredPane_invoiceFocusGained

    private void tx_shipingcost_jLayeredPane_invoiceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_shipingcost_jLayeredPane_invoiceFocusLost
        if (tx_shipingcost_jLayeredPane_invoice.getText().isEmpty()) {
            tx_shipingcost_jLayeredPane_invoice.setText("0.0");
        }
    }//GEN-LAST:event_tx_shipingcost_jLayeredPane_invoiceFocusLost

    private void tx_voucher_jLayeredPane_invoiceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_voucher_jLayeredPane_invoiceFocusGained
        if (tx_voucher_jLayeredPane_invoice.getText().equals("0%")) {
            tx_voucher_jLayeredPane_invoice.setText("");
        }
    }//GEN-LAST:event_tx_voucher_jLayeredPane_invoiceFocusGained

    private void tx_voucher_jLayeredPane_invoiceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tx_voucher_jLayeredPane_invoiceFocusLost
        if (tx_voucher_jLayeredPane_invoice.getText().isEmpty()) {
            tx_voucher_jLayeredPane_invoice.setText("0%");
        }
    }//GEN-LAST:event_tx_voucher_jLayeredPane_invoiceFocusLost

    private void jCheckBox_issame_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox_issame_jLayeredPane_invoiceKeyReleased
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            jCheckBox_issame_jLayeredPane_invoice.setSelected(true);
            jcheckBoxMouseClick();
        }
    }//GEN-LAST:event_jCheckBox_issame_jLayeredPane_invoiceKeyReleased

    private void jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLayeredPane_invoiceKeyReleased

    }//GEN-LAST:event_jLayeredPane_invoiceKeyReleased

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

    }//GEN-LAST:event_formKeyReleased

    private void tx_productname_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_productname_jLayeredPane_invoiceKeyReleased
        //jScrollPane_item_jLayeredPane_invoice.setVisible(true);
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            jList_item_jLayeredPane_invoice.grabFocus();

        } else if (!(tx_productname_jLayeredPane_invoice.getText().trim().isEmpty()
                | tx_productname_jLayeredPane_invoice.getText().trim().equals("Priscription Row Matirial")
                | combo_type_jLayeredPane_invoice.getSelectedItem().equals("Full Normal"))) {

            jScrollPane_item_jLayeredPane_invoice.setVisible(true);
            String tableName = jComboBox_catogery_jLayeredPane_invoice.getSelectedItem().toString();
            searchANDList(tableName, "productName", tx_productname_jLayeredPane_invoice.getText(), jList_item_jLayeredPane_invoice);

        } else if ((tx_productname_jLayeredPane_invoice.getText().trim().isEmpty())) {
            jScrollPane_item_jLayeredPane_invoice.setVisible(false);
            tx_productname_jLayeredPane_invoice.grabFocus();
            if (evt.getKeyCode() == KeyEvent.VK_F10) {
                if (tx_total_jLayeredPane_invoice.getText().equals("0.0")) {
                    tx_shipingcost_jLayeredPane_invoice.setText(null);
                    tx_shipingcost_jLayeredPane_invoice.grabFocus();
                } else {
                    b_print_jLayeredPane_invoice.doClick();
                }

            }

        } else if (tx_productname_jLayeredPane_invoice.getText().trim().equals("Priscription Row Matirial")) {
            jScrollPane_item_jLayeredPane_invoice.setVisible(false);
            if (evt.getKeyCode() == KeyEvent.VK_F10) {
                if (tx_total_jLayeredPane_invoice.getText().equals("0.0")) {
                    tx_shipingcost_jLayeredPane_invoice.setText(null);
                    tx_shipingcost_jLayeredPane_invoice.grabFocus();
                } else {
                    b_print_jLayeredPane_invoice.doClick();
                }
            }

        } else if (combo_type_jLayeredPane_invoice.getSelectedItem().equals("Full Normal")) {
            if (evt.getKeyCode() == KeyEvent.VK_F10) {
                tx_unitprice_jLayeredPane_invoice.grabFocus();
            }
        }


    }//GEN-LAST:event_tx_productname_jLayeredPane_invoiceKeyReleased

    private void tx_refno_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_refno_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_refno_jLayeredPane_invoice, "N", 15);
    }//GEN-LAST:event_tx_refno_jLayeredPane_invoiceKeyPressed

    private void tx_billto_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_billto_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_billto_jLayeredPane_invoice, "A", 50);
    }//GEN-LAST:event_tx_billto_jLayeredPane_invoiceKeyPressed

    private void tx_addressB_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_addressB_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_addressB_jLayeredPane_invoice, "NA", 150);
    }//GEN-LAST:event_tx_addressB_jLayeredPane_invoiceKeyPressed

    private void tx_phoneB_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_phoneB_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_phoneB_jLayeredPane_invoice, "N", 12);
    }//GEN-LAST:event_tx_phoneB_jLayeredPane_invoiceKeyPressed

    private void tx_deliverto_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_deliverto_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_deliverto_jLayeredPane_invoice, "A", 50);
    }//GEN-LAST:event_tx_deliverto_jLayeredPane_invoiceKeyPressed

    private void tx_addressD_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_addressD_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_addressD_jLayeredPane_invoice, "NA", 150);
    }//GEN-LAST:event_tx_addressD_jLayeredPane_invoiceKeyPressed

    private void tx_phoneD_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_phoneD_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_phoneD_jLayeredPane_invoice, "N", 12);
    }//GEN-LAST:event_tx_phoneD_jLayeredPane_invoiceKeyPressed

    private void tx_unitprice_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_unitprice_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_unitprice_jLayeredPane_invoice, "N", 4);
    }//GEN-LAST:event_tx_unitprice_jLayeredPane_invoiceKeyPressed

    private void tx_qty_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_qty_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_qty_jLayeredPane_invoice, "N", 4);
    }//GEN-LAST:event_tx_qty_jLayeredPane_invoiceKeyPressed

    private void tx_shipingcost_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_shipingcost_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_shipingcost_jLayeredPane_invoice, "N", 4);
    }//GEN-LAST:event_tx_shipingcost_jLayeredPane_invoiceKeyPressed

    private void tx_voucher_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_voucher_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_voucher_jLayeredPane_invoice, "N", 1);
    }//GEN-LAST:event_tx_voucher_jLayeredPane_invoiceKeyPressed

    private void b_searchinvoices_jLayeredPaneReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_searchinvoices_jLayeredPaneReportActionPerformed
        try {
            if (jComboBox1_invoice_type_jLayeredPaneReport.getSelectedIndex() == 0) {
                Date date = jDateChooser1.getDate();
                String sb = new SimpleDateFormat("yyyy-MM-dd").format(date);
                searchANDTable("invoice", "invoicedate", sb, table_report_jLayeredPaneReport, "Normal");
                jScrollPane2.setVisible(true);
                jScrollPane5.setVisible(false);
            } else if (jComboBox1_invoice_type_jLayeredPaneReport.getSelectedIndex() == 1) {
                Date date = jDateChooser1.getDate();
                String sb = new SimpleDateFormat("yyyy-MM-dd").format(date);
                searchANDTable("invoice", "invoicedate", sb, jTable1, "RX");
                jScrollPane5.setVisible(true);
                jScrollPane2.setVisible(false);
            } else {
                jComboBox1_invoice_type_jLayeredPaneReport.grabFocus();
                jComboBox1_invoice_type_jLayeredPaneReport.showPopup();
                jScrollPane5.setVisible(false);
                jScrollPane2.setVisible(false);
            }
        } catch (Exception e) {
            jDateChooser1.grabFocus();
        }

    }//GEN-LAST:event_b_searchinvoices_jLayeredPaneReportActionPerformed

    private void b_savepdf_jLayeredPaneReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_savepdf_jLayeredPaneReportActionPerformed

        int x = JOptionPane.showConfirmDialog(this, "Do you want SAVE THIS TABLE ?", "SAVE TABLE", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            if (jComboBox1_invoice_type_jLayeredPaneReport.getSelectedIndex() == 0) {
                savePDF("Normal");
            } else {
                savePDF("RX");
            }
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            jDateChooser1.grabFocus();
        }

    }//GEN-LAST:event_b_savepdf_jLayeredPaneReportActionPerformed

    private void b_enter_jLayeredPaneDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_enter_jLayeredPaneDoctorsActionPerformed
        if (!tx_id_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            doctorTableInsert();
        } else {
            tx_id_jLayeredPane_doctoers.grabFocus();
        }
    }//GEN-LAST:event_b_enter_jLayeredPaneDoctorsActionPerformed

    private void tx_id_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_id_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_id_jLayeredPane_doctoersAncestorRemoved

    private void tx_id_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_id_jLayeredPane_doctoersActionPerformed
        if (tx_id_jLayeredPane_doctoers.getText().trim().equals("")) {
            jScrollPane_jLayeredPane_Doctors.setVisible(false);
        } else {
            jScrollPane_jLayeredPane_Doctors.setVisible(true);
            tx_id_jLayeredPane_doctoers.grabFocus();
        }
    }//GEN-LAST:event_tx_id_jLayeredPane_doctoersActionPerformed

    private void tx_id_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_id_jLayeredPane_doctoers, "N", 10);
        if (evt.getKeyCode() == 10) {
            if (!tx_id_jLayeredPane_doctoers.getText().equals("")) {
                jScrollPane_jLayeredPane_Doctors.setVisible(false);
                tx_name_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_id_jLayeredPane_doctoersKeyPressed

    private void tx_id_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_id_jLayeredPane_doctoersKeyReleased
        jScrollPane_jLayeredPane_Doctors.setVisible(true);
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            jList_jLayeredPane_Doctors.grabFocus();
        } else if (!(tx_id_jLayeredPane_doctoers.getText().trim().isEmpty())) {
            searchANDListDockter("doctor", "id", tx_id_jLayeredPane_doctoers.getText(), jList_jLayeredPane_Doctors);
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!tx_id_jLayeredPane_doctoers.getText().isEmpty()) {
                jScrollPane_jLayeredPane_Doctors.setVisible(false);
                tx_name_jLayeredPane_doctoers.grabFocus();
            }
        }

        if (evt.getKeyChar() == KeyEvent.VK_F10) {
            b_search_jLayeredPaneDoctors1.doClick();
        }
    }//GEN-LAST:event_tx_id_jLayeredPane_doctoersKeyReleased

    private void tx_name_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_name_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_name_jLayeredPane_doctoersAncestorRemoved

    private void tx_name_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_name_jLayeredPane_doctoersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_name_jLayeredPane_doctoersActionPerformed

    private void tx_name_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_name_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_name_jLayeredPane_doctoers, "A", 50);
    }//GEN-LAST:event_tx_name_jLayeredPane_doctoersKeyPressed

    private void tx_name_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_name_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_name_jLayeredPane_doctoers.getText().equals("")) {
                tx_address_jLayeredPane_doctoers.grabFocus();
            } else {
                tx_name_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_name_jLayeredPane_doctoersKeyReleased

    private void tx_phone_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_phone_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_phone_jLayeredPane_doctoersAncestorRemoved

    private void tx_phone_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_phone_jLayeredPane_doctoersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_phone_jLayeredPane_doctoersActionPerformed

    private void tx_phone_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_phone_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_phone_jLayeredPane_doctoers, "N", 11);
    }//GEN-LAST:event_tx_phone_jLayeredPane_doctoersKeyPressed

    private void tx_phone_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_phone_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_phone_jLayeredPane_doctoers.getText().equals("")) {
                tx_acountnumber_jLayeredPane_doctoers.grabFocus();
            } else {
                tx_phone_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_phone_jLayeredPane_doctoersKeyReleased

    private void tx_address_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_address_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_address_jLayeredPane_doctoersAncestorRemoved

    private void tx_address_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_address_jLayeredPane_doctoersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_address_jLayeredPane_doctoersActionPerformed

    private void tx_address_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_address_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_address_jLayeredPane_doctoers, "NA", 150);
    }//GEN-LAST:event_tx_address_jLayeredPane_doctoersKeyPressed

    private void tx_address_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_address_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_address_jLayeredPane_doctoers.getText().equals("")) {
                tx_phone_jLayeredPane_doctoers.grabFocus();
            } else {
                tx_address_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_address_jLayeredPane_doctoersKeyReleased

    private void tx_banknumber_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_banknumber_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_banknumber_jLayeredPane_doctoersAncestorRemoved

    private void tx_banknumber_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_banknumber_jLayeredPane_doctoersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_banknumber_jLayeredPane_doctoersActionPerformed

    private void tx_banknumber_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_banknumber_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_banknumber_jLayeredPane_doctoers, "A", 15);
    }//GEN-LAST:event_tx_banknumber_jLayeredPane_doctoersKeyPressed

    private void tx_banknumber_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_banknumber_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_banknumber_jLayeredPane_doctoers.getText().equals("")) {
                jCheckBox_active_jLayeredPane_doctoers.grabFocus();
                b_enter_jLayeredPaneDoctors.setVisible(true);
            } else {
                tx_banknumber_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_banknumber_jLayeredPane_doctoersKeyReleased

    private void tx_acountnumber_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_acountnumber_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_acountnumber_jLayeredPane_doctoersAncestorRemoved

    private void tx_acountnumber_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_acountnumber_jLayeredPane_doctoersActionPerformed

    }//GEN-LAST:event_tx_acountnumber_jLayeredPane_doctoersActionPerformed

    private void tx_acountnumber_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_acountnumber_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_acountnumber_jLayeredPane_doctoers, "N", 14);
    }//GEN-LAST:event_tx_acountnumber_jLayeredPane_doctoersKeyPressed

    private void tx_acountnumber_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_acountnumber_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_acountnumber_jLayeredPane_doctoers.getText().equals("")) {
                tx_banknumber_jLayeredPane_doctoers.grabFocus();
            } else {
                tx_acountnumber_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_acountnumber_jLayeredPane_doctoersKeyReleased

    private void jCheckBox_active_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_active_jLayeredPane_doctoersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_active_jLayeredPane_doctoersActionPerformed

    private void b_search_jLayeredPaneDoctors1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_search_jLayeredPaneDoctors1ActionPerformed
        if (!tx_id_jLayeredPane_doctoers.getText().trim().isEmpty() & tx_iddoctor_jLayeredPane_invoice1.getText().trim().isEmpty()) {
            searchDoctorFillColumn(tx_id_jLayeredPane_doctoers.getText().trim());
        } else {
            tx_id_jLayeredPane_doctoers.grabFocus();
        }
    }//GEN-LAST:event_b_search_jLayeredPaneDoctors1ActionPerformed

    private void la_invoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_invoiceMouseClicked

        int x = JOptionPane.showConfirmDialog(this, "Do you want to create invoice?", "Create Invoice", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            jLayeredPaneReport.setVisible(false);
            jLayeredPane_Doctors.setVisible(false);
            jScrollPane_item_jLayeredPane_invoice.setVisible(false);
            table_item_jLayeredPane_invoice1.setVisible(true);
            table_rxitem_jLayeredPane_invoice.setVisible(false);
            jLayeredPane_invoice.setVisible(true);
            combo_type_jLayeredPane_invoice.grabFocus();
            combo_type_jLayeredPane_invoice.showPopup();
            jScrollPane4.setVisible(false);
            jScrollPane1.setVisible(false);
            jScrollPane_did_jLayeredPane_invoice.setVisible(false);
            lastNumber();
            clearjLayeredPane_invoice();
            DefaultTableModel dt = (DefaultTableModel) table_report_jLayeredPaneReport.getModel();
            dt.setRowCount(0);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_la_invoiceMouseClicked

    private void la_reportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_reportMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you want to create Report?", "Create Report", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            fristVisible();
            clearjLayeredPane_invoice();
            jLayeredPaneReport.setVisible(true);
            jScrollPane5.setVisible(false);
            jScrollPane2.setVisible(false);
            b_savepdf_jLayeredPaneReport.setVisible(false);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_la_reportMouseClicked

    private void la_invoiceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_invoiceMouseEntered
        la_invoice.setBackground(new Color(60, 204, 139));
    }//GEN-LAST:event_la_invoiceMouseEntered

    private void la_invoiceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_invoiceMouseExited
        la_invoice.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_la_invoiceMouseExited

    private void la_reportMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_reportMouseEntered
        la_report.setBackground(new Color(60, 204, 139));
    }//GEN-LAST:event_la_reportMouseEntered

    private void la_reportMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_reportMouseExited
        la_report.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_la_reportMouseExited

    private void la_doctorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_doctorsMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you want Add new Doctor ??", "Add Doctor", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            fristVisible();
            jLayeredPane_Doctors.setVisible(true);
            b_enter_jLayeredPaneDoctors.setVisible(true);
            jScrollPane_jLayeredPane_Doctors.setVisible(false);
            tx_id_jLayeredPane_doctoers.grabFocus();
            clearDoctorsFields();
            lastNumberDoctor();
            jScrollPane5.setVisible(false);
            jScrollPane2.setVisible(false);
            addTotableSearDoctor();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }

    }//GEN-LAST:event_la_doctorsMouseClicked

    private void la_doctorsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_doctorsMouseEntered
        la_doctors.setBackground(new Color(60, 204, 139));
    }//GEN-LAST:event_la_doctorsMouseEntered

    private void la_doctorsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_doctorsMouseExited
        la_doctors.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_la_doctorsMouseExited

    private void tx_iddoctor_jLayeredPane_invoice1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_iddoctor_jLayeredPane_invoice1ActionPerformed
        if (!tx_iddoctor_jLayeredPane_invoice1.getText().trim().equals("")) {
            combo_paymentmethod_jLayeredPane_invoice.grabFocus();
            combo_paymentmethod_jLayeredPane_invoice.showPopup();
        } else {
            tx_iddoctor_jLayeredPane_invoice1.grabFocus();
        }
    }//GEN-LAST:event_tx_iddoctor_jLayeredPane_invoice1ActionPerformed

    private void tx_iddoctor_jLayeredPane_invoice1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_iddoctor_jLayeredPane_invoice1KeyPressed
        txValidateKeyEvent(evt, tx_iddoctor_jLayeredPane_invoice1, "N", 7);
//        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
//            jScrollPane_did_jLayeredPane_invoice.setVisible(true);
//            jList_did_jLayeredPane_invoice.grabFocus();
//
//        } 
    }//GEN-LAST:event_tx_iddoctor_jLayeredPane_invoice1KeyPressed

    private void jLabel55MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you want to add item?", "Create Item", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
           fristVisible();
           additem.getCallPopup().setVisible(true);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
       
    }//GEN-LAST:event_jLabel55MouseClicked

    private void jLabel55MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MouseEntered
        jLabel55.setBackground(new Color(60, 204, 139));
    }//GEN-LAST:event_jLabel55MouseEntered

    private void jLabel55MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel55MouseExited
        jLabel55.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jLabel55MouseExited

    private void jComboBox_units_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_units_jLayeredPane_invoiceActionPerformed
        // int x = jComboBox_units_jLayeredPane_invoice.getSelectedIndex();
        //  setUnitANDsetNamae(x);
        if (!(tx_productname_jLayeredPane_invoice.getText().isEmpty())) {
            dbTableSearchUnitPrice(jComboBox_catogery_jLayeredPane_invoice.getSelectedItem().toString(), tx_productname_jLayeredPane_invoice.getText(), jComboBox_units_jLayeredPane_invoice.getSelectedItem().toString(), tx_unitprice_jLayeredPane_invoice);
        } else if ((tx_productname_jLayeredPane_invoice.getText().isEmpty())) {
            tx_productname_jLayeredPane_invoice.grabFocus();
        } else if (jComboBox_units_jLayeredPane_invoice.getSelectedItem().toString().isEmpty()) {
            jComboBox_units_jLayeredPane_invoice.grabFocus();
            jComboBox_units_jLayeredPane_invoice.showPopup();
        }

    }//GEN-LAST:event_jComboBox_units_jLayeredPane_invoiceActionPerformed

    private void jComboBox_units_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_units_jLayeredPane_invoiceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            jComboBox_units_jLayeredPane_invoice.grabFocus();
            jComboBox_units_jLayeredPane_invoice.showPopup();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dbTableSearchUnitPrice(jComboBox_catogery_jLayeredPane_invoice.getSelectedItem().toString(), tx_productname_jLayeredPane_invoice.getText(), jComboBox_units_jLayeredPane_invoice.getSelectedItem().toString(), tx_unitprice_jLayeredPane_invoice);
            tx_qty_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_jComboBox_units_jLayeredPane_invoiceKeyPressed

    private void jComboBox_catogery_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_catogery_jLayeredPane_invoiceActionPerformed

    }//GEN-LAST:event_jComboBox_catogery_jLayeredPane_invoiceActionPerformed

    private void jComboBox_catogery_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_catogery_jLayeredPane_invoiceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            jComboBox_catogery_jLayeredPane_invoice.grabFocus();
            jComboBox_catogery_jLayeredPane_invoice.showPopup();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchComboboxLoad(jComboBox_catogery_jLayeredPane_invoice.getSelectedIndex(), jComboBox_units_jLayeredPane_invoice);
            jComboBox_catogery_jLayeredPane_invoice.grabFocus();
            jComboBox_catogery_jLayeredPane_invoice.showPopup();

            tx_productname_jLayeredPane_invoice.grabFocus();

        }
    }//GEN-LAST:event_jComboBox_catogery_jLayeredPane_invoiceKeyPressed

    private void jComboBox_catogery_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_catogery_jLayeredPane_invoiceKeyReleased

        if (evt.getKeyCode() == 39) {
            tx_productname_jLayeredPane_invoice.grabFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F10) {
            if (tx_total_jLayeredPane_invoice.getText().equals("0.0")) {
                tx_shipingcost_jLayeredPane_invoice.setText(null);
                tx_shipingcost_jLayeredPane_invoice.grabFocus();
            } else {
                b_print_jLayeredPane_invoice.doClick();
            }
        }
    }//GEN-LAST:event_jComboBox_catogery_jLayeredPane_invoiceKeyReleased

    private void jComboBox_units_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_units_jLayeredPane_invoiceKeyReleased
        if (evt.getKeyCode() == 39) {
            tx_qty_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_jComboBox_units_jLayeredPane_invoiceKeyReleased

    private void combo_type_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_type_jLayeredPane_invoiceActionPerformed
        if (combo_type_jLayeredPane_invoice.getSelectedItem().equals("Normal")) {
            tx_iddoctor_jLayeredPane_invoice1.setVisible(false);
            la_cc_jLayeredPane_invoice1.setVisible(false);
            la_did_jLayeredPane_invoice1.setVisible(false);
            tx_voucher_jLayeredPane_invoice.setText("0%");
            tx_voucher_jLayeredPane_invoice.setEditable(true);
            tx_buyprice_jLayeredPane_invoice.setVisible(false);
            la_c_buyprice_jLayeredPane_invoice.setVisible(false);
            la_buyprice_jLayeredPane_invoice.setVisible(false);
            table_rxitem_jLayeredPane_invoice.setVisible(false);
            table_item_jLayeredPane_invoice1.setVisible(true);
            jComboBox_catogery_jLayeredPane_invoice.setVisible(true);
            jComboBox_catogery_jLayeredPane_invoice.setSelectedIndex(0);
            jComboBox_units_jLayeredPane_invoice.setVisible(true);

            tx_productname_jLayeredPane_invoice.setText(null);
            tx_refno_jLayeredPane_invoice.grabFocus();

        } else if (combo_type_jLayeredPane_invoice.getSelectedItem().equals("DR")) {
            tx_iddoctor_jLayeredPane_invoice1.setVisible(true);
            la_cc_jLayeredPane_invoice1.setVisible(true);
            la_did_jLayeredPane_invoice1.setVisible(true);
            tx_voucher_jLayeredPane_invoice.setText("0.0");
            tx_voucher_jLayeredPane_invoice.setEditable(false);
            jComboBox_catogery_jLayeredPane_invoice.setVisible(true);
            jComboBox_catogery_jLayeredPane_invoice.setSelectedItem("RX");
            table_rxitem_jLayeredPane_invoice.setVisible(true);
            table_item_jLayeredPane_invoice1.setVisible(false);

            tx_buyprice_jLayeredPane_invoice.setVisible(true);
            la_c_buyprice_jLayeredPane_invoice.setVisible(true);
            la_buyprice_jLayeredPane_invoice.setVisible(true);

            jComboBox_units_jLayeredPane_invoice.setVisible(true);

            tx_productname_jLayeredPane_invoice.setText("Priscription Row Matirial");
            tx_refno_jLayeredPane_invoice.grabFocus();

        } else if (combo_type_jLayeredPane_invoice.getSelectedItem().equals("Full Normal")) {
            tx_iddoctor_jLayeredPane_invoice1.setVisible(false);
            la_cc_jLayeredPane_invoice1.setVisible(false);
            la_did_jLayeredPane_invoice1.setVisible(false);
            tx_voucher_jLayeredPane_invoice.setText("0%");
            tx_voucher_jLayeredPane_invoice.setEditable(true);
            tx_buyprice_jLayeredPane_invoice.setVisible(false);
            la_c_buyprice_jLayeredPane_invoice.setVisible(false);
            la_buyprice_jLayeredPane_invoice.setVisible(false);
            table_rxitem_jLayeredPane_invoice.setVisible(false);
            jComboBox_catogery_jLayeredPane_invoice.setVisible(false);

            jComboBox_units_jLayeredPane_invoice.setVisible(false);

            table_item_jLayeredPane_invoice1.setVisible(true);
            tx_productname_jLayeredPane_invoice.setText(null);
            tx_refno_jLayeredPane_invoice.grabFocus();

        } else {
            combo_type_jLayeredPane_invoice.grabFocus();
            combo_type_jLayeredPane_invoice.showPopup();
        }
    }//GEN-LAST:event_combo_type_jLayeredPane_invoiceActionPerformed

    private void combo_paymentmethod_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_paymentmethod_jLayeredPane_invoiceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_paymentmethod_jLayeredPane_invoiceKeyPressed

    private void jCheckBox_active_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox_active_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jCheckBox_active_jLayeredPane_doctoers.setSelected(true);
            b_enter_jLayeredPaneDoctors.doClick();
        }
    }//GEN-LAST:event_jCheckBox_active_jLayeredPane_doctoersKeyReleased

    private void jList_item_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_item_jLayeredPane_invoiceKeyReleased

    }//GEN-LAST:event_jList_item_jLayeredPane_invoiceKeyReleased

    private void jComboBox_catogery_jLayeredPane_invoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_catogery_jLayeredPane_invoiceMouseClicked

    }//GEN-LAST:event_jComboBox_catogery_jLayeredPane_invoiceMouseClicked

    private void jComboBox_catogery_jLayeredPane_invoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_catogery_jLayeredPane_invoiceMouseReleased
        if (jComboBox_catogery_jLayeredPane_invoice.getSelectedIndex() != -1) {
            searchComboboxLoad(jComboBox_catogery_jLayeredPane_invoice.getSelectedIndex(), jComboBox_units_jLayeredPane_invoice);

        } else {
            jComboBox_catogery_jLayeredPane_invoice.grabFocus();
            jComboBox_catogery_jLayeredPane_invoice.showPopup();
        }
    }//GEN-LAST:event_jComboBox_catogery_jLayeredPane_invoiceMouseReleased

    private void jList_item_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_item_jLayeredPane_invoiceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (!jList_item_jLayeredPane_invoice.isSelectionEmpty()) {
                tx_productname_jLayeredPane_invoice.setText(jList_item_jLayeredPane_invoice.getSelectedValue().toString());
                jScrollPane_item_jLayeredPane_invoice.setVisible(false);
                jComboBox_units_jLayeredPane_invoice.grabFocus();
                jComboBox_units_jLayeredPane_invoice.setPopupVisible(true);
            }
        }
    }//GEN-LAST:event_jList_item_jLayeredPane_invoiceKeyPressed

    private void tx_shipingcost_jLayeredPane_invoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_shipingcost_jLayeredPane_invoiceKeyReleased
        txValidateKeyEvent(evt, tx_shipingcost_jLayeredPane_invoice, "N", 4);
    }//GEN-LAST:event_tx_shipingcost_jLayeredPane_invoiceKeyReleased

    private void jList_jLayeredPane_DoctorsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_jLayeredPane_DoctorsKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList_jLayeredPane_Doctors.isSelectionEmpty()) {
                tx_id_jLayeredPane_doctoers.setText(jList_jLayeredPane_Doctors.getSelectedValue().toString());
                jScrollPane_jLayeredPane_Doctors.setVisible(false);
                tx_name_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_jList_jLayeredPane_DoctorsKeyReleased

    private void jList_jLayeredPane_DoctorsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList_jLayeredPane_DoctorsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList_jLayeredPane_Doctors.isSelectionEmpty()) {
                tx_id_jLayeredPane_doctoers.setText(jList_jLayeredPane_Doctors.getSelectedValue().toString());
                jScrollPane_jLayeredPane_Doctors.setVisible(false);
                tx_id_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_jList_jLayeredPane_DoctorsKeyPressed

    private void b_clear_jLayeredPaneDoctors1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clear_jLayeredPaneDoctors1ActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want to Clear All", "Clear All", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            b_enter_jLayeredPaneDoctors.setVisible(true);
            tx_id_jLayeredPane_doctoers.grabFocus();
            clearDoctorsFields();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            tx_id_jLayeredPane_doctoers.grabFocus();
        }
    }//GEN-LAST:event_b_clear_jLayeredPaneDoctors1ActionPerformed

    private void b_searchamounts_jLayeredPaneReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_searchamounts_jLayeredPaneReportActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want Get Doctor's Amounts", "Get Amounts", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            doctorAmount.getCallPopup().setVisible(true);
            b_savepdf_jLayeredPaneReport.setVisible(false);
            jScrollPane5.setVisible(false);
            jScrollPane2.setVisible(false);
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_b_searchamounts_jLayeredPaneReportActionPerformed

    private void tx_buyprice_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_buyprice_jLayeredPane_invoiceActionPerformed
        if (!tx_buyprice_jLayeredPane_invoice.getText().trim().equals("")) {
            buyprice = Double.parseDouble(tx_buyprice_jLayeredPane_invoice.getText());
            double buyprice2 = buyprice + (buyprice * 35 / 100);
            tx_unitprice_jLayeredPane_invoice.setText("" + buyprice2);
            tx_qty_jLayeredPane_invoice.grabFocus();
        } else {
            tx_buyprice_jLayeredPane_invoice.grabFocus();
        }
    }//GEN-LAST:event_tx_buyprice_jLayeredPane_invoiceActionPerformed

    private void tx_buyprice_jLayeredPane_invoiceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_buyprice_jLayeredPane_invoiceKeyPressed
        txValidateKeyEvent(evt, tx_unitprice_jLayeredPane_invoice, "N", 4);
    }//GEN-LAST:event_tx_buyprice_jLayeredPane_invoiceKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!(tx_id_jLayeredPane_doctoers.getText().trim().isEmpty() | tx_name_jLayeredPane_doctoers.getText().trim().isEmpty() | tx_address_jLayeredPane_doctoers.getText().trim().isEmpty()
                | tx_phone_jLayeredPane_doctoers.getText().trim().isEmpty()
                | tx_acountnumber_jLayeredPane_doctoers.getText().trim().isEmpty()
                | tx_branchname_jLayeredPane_doctoers.getText().trim().isEmpty()
                | tx_banknumber_jLayeredPane_doctoers.getText().trim().isEmpty())) {
            int did = Integer.parseInt(tx_id_jLayeredPane_doctoers.getText());
            String name = tx_name_jLayeredPane_doctoers.getText().trim();
            String address = tx_address_jLayeredPane_doctoers.getText().trim();
            String phone = tx_phone_jLayeredPane_doctoers.getText().trim();
            String acnumber = tx_acountnumber_jLayeredPane_doctoers.getText().trim();
            String baname = tx_banknumber_jLayeredPane_doctoers.getText().trim();
            String branchname = tx_branchname_jLayeredPane_doctoers.getText();
            boolean b = jCheckBox_active_jLayeredPane_doctoers.isSelected();
            int bb = 1;
            if (b == false) {
                bb = 0;
            }
            try {
                DBClass.putData("update doctor set name='" + name + "',phone='" + phone + "',address='" + address + "',bankacountnumber='" + acnumber + "',bankaname ='" + baname + "',branchname ='" + branchname + "',isactive ='" + bb + "' where  id ='" + did + "' ");
                clearDoctorsFields();
                lastNumberDoctor();
                addTotableSearDoctor();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate Ref.No : " + did + "\n  Please check the  recode!!", "Duplicate Entity", JOptionPane.YES_NO_OPTION);
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_refno_jLayeredPane_invoice.grabFocus();
                } else if (JOptionPane.NO_OPTION == shoConform) {
                    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Bug Error doctorTableInsert !!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
            }
            JOptionPane.showMessageDialog(null, "Update Successful ", "Successful", JOptionPane.OK_OPTION);
        } else if (tx_id_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_id_jLayeredPane_doctoers.grabFocus();
        } else if (tx_name_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_name_jLayeredPane_doctoers.grabFocus();
        } else if (tx_address_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_address_jLayeredPane_doctoers.grabFocus();
        } else if (tx_phone_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_phone_jLayeredPane_doctoers.grabFocus();
        } else if (tx_acountnumber_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_acountnumber_jLayeredPane_doctoers.grabFocus();
        } else if (tx_banknumber_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_banknumber_jLayeredPane_doctoers.grabFocus();
        } else if (tx_branchname_jLayeredPane_doctoers.getText().trim().isEmpty()) {
            tx_branchname_jLayeredPane_doctoers.grabFocus();
        } else {
            tx_id_jLayeredPane_doctoers.grabFocus();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox_issame_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_issame_jLayeredPane_invoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_issame_jLayeredPane_invoiceActionPerformed

    private void b_ouramount_jLayeredPaneReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_ouramount_jLayeredPaneReportActionPerformed
        String key = JOptionPane.showInputDialog("Enter The Key ?");
        if (key.trim().equals("lili64")) {
            // ourAmount();
            checkFirstDateAndSaveAmountAndClearDoctorAmount();
        } else {
            jComboBox1_invoice_type_jLayeredPaneReport.grabFocus();
        }

    }//GEN-LAST:event_b_ouramount_jLayeredPaneReportActionPerformed

    private void tx_branchname_jLayeredPane_doctoersAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_branchname_jLayeredPane_doctoersAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_branchname_jLayeredPane_doctoersAncestorRemoved

    private void tx_branchname_jLayeredPane_doctoersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_branchname_jLayeredPane_doctoersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_branchname_jLayeredPane_doctoersActionPerformed

    private void tx_branchname_jLayeredPane_doctoersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_branchname_jLayeredPane_doctoersKeyPressed
        txValidateKeyEvent(evt, tx_branchname_jLayeredPane_doctoers, "A", 15);
    }//GEN-LAST:event_tx_branchname_jLayeredPane_doctoersKeyPressed

    private void tx_branchname_jLayeredPane_doctoersKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_branchname_jLayeredPane_doctoersKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_branchname_jLayeredPane_doctoers.getText().equals("")) {
                tx_banknumber_jLayeredPane_doctoers.setVisible(true);
            } else {
                tx_branchname_jLayeredPane_doctoers.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_branchname_jLayeredPane_doctoersKeyReleased

    private void b_lastprint_jLayeredPane_invoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_lastprint_jLayeredPane_invoiceActionPerformed
        printInvoiceCopy(Integer.parseInt(la_lastRxnumber.getText()));
    }//GEN-LAST:event_b_lastprint_jLayeredPane_invoiceActionPerformed

    private void jLabel59MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel59MouseClicked
       int x = JOptionPane.showConfirmDialog(this, "Do you want to add employee?", "ADD EMPLOYEE", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            String key = JOptionPane.showInputDialog("Enter The Key ?");
            if (key.trim().equals("lili64")) {
                fristVisible();
                addemployee.getCallPopup().setVisible(true);
            } else {
                jDateChooser1.grabFocus();
            }
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_jLabel59MouseClicked

    private void jLabel59MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel59MouseEntered
        jLabel59.setBackground(new Color(60, 204, 139));
    }//GEN-LAST:event_jLabel59MouseEntered

    private void jLabel59MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel59MouseExited
        jLabel59.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_jLabel59MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(invoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //    System.out.println("");
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new invoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear_jLayeredPaneDoctors1;
    private javax.swing.JButton b_enter_jLayeredPaneDoctors;
    private javax.swing.JButton b_lastprint_jLayeredPane_invoice;
    private javax.swing.JButton b_ouramount_jLayeredPaneReport;
    private javax.swing.JButton b_print_jLayeredPane_invoice;
    private javax.swing.JButton b_remove_jLayeredPane_invoice;
    private javax.swing.JButton b_savepdf_jLayeredPaneReport;
    private javax.swing.JButton b_search_jLayeredPaneDoctors1;
    private javax.swing.JButton b_searchamounts_jLayeredPaneReport;
    private javax.swing.JButton b_searchinvoices_jLayeredPaneReport;
    private javax.swing.JComboBox combo_paymentmethod_jLayeredPane_invoice;
    private javax.swing.JComboBox combo_type_jLayeredPane_invoice;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox_active_jLayeredPane_doctoers;
    private javax.swing.JCheckBox jCheckBox_issame_jLayeredPane_invoice;
    private javax.swing.JComboBox jComboBox1_invoice_type_jLayeredPaneReport;
    private javax.swing.JComboBox jComboBox_catogery_jLayeredPane_invoice;
    private javax.swing.JComboBox jComboBox_units_jLayeredPane_invoice;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPaneMenu;
    private javax.swing.JLayeredPane jLayeredPaneReport;
    private javax.swing.JLayeredPane jLayeredPaneTop;
    private javax.swing.JLayeredPane jLayeredPane_Doctors;
    private javax.swing.JLayeredPane jLayeredPane_invoice;
    private javax.swing.JList jList_did_jLayeredPane_invoice;
    private javax.swing.JList jList_item_jLayeredPane_invoice;
    private javax.swing.JList jList_jLayeredPane_Doctors;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane_did_jLayeredPane_invoice;
    private javax.swing.JScrollPane jScrollPane_item_jLayeredPane_invoice;
    private javax.swing.JScrollPane jScrollPane_jLayeredPane_Doctors;
    private javax.swing.JScrollPane jScrollPane_jTable_jdoctoramount;
    private javax.swing.JScrollPane jScrollPanej_Table_rxamount;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable_jdoctoramount;
    private javax.swing.JTable jTable_jpanal_doctors;
    private javax.swing.JTable jTable_rxamount;
    private javax.swing.JLabel la_buyprice_jLayeredPane_invoice;
    private javax.swing.JLabel la_c_buyprice_jLayeredPane_invoice;
    private javax.swing.JLabel la_cc_jLayeredPane_invoice1;
    private javax.swing.JLabel la_close;
    public static javax.swing.JLabel la_date;
    private javax.swing.JLabel la_did_jLayeredPane_invoice1;
    private javax.swing.JLabel la_doctors;
    private javax.swing.JLabel la_invoice;
    private javax.swing.JLabel la_lastRxnumber;
    private javax.swing.JLabel la_lastid_doctors;
    private javax.swing.JLabel la_minimise;
    private javax.swing.JLabel la_report;
    private javax.swing.JLabel la_time;
    private javax.swing.JLabel logo;
    private javax.swing.JTable table_item_jLayeredPane_invoice1;
    private javax.swing.JTable table_report_jLayeredPaneReport;
    private javax.swing.JTable table_rxitem_jLayeredPane_invoice;
    private javax.swing.JTextField tx_acountnumber_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_addressB_jLayeredPane_invoice;
    private javax.swing.JTextField tx_addressD_jLayeredPane_invoice;
    private javax.swing.JTextField tx_address_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_banknumber_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_billto_jLayeredPane_invoice;
    private javax.swing.JTextField tx_branchname_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_buyprice_jLayeredPane_invoice;
    private javax.swing.JTextField tx_deliverto_jLayeredPane_invoice;
    private javax.swing.JTextField tx_id_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_iddoctor_jLayeredPane_invoice1;
    private javax.swing.JTextField tx_name_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_phoneB_jLayeredPane_invoice;
    private javax.swing.JTextField tx_phoneD_jLayeredPane_invoice;
    private javax.swing.JTextField tx_phone_jLayeredPane_doctoers;
    private javax.swing.JTextField tx_productname_jLayeredPane_invoice;
    private javax.swing.JTextField tx_qty_jLayeredPane_invoice;
    private javax.swing.JTextField tx_refno_jLayeredPane_invoice;
    private javax.swing.JTextField tx_shipingcost_jLayeredPane_invoice;
    private javax.swing.JLabel tx_subtotal_jLayeredPane_invoice;
    private javax.swing.JLabel tx_total_jLayeredPane_invoice;
    private javax.swing.JTextField tx_unitprice_jLayeredPane_invoice;
    private javax.swing.JTextField tx_voucher_jLayeredPane_invoice;
    // End of variables declaration//GEN-END:variables

    private void dateTime() {
        new Thread(() -> {
            StringBuffer sb, sb2;
            sb2 = new StringBuffer(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
            la_date.setText("" + sb2);
            while (true) {
                sb = new StringBuffer(new SimpleDateFormat("HH:mm:ss").format(new Date()));
                la_time.setText("" + sb);
            }
        }).start();
    }

    private void fristVisible() {
        jLayeredPane_invoice.setVisible(false);
        jLayeredPaneReport.setVisible(false);
        jLayeredPane_Doctors.setVisible(false);
    }

    private void clearjLayeredPane_invoice() {
        DefaultTableModel dt = (DefaultTableModel) table_rxitem_jLayeredPane_invoice.getModel();
        dt.setRowCount(0);
        dt = (DefaultTableModel) table_item_jLayeredPane_invoice1.getModel();
        dt.setRowCount(0);
        table_item_jLayeredPane_invoice1.setVisible(false);
        table_rxitem_jLayeredPane_invoice.setVisible(false);
        jCheckBox_issame_jLayeredPane_invoice.setSelected(false);
        combo_paymentmethod_jLayeredPane_invoice.setSelectedIndex(0);
        tx_addressD_jLayeredPane_invoice.setText(null);
        tx_addressB_jLayeredPane_invoice.setText(null);
        tx_billto_jLayeredPane_invoice.setText(null);
        tx_deliverto_jLayeredPane_invoice.setText(null);
        tx_phoneB_jLayeredPane_invoice.setText(null);
        tx_phoneD_jLayeredPane_invoice.setText(null);
        tx_productname_jLayeredPane_invoice.setText(null);
        tx_qty_jLayeredPane_invoice.setText(null);
        tx_refno_jLayeredPane_invoice.setText(null);
        tx_shipingcost_jLayeredPane_invoice.setText("0.0");
        tx_subtotal_jLayeredPane_invoice.setText("0.0");
        tx_total_jLayeredPane_invoice.setText("0.0");
        tx_unitprice_jLayeredPane_invoice.setText(null);
        tx_voucher_jLayeredPane_invoice.setText("0%");
        tx_refno_jLayeredPane_invoice.grabFocus();
        b_print_jLayeredPane_invoice.setVisible(false);
        tx_iddoctor_jLayeredPane_invoice1.setText(null);
        jScrollPane_item_jLayeredPane_invoice.setVisible(false);
        combo_type_jLayeredPane_invoice.setSelectedIndex(0);
        jComboBox_catogery_jLayeredPane_invoice.setSelectedIndex(0);
        tx_buyprice_jLayeredPane_invoice.setText(null);
        //jComboBox_units_jLayeredPane_invoice.setSelectedIndex(0);
    }

    private boolean printButtonIncertQuery() {
        int x = JOptionPane.showConfirmDialog(this, "Want To Print This Invoice", "Print Invoice", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {

            if (!(tx_refno_jLayeredPane_invoice.getText().isEmpty()) & !(tx_deliverto_jLayeredPane_invoice.getText().isEmpty())) {
                try {
                    DefaultTableModel dtm;
                    int refno = Integer.parseInt(tx_refno_jLayeredPane_invoice.getText().trim());
                    RN = refno;

                    String paymentmethod = combo_paymentmethod_jLayeredPane_invoice.getSelectedItem().toString();
                    String billto = tx_billto_jLayeredPane_invoice.getText();
                    String addressb = tx_addressB_jLayeredPane_invoice.getText();
                    String phoneb = tx_phoneB_jLayeredPane_invoice.getText();

                    String deliverto = tx_deliverto_jLayeredPane_invoice.getText();
                    String addressd = tx_addressD_jLayeredPane_invoice.getText();
                    String phoned = tx_phoneD_jLayeredPane_invoice.getText();

                    double subtotal = Double.parseDouble(tx_subtotal_jLayeredPane_invoice.getText());
                    double shippingcost = Double.parseDouble(tx_shipingcost_jLayeredPane_invoice.getText());
                    //   double voucher = Double.parseDouble(tx_voucher_jLayeredPane_invoice.getText());
                    double finaltotal = Double.parseDouble(tx_total_jLayeredPane_invoice.getText());
                    String invoicedate = la_date.getText();
                    String invoiceTime = la_time.getText();
                    // stat tinyint        
                    //

                    if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0 | combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
                        try {
                            DBClass.putData("insert into invoice (refNo,paymentMethod,billto,addressb,phoneb,deliverto,addressd,phoned,subtotal,shippingcost,voucher,finaltotal,invoicedate,invoiceTime) values('" + refno + "','" + paymentmethod + "' ,'" + billto + "' ,'" + addressb + "' ,'" + phoneb + "','" + deliverto + "' ,'" + addressd + "' ,'" + phoned + "','" + subtotal + "','" + shippingcost + "','" + VOU + "','" + finaltotal + "' ,'" + invoicedate + "', '" + invoiceTime + "')");
                            //   iddoctor = 1;
                            //    DBClass.putData("insert into invoice  values('" + refno + "', '" + iddoctor + "','" + paymentmethod + "' ,'" + billto + "' ,'" + addressb + "' ,'" + phoneb + "','" + deliverto + "' ,'" + addressd + "' ,'" + phoned + "','" + subtotal + "','" + shippingcost + "','" + VOU + "','" + finaltotal + "' ,'" + invoicedate + "', '" + invoiceTime + "','1')");
                            dtm = (DefaultTableModel) table_item_jLayeredPane_invoice1.getModel();
                            for (int row = 0; row < dtm.getRowCount(); row++) {
                                String name = dtm.getValueAt(row, 0).toString();
                                double unitprice = Double.parseDouble(dtm.getValueAt(row, 1).toString());
                                int qty = Integer.parseInt(dtm.getValueAt(row, 2).toString());
                                double price = Double.parseDouble(dtm.getValueAt(row, 3).toString());
                                DBClass.putData("insert into invoiceitem (refNo,name,unitprice,qty,price)  values('" + refno + "' , '" + name + "' ,'" + unitprice + "' ,'" + qty + "' ,'" + price + "')");
                            }
                            dtm.setRowCount(0);
                            return true;
                        } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                            //  e.printStackTrace();
                            JOptionPane.showConfirmDialog(this, "trying to save duplicate Ref.No : " + refno + "\n  Please check the  recode!!! " + e, "Duplicate Entity", JOptionPane.ERROR_MESSAGE);
                            tx_refno_jLayeredPane_invoice.grabFocus();
                            return false;
                        }
                    } else {
                        String did = tx_iddoctor_jLayeredPane_invoice1.getText();
                        try {
                            iddoctor = Integer.parseInt(tx_iddoctor_jLayeredPane_invoice1.getText().trim());
                            DBClass.putData("insert into invoice values('" + refno + "' , '" + iddoctor + "' , '" + paymentmethod + "' ,'" + billto + "' ,'" + addressb + "' ,'" + phoneb + "','" + deliverto + "' ,'" + addressd + "' ,'" + phoned + "','" + subtotal + "','" + shippingcost + "','" + VOU + "','" + finaltotal + "' ,'" + invoicedate + "', '" + invoiceTime + "','1')");
                            dtm = (DefaultTableModel) table_rxitem_jLayeredPane_invoice.getModel();
                            for (int row = 0; row < dtm.getRowCount(); row++) {
                                String name = dtm.getValueAt(row, 0).toString();
                                double buypricet = Double.parseDouble(dtm.getValueAt(row, 1).toString());
                                double unitprice = Double.parseDouble(dtm.getValueAt(row, 2).toString());
                                int qty = Integer.parseInt(dtm.getValueAt(row, 3).toString());
                                double price = Double.parseDouble(dtm.getValueAt(row, 4).toString());
                                DBClass.putData("insert into invoiceitemrx (refNo,name,buyprice,unitprice,qty,price)  values('" + refno + "' , '" + name + "' ,'" + buypricet + "','" + unitprice + "' ,'" + qty + "' ,'" + price + "')");

                                double income = (buypricet * 35 / 100) / 7 * qty;
                                ResultSet rs = DBClass.getData("select doctorid,amount from doctoramount where doctorid ='" + did + "' ");
                                if (DBClass.r.isBeforeFirst() == true) {
                                    if (rs.next()) {
                                        double beroreamount = Double.parseDouble(rs.getString("amount"));
                                        beroreamount += Double.parseDouble(df2.format(income));
                                        DBClass.putData("update  doctoramount set amount='" + beroreamount + "',date='" + la_date.getText() + "' where  doctorid ='" + did + "' ");
                                    }
                                }
////                                ResultSet rs2 = DBClass.getData("select refNo,amount from rxamount where refNo ='" + refno + "' ");
////                                if (DBClass.r.isBeforeFirst() == true) {
////                                    if (rs2.next()) {
////                                        double beroreamount = Double.parseDouble(rs.getString("amount"));
                                double beroreamount = Double.parseDouble(df2.format(income * 6));
                                DBClass.putData("insert into rxamount (refNo,amount,date) values( '" + refno + "','" + beroreamount + "','" + la_date.getText() + "')");
////                                    }
////                                }

                            }
                            dtm.setRowCount(0);
                            return true;
                        } catch (Exception e) {
                            // e.printStackTrace();
                            JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery Update!!! \n " + e, "Error", JOptionPane.ERROR_MESSAGE);
                            return false;
                        }

                    }

                } catch (Exception e) {
                    //  e.printStackTrace();
                    JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery!!! \n " + e, "Error", JOptionPane.ERROR_MESSAGE);
                    return false;
                }

            } else {
                tx_refno_jLayeredPane_invoice.grabFocus();
                combo_type_jLayeredPane_invoice.grabFocus();
                combo_type_jLayeredPane_invoice.showPopup();
                return false;
            }

        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            return false;
        } else {
            return false;
        }

    }

    private void setTotalMethod() {
        double sut1 = Double.parseDouble(tx_subtotal_jLayeredPane_invoice.getText());
        double ship = Double.parseDouble(tx_shipingcost_jLayeredPane_invoice.getText());
        if (sut1 == 0) {
            tx_total_jLayeredPane_invoice.setText("0.0");
        }
        if (!tx_voucher_jLayeredPane_invoice.getText().trim().equals("0%")) {
            double voucher = Double.parseDouble(tx_voucher_jLayeredPane_invoice.getText());
            if (voucher > 0) {
                double x = (Double.parseDouble(tx_subtotal_jLayeredPane_invoice.getText()) * voucher) / 100;
                VOU = x;
                tx_total_jLayeredPane_invoice.setText("" + (sut1 - x + ship));
            } else if (voucher == 0) {
                tx_total_jLayeredPane_invoice.setText("" + (sut1 + ship));
            } else {
                tx_voucher_jLayeredPane_invoice.grabFocus();
            }

        } else {
            tx_total_jLayeredPane_invoice.setText("" + (sut1 + ship));
        }
    }

    private void jcheckBoxMouseClick() {
        if (jCheckBox_issame_jLayeredPane_invoice.isSelected()) {
            if (!tx_billto_jLayeredPane_invoice.getText().trim().equals("")) {
                int x = JOptionPane.showConfirmDialog(this, "Do you want to 'Add SAME DETAILS' ", "ADD SAME", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    tx_deliverto_jLayeredPane_invoice.setText(tx_billto_jLayeredPane_invoice.getText());
                    tx_addressD_jLayeredPane_invoice.setText(tx_addressB_jLayeredPane_invoice.getText());
                    tx_phoneD_jLayeredPane_invoice.setText(tx_phoneB_jLayeredPane_invoice.getText());

                    if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0) {
                        jComboBox_catogery_jLayeredPane_invoice.setVisible(true);
                        jComboBox_catogery_jLayeredPane_invoice.grabFocus();
                        jComboBox_catogery_jLayeredPane_invoice.showPopup();
                    } else if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 1 | combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
                        tx_productname_jLayeredPane_invoice.grabFocus();
                    }
                } else if (JOptionPane.NO_OPTION == x) {
                    tx_deliverto_jLayeredPane_invoice.setText("");
                    tx_addressD_jLayeredPane_invoice.setText("");
                    tx_phoneD_jLayeredPane_invoice.setText("");
                    tx_deliverto_jLayeredPane_invoice.grabFocus();
                }

            } else {
                tx_billto_jLayeredPane_invoice.grabFocus();
            }
        } else {
            if (!tx_billto_jLayeredPane_invoice.getText().trim().equals("")) {
                int x = JOptionPane.showConfirmDialog(this, "Do you want to 'Remove Deliver Details' ", "Remove ", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == x) {
                    tx_deliverto_jLayeredPane_invoice.setText("");
                    tx_addressD_jLayeredPane_invoice.setText("");
                    tx_phoneD_jLayeredPane_invoice.setText("");
                    tx_deliverto_jLayeredPane_invoice.grabFocus();
                } else if (JOptionPane.NO_OPTION == x) {
                    tx_deliverto_jLayeredPane_invoice.grabFocus();
                }

            }
        }
    }

    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {

            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }

    private void imagei() {
        try {
            // ImageIcon ii = new ImageIcon(getClass().getResource(SaveFilePath.REPORT_BASE_URL+"logo.jpg"));
            File f = new File(SaveFilePath.REPORT_BASE_URL + "logo.jpg");
            Image image2 = ImageIO.read(f);
            Image image = image2.getScaledInstance(logo.getWidth(), logo.getHeight(), Image.SCALE_SMOOTH);
            logo.setIcon(new ImageIcon(image));
        } catch (Exception e) {
            // e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Image Not Loadded imagei!!!!" + e);
        }
    }

    private void printInvoice() {
        if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0 | combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
            try {
                // InputStream is = new FileInputStream("report/reportinvoice.jasper"); 
                //    File f = new File(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                FileInputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                Map<String, Object> map = new HashMap<>();
                map.put("RefNo", RN);  //tx_refno_jLayeredPane_invoice.getText()
                JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
                //    JasperViewer.viewReport(fileReport, false);
                try {
                    String pathPDF = "";
                    // File file = new File("DDRR.txt");
                    File file = new File(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    if (!file.exists()) {
                        // System.out.println("f");
                        file.createNewFile();
                        FileWriter fr = new FileWriter(file);

                        JFileChooser jfc = new JFileChooser();
                        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                        jfc.setMultiSelectionEnabled(false);
                        jfc.showSaveDialog(jfc);
                        pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                        fr.write("DB.mpa=" + pathPDF);
                        fr.close();
                        File pF = new File(pathPDF);
                        pF.mkdir();
                    }

                    InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    Properties prop = new Properties();
                    prop.load(input);
                    pathPDF = prop.getProperty("DB.mpa");
                    //  System.out.println(prop.getProperty("DB.mpa"));

                    JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
                    //  JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                    // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
                } catch (IOException e) {
                    // e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "PDF not save printInvoice!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
                }

                JasperPrintManager.printReport(fileReport, false);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Repoting Error printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                FileInputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoicerx.jasper");
                //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                Map<String, Object> map = new HashMap<>();
                map.put("RefNo", RN);  //tx_refno_jLayeredPane_invoice.getText()
                JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
                //    JasperViewer.viewReport(fileReport, false);
                try {
                    String pathPDF = "";
                    // File file = new File("DDRR.txt");
                    File file = new File(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    if (!file.exists()) {
                        // System.out.println("f");
                        file.createNewFile();
                        FileWriter fr = new FileWriter(file);

                        JFileChooser jfc = new JFileChooser();
                        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                        jfc.setMultiSelectionEnabled(false);
                        jfc.showSaveDialog(jfc);
                        pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                        fr.write("DB.mpa=" + pathPDF);
                        fr.close();
                        File pF = new File(pathPDF);
                        pF.mkdir();
                    }

                    InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    Properties prop = new Properties();
                    prop.load(input);
                    pathPDF = prop.getProperty("DB.mpa");
                    //  System.out.println(prop.getProperty("DB.mpa"));

                    JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
                    //   JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                    // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
                } catch (IOException e) {
                    // e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "PDF not save printInvoice!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
                }

                JasperPrintManager.printReport(fileReport, false);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Repoting Error printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    private void searchANDTable(String dbtable, String searchColumnName, String value, JTable table, String NR) {
        try {
            if (NR.equals("Normal")) {

                ResultSet rs = DBClass.getData("select refNo,paymentMethod,subtotal,shippingcost,voucher,finalTotal from " + dbtable + " where " + searchColumnName + " ='" + value + "' and iddoctor IS NULL  order by " + searchColumnName);
                DefaultTableModel dm = (DefaultTableModel) table.getModel();
                dm.setRowCount(0);
                if (DBClass.r.isBeforeFirst() == true) {
                    while (rs.next()) {
                        Vector v = new Vector();
                        v.add(rs.getString("refNo"));
                        v.add(rs.getString("paymentMethod"));
                        v.add(rs.getString("subtotal"));
                        v.add(rs.getString("shippingcost"));
                        v.add(rs.getString("voucher"));
                        v.add(rs.getString("finalTotal"));
                        dm.addRow(v);
                    }
                }

            } else {
                ResultSet rs = DBClass.getData("select refNo,iddoctor,paymentMethod,subtotal,shippingcost,voucher,finalTotal from " + dbtable + " where " + searchColumnName + " ='" + value + "' and iddoctor  order by " + searchColumnName);
                DefaultTableModel dm = (DefaultTableModel) table.getModel();
                dm.setRowCount(0);
                if (DBClass.r.isBeforeFirst() == true) {
                    while (rs.next()) {
                        Vector v = new Vector();
                        v.add(rs.getString("refNo"));
                        v.add(rs.getString("iddoctor"));
                        v.add(rs.getString("paymentMethod"));
                        v.add(rs.getString("subtotal"));
                        v.add(rs.getString("shippingcost"));
                        v.add(rs.getString("voucher"));
                        v.add(rs.getString("finalTotal"));
                        dm.addRow(v);
                    }
                }
            }
            b_savepdf_jLayeredPaneReport.setVisible(true);
        } catch (SQLException sqle) {
            sqle.printStackTrace();
            JOptionPane.showMessageDialog(null, "NOT connect to the data base !");
        } catch (NullPointerException e) {
            e.printStackTrace();
            jDateChooser1.grabFocus();
        } catch (Exception e) {
            e.printStackTrace();
            jDateChooser1.grabFocus();
        }
    }

    private void savePDF(String NR) {
        String path = "";
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jfc.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = jfc.getSelectedFile().getAbsolutePath();
        }
        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + la_date.getText() + jfc.getSelectedFile().getName() + ".pdf"));//
            doc.open();
            if (NR.equals("RX")) {
                PdfPTable tb1 = new PdfPTable(7);
                PdfPTable tb2 = new PdfPTable(2);
                tb1.addCell("Ref.No");
                tb1.addCell("D.ID");
                tb1.addCell("Payment Method");
                tb1.addCell("Sub Total");
                tb1.addCell("Shiping Cost");
                tb1.addCell("Voucher");
                tb1.addCell("Total");

                tb2.addCell("Date");
                tb2.addCell("Total");

                Date date = jDateChooser1.getDate();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                tb2.addCell(sdf.format(date));

                double t = 0;
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    String rfno = jTable1.getValueAt(i, 0).toString();
                    String did = jTable1.getValueAt(i, 1).toString();
                    String paym = jTable1.getValueAt(i, 2).toString();
                    String subto = jTable1.getValueAt(i, 3).toString();
                    String shico = jTable1.getValueAt(i, 4).toString();
                    String vou = jTable1.getValueAt(i, 5).toString();
                    String to = jTable1.getValueAt(i, 6).toString();
                    t += Double.parseDouble(to);
                    tb1.addCell(rfno);
                    tb1.addCell(did);
                    tb1.addCell(paym);
                    tb1.addCell(subto);
                    tb1.addCell(shico);
                    tb1.addCell(vou);
                    tb1.addCell(to);
                }
                t = Math.round(t);
                tb2.addCell(Double.toString(t));
                doc.add(tb1);
                doc.add(tb2);
            } else {
                PdfPTable tb1 = new PdfPTable(6);
                PdfPTable tb2 = new PdfPTable(2);
                tb1.addCell("Ref.No");
                tb1.addCell("Payment Method");
                tb1.addCell("Sub Total");
                tb1.addCell("Shiping Cost");
                tb1.addCell("Voucher");
                tb1.addCell("Total");

                tb2.addCell("Date");
                tb2.addCell("Total");

                Date date = jDateChooser1.getDate();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                tb2.addCell(sdf.format(date));

                double t = 0;
                for (int i = 0; i < table_report_jLayeredPaneReport.getRowCount(); i++) {
                    String rfno = table_report_jLayeredPaneReport.getValueAt(i, 0).toString();
                    String paym = table_report_jLayeredPaneReport.getValueAt(i, 1).toString();
                    String subto = table_report_jLayeredPaneReport.getValueAt(i, 2).toString();
                    String shico = table_report_jLayeredPaneReport.getValueAt(i, 3).toString();
                    String vou = table_report_jLayeredPaneReport.getValueAt(i, 4).toString();
                    String to = table_report_jLayeredPaneReport.getValueAt(i, 5).toString();
                    t += Double.parseDouble(to);
                    tb1.addCell(rfno);
                    tb1.addCell(paym);
                    tb1.addCell(subto);
                    tb1.addCell(shico);
                    tb1.addCell(vou);
                    tb1.addCell(to);
                }
                t = Math.round(t);
                tb2.addCell(Double.toString(t));
                doc.add(tb1);
                doc.add(tb2);
            }

            JOptionPane.showMessageDialog(null, "Save PDF File ", "After Save Massage", JOptionPane.WARNING_MESSAGE);
        } catch (DocumentException ex) {
            JOptionPane.showMessageDialog(this, "Document Error savePDF!!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "This file can't Found savePDF !!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

        doc.close();

    }

    private void lastNumber() {
        try {
            ResultSet rs = DBClass.getData("select refNo from invoice order by refNo desc limit 1");
            if (rs.next()) {
                la_lastRxnumber.setText(rs.getString("refNo"));
            } else {
                la_lastRxnumber.setText("" + 0000);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Missing parats", "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

    }

    private String GenaratorPDFName(String x) {
        String name = "invoiceNumber" + x + ".pdf";
        return name;
    }

    private String GenaratorXMLName(String x) {
        String name = "invoiceNumber" + x + ".xml";
        return name;
    }

    public static void searchANDList(String dbtable, String searchAgainsed, String value, JList list) {
        try {
            DBClass.getData("select " + searchAgainsed + " from " + dbtable + " where " + searchAgainsed + " like '" + value + "%' order by " + searchAgainsed);

            Vector v = new Vector();
            list.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString(searchAgainsed));
                    list.setListData(v);
                }
            } else {
                list.setListData(v);
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void searchComboboxLoad(int selectedIndex, JComboBox jComboBox_units_jLayeredPane_invoice) {

        if (selectedIndex == 0) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("sp200g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp500g");
            jComboBox_units_jLayeredPane_invoice.addItem("50g");
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 1) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("250g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 2) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("28ml");
            jComboBox_units_jLayeredPane_invoice.addItem("50ml");
            jComboBox_units_jLayeredPane_invoice.addItem("185ml");
            jComboBox_units_jLayeredPane_invoice.addItem("375ml");
            jComboBox_units_jLayeredPane_invoice.addItem("750ml");
            jComboBox_units_jLayeredPane_invoice.addItem("4_5L");

        }
        if (selectedIndex == 3) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("sp100g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp200g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp400g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp500g");
            jComboBox_units_jLayeredPane_invoice.addItem("50g");
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 4) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("10g");
            jComboBox_units_jLayeredPane_invoice.addItem("30g");
            jComboBox_units_jLayeredPane_invoice.addItem("50g");
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 5) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("125ml");
            jComboBox_units_jLayeredPane_invoice.addItem("185ml");
            jComboBox_units_jLayeredPane_invoice.addItem("375ml");
            jComboBox_units_jLayeredPane_invoice.addItem("750ml");
            jComboBox_units_jLayeredPane_invoice.addItem("1L");
            jComboBox_units_jLayeredPane_invoice.addItem("2L");
            jComboBox_units_jLayeredPane_invoice.addItem("4_5L");

        }
        if (selectedIndex == 6) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("sp200g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp500g");
            jComboBox_units_jLayeredPane_invoice.addItem("50g");
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("250g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 7) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("sp500ml");
            jComboBox_units_jLayeredPane_invoice.addItem("185ml");
            jComboBox_units_jLayeredPane_invoice.addItem("375ml");
            jComboBox_units_jLayeredPane_invoice.addItem("750ml");

        }
        if (selectedIndex == 8) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("sp50g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp200g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp400g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp500g");
            jComboBox_units_jLayeredPane_invoice.addItem("50g");
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");

        }
        if (selectedIndex == 9) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("375ml");
            jComboBox_units_jLayeredPane_invoice.addItem("500ml");
            jComboBox_units_jLayeredPane_invoice.addItem("750ml");
            jComboBox_units_jLayeredPane_invoice.addItem("4_5L");

        }
        if (selectedIndex == 10) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("375ml");
            jComboBox_units_jLayeredPane_invoice.addItem("750ml");
            jComboBox_units_jLayeredPane_invoice.addItem("1L");
            jComboBox_units_jLayeredPane_invoice.addItem("2L");
            jComboBox_units_jLayeredPane_invoice.addItem("4_5L");

        }
        if (selectedIndex == 11) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("sp100g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp200g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp400g");
            jComboBox_units_jLayeredPane_invoice.addItem("sp500g");
            jComboBox_units_jLayeredPane_invoice.addItem("50g");
            jComboBox_units_jLayeredPane_invoice.addItem("100g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 12) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("375ml");
            jComboBox_units_jLayeredPane_invoice.addItem("750ml");
            jComboBox_units_jLayeredPane_invoice.addItem("1L");
            jComboBox_units_jLayeredPane_invoice.addItem("2L");
            jComboBox_units_jLayeredPane_invoice.addItem("4_5L");

        }
        if (selectedIndex == 13) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("250g");
            jComboBox_units_jLayeredPane_invoice.addItem("500g");
            jComboBox_units_jLayeredPane_invoice.addItem("1kg");

        }
        if (selectedIndex == 14) {
            jComboBox_units_jLayeredPane_invoice.removeAllItems();
            jComboBox_units_jLayeredPane_invoice.addItem("unit01");

        }
    }

    private void dbTableSearchUnitPrice(String DBName, String itemName, String needColumnName, JTextField tx_unitprice_jLayeredPane_invoice) {
        try {
            DBClass.getData("select " + needColumnName + " from " + DBName + " where productName like '" + itemName + "%' order by " + needColumnName);
            //    System.out.println("query ekt psse");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    tx_unitprice_jLayeredPane_invoice.setText(DBClass.r.getString(needColumnName));
                }
            } else {
                tx_productname_jLayeredPane_invoice.grabFocus();
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "Can't Fined dbTableSearchUnitPrice!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Fill All dbTableSearchUnitPrice!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error dbTableSearchUnitPrice!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void doctorTableInsert() {
        int id = Integer.parseInt(tx_id_jLayeredPane_doctoers.getText().trim());
        try {
            String dname = tx_name_jLayeredPane_doctoers.getText();
            String phone = tx_phone_jLayeredPane_doctoers.getText();
            String address = tx_address_jLayeredPane_doctoers.getText();
            String bankacountnumber = tx_acountnumber_jLayeredPane_doctoers.getText();
            String branchname = tx_branchname_jLayeredPane_doctoers.getText();
            String bankaname = tx_banknumber_jLayeredPane_doctoers.getText();
            DBClass.putData("insert into doctor  values('" + id + "' , '" + dname + "' , '" + phone + "' ,'" + address + "' ,'" + bankacountnumber + "' ,'" + bankaname + "','" + branchname + "','1')");
            double xv = 0.0;
            DBClass.putData("insert into doctoramount (doctorid,amount,date) values('" + id + "' , '" + xv + "','" + la_date.getText() + "')");
            clearDoctorsFields();
            lastNumberDoctor();
            addTotableSearDoctor();
        } catch (java.sql.SQLIntegrityConstraintViolationException e) {
            int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate Ref.No : " + id + "\n  Please check the  recode!!", "Duplicate Entity", JOptionPane.YES_NO_OPTION);
            if (shoConform == JOptionPane.YES_OPTION) {
                tx_refno_jLayeredPane_invoice.grabFocus();
            } else if (JOptionPane.NO_OPTION == shoConform) {
                setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Bug Error doctorTableInsert !!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearDoctorsFields() {
        tx_id_jLayeredPane_doctoers.setText(null);
        tx_name_jLayeredPane_doctoers.setText(null);
        tx_phone_jLayeredPane_doctoers.setText(null);
        tx_address_jLayeredPane_doctoers.setText(null);
        tx_acountnumber_jLayeredPane_doctoers.setText(null);
        tx_banknumber_jLayeredPane_doctoers.setText(null);
        jCheckBox_active_jLayeredPane_doctoers.setSelected(false);
        tx_branchname_jLayeredPane_doctoers.setText(null);
        tx_iddoctor_jLayeredPane_invoice1.grabFocus();
        b_enter_jLayeredPaneDoctors.setVisible(true);
    }

    private void addTotableSearDoctor() {
        try {
            // jTable_jpanal_doctors.removeAll();
            ResultSet rs = DBClass.getData("select * from doctor where  id order by id");
            DefaultTableModel dm = (DefaultTableModel) jTable_jpanal_doctors.getModel();
            jTable_jpanal_doctors.removeAll();
            dm.setRowCount(0);
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("id"));
                    v.add(rs.getString("name"));
                    v.add(rs.getString("address"));
                    v.add(rs.getString("phone"));
                    v.add(rs.getString("bankacountnumber"));
                    v.add(rs.getString("bankaname"));
                    v.add(rs.getString("branchname"));
                    v.add(rs.getString("isactive"));
                    dm.addRow(v);
                }
            }

        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(this, "Doctor Table Error \n" + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Doctor Table Error \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void lastNumberDoctor() {
        try {
            ResultSet rs = DBClass.getData("select id from doctor order by id desc limit 1");
            if (rs.next()) {
                la_lastid_doctors.setText(rs.getString("id"));
            } else {
                la_lastid_doctors.setText("" + 0000);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Missing parats lastNumberDoctor \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void searchANDListDockter(String doctor, String id, String text, JList jList_jLayeredPane_Doctors) {
        try {
            DBClass.getData("select " + id + " from " + doctor + " where " + id + " like '" + text + "%' order by " + id);

            Vector v = new Vector();
            jList_jLayeredPane_Doctors.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString(id));
                    jList_jLayeredPane_Doctors.setListData(v);

                }
            } else {
                jList_jLayeredPane_Doctors.setListData(v);
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchANDList!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void searchDoctorFillColumn(String idTxt) {
        try {
            DBClass.getData("select * from doctor where  id  like '" + idTxt + "%' order by id");
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    b_enter_jLayeredPaneDoctors.setVisible(false);
                    tx_name_jLayeredPane_doctoers.setText(DBClass.r.getString("name"));
                    tx_phone_jLayeredPane_doctoers.setText(DBClass.r.getString("phone"));
                    tx_address_jLayeredPane_doctoers.setText(DBClass.r.getString("address"));
                    tx_acountnumber_jLayeredPane_doctoers.setText(DBClass.r.getString("bankacountnumber"));
                    tx_banknumber_jLayeredPane_doctoers.setText(DBClass.r.getString("bankaname"));
                    jCheckBox_active_jLayeredPane_doctoers.setSelected(true);
                }
            } else {
                tx_id_jLayeredPane_doctoers.grabFocus();
                b_enter_jLayeredPaneDoctors.setVisible(true);
            }
        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(null, "Bug Error searchDoctorFillColumn!!! \n " + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_iddoctor_jLayeredPane_invoice1.grabFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bug Error searchDoctorFillColumn!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
            tx_iddoctor_jLayeredPane_invoice1.grabFocus();
        }
    }

    private void ourAmount() {
        try {
            Date date = jDateChooser1.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            ResultSet rs = DBClass.getData("select * from rxamount where date ='" + sdf.format(date) + "' ");
            DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
            dm.setRowCount(0);
            if (DBClass.r.isBeforeFirst() == true) {
                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("rxanme"));
                    v.add(rs.getString("amount"));
                    dm.addRow(v);
                }
            }

            saveAmountUS();

        } catch (SQLException sqle) {
            JOptionPane.showMessageDialog(this, "Rxamount Table Error \n" + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Rxamount Table Error \n" + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void saveAmountUS() {
        String path = "";
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jfc.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = jfc.getSelectedFile().getAbsolutePath();
        }
        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + la_date.getText() + jfc.getSelectedFile().getName() + ".pdf"));
            doc.open();

            PdfPTable tb1 = new PdfPTable(2);
            PdfPTable tb2 = new PdfPTable(2);
            tb1.addCell("Ref.No");
            tb1.addCell("Amount");

            tb2.addCell("Date");
            tb2.addCell("Total");

            Date date = jDateChooser1.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            tb2.addCell(sdf.format(date));

            double t = 0;
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                String rfno = jTable1.getValueAt(i, 0).toString();
                String am = jTable1.getValueAt(i, 1).toString();
                t += Double.parseDouble(am);
                tb1.addCell(rfno);
                tb1.addCell(am);
            }
            t = Math.round(t);
            tb2.addCell(Double.toString(t));
            doc.add(tb1);
            doc.add(tb2);

            JOptionPane.showMessageDialog(null, "Save PDF File ", "After Save Massage", JOptionPane.WARNING_MESSAGE);
        } catch (DocumentException ex) {
            JOptionPane.showMessageDialog(this, "Document Error savePDF!!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "This file can't Found savePDF !!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

        doc.close();
    }

    private void checkFirstDateAndSaveAmountAndClearDoctorAmount() {
        // String dateString = "2012-01-13";
        String dateString = la_date.getText();
        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.US);
        LocalDate date = LocalDate.parse(dateString, dateFormat);
        LocalDate lastDate = date.withDayOfMonth(date.getMonth().length(date.isLeapYear()));
        // LocalDate firstDay = LocalDate.now().withDayOfMonth(1);

        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        Date sd;
        Date today = new Date();
        long monthTime = date.lengthOfMonth() * 24L * 3600L * 1000L;
        //System.out.println( (today.getTime()- monthTime)/(24L*3600L*1000L) );
        // System.out.println(firstDay);
        //System.out.println(newDate);
        if (lastDate.equals(la_date.getText())) {
            try {
                JOptionPane.showMessageDialog(this, "Today is the last day of the this month first save the All Amount", "Monthly Save Amount", JOptionPane.YES_OPTION);
                double income = 0.0;
                ResultSet rs = DBClass.getData("select * from doctoramount");
                DefaultTableModel dm = (DefaultTableModel) jTable_jdoctoramount.getModel();
                jTable_jdoctoramount.removeAll();
                dm.setRowCount(0);

                while (rs.next()) {
                    Vector v = new Vector();
                    v.add(rs.getString("id"));
                    v.add(rs.getString("doctorid"));
                    v.add(rs.getString("amount"));
                    v.add(rs.getString("date"));
                    dm.addRow(v);
                    int did = Integer.parseInt(rs.getString("doctorid"));
                    DBClass.putData("update  doctoramount set amount='" + income + "',date='" + la_date.getText() + "' where  doctorid ='" + did + "' ");
                }

                ResultSet rs2 = DBClass.getData("select * from rxamount ");
                dm = (DefaultTableModel) jTable_rxamount.getModel();
                jTable_rxamount.removeAll();
                dm.setRowCount(0);

                while (rs2.next()) {
                    sd = s.parse(rs.getString("date"));
                    if (sd.getTime() <= today.getTime() & sd.getTime() > (today.getTime() - monthTime)) {
                        Vector v = new Vector();
                        v.add(rs.getString("id"));
                        v.add(rs.getString("refNo"));
                        v.add(rs.getString("amount"));
                        v.add(rs.getString("date"));
                        dm.addRow(v);

                        int refno = Integer.parseInt(rs.getString("refNo"));
                        DBClass.putData("update  rxamount set amount='" + income + "',date='" + la_date.getText() + "' where  refNo ='" + refno + "' ");

                    }

                }

                savePDFAllAMOUNT("RX");
                savePDFAllAMOUNT("doctor");
            } catch (SQLException sqle) {
                JOptionPane.showMessageDialog(this, "Doctor Table Error \n" + sqle, "Error Massage", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery Update!!! \n " + e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Today isn't the last day of the month!!! \n ", "Remind", JOptionPane.OK_OPTION);
        }
    }

    private void savePDFAllAMOUNT(String NR) {
        String path = "";
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = jfc.showSaveDialog(this);
        if (x == JFileChooser.APPROVE_OPTION) {
            path = jfc.getSelectedFile().getAbsolutePath();
        }
        Document doc = new Document();
        try {
            PdfWriter.getInstance(doc, new FileOutputStream(path + la_date.getText() + jfc.getSelectedFile().getName() + ".pdf"));//
            doc.open();
            if (NR.equals("RX")) {
                PdfPTable tb1 = new PdfPTable(4);
                PdfPTable tb2 = new PdfPTable(2);
                tb1.addCell("ID");
                tb1.addCell("Ref.No");
                tb1.addCell("Amount");
                tb1.addCell("Date");

                tb2.addCell("Date");
                tb2.addCell("Total");

                tb2.addCell(la_date.getText());

                double t = 0;
                for (int i = 0; i < jTable_rxamount.getRowCount(); i++) {
                    String did = jTable_rxamount.getValueAt(i, 0).toString();
                    String rfno = jTable_rxamount.getValueAt(i, 1).toString();
                    String amount = jTable_rxamount.getValueAt(i, 2).toString();
                    String date = jTable_rxamount.getValueAt(i, 3).toString();

                    t += Double.parseDouble(amount);
                    tb1.addCell(rfno);
                    tb1.addCell(did);
                    tb1.addCell(amount);
                    tb1.addCell(date);
                }
                t = Math.round(t);
                tb2.addCell(Double.toString(t));
                doc.add(tb1);
                doc.add(tb2);
            } else {
                PdfPTable tb1 = new PdfPTable(4);
                PdfPTable tb2 = new PdfPTable(2);
                tb1.addCell("ID");
                tb1.addCell("Doctor ID");
                tb1.addCell("Amount");
                tb1.addCell("Date");

                tb2.addCell("Date");
                tb2.addCell("Total");

                tb2.addCell(la_date.getText());

                double t = 0;
                for (int i = 0; i < jTable_jdoctoramount.getRowCount(); i++) {
                    String id = jTable_jdoctoramount.getValueAt(i, 0).toString();
                    String did = jTable_jdoctoramount.getValueAt(i, 1).toString();
                    String amount = jTable_jdoctoramount.getValueAt(i, 2).toString();
                    String date = jTable_jdoctoramount.getValueAt(i, 3).toString();
                    t += Double.parseDouble(amount);
                    tb1.addCell(id);
                    tb1.addCell(did);
                    tb1.addCell(amount);
                    tb1.addCell(date);
                }
                t = Math.round(t);
                tb2.addCell(Double.toString(t));
                doc.add(tb1);
                doc.add(tb2);
            }

            JOptionPane.showMessageDialog(null, "Save PDF File ", "After Save Massage", JOptionPane.WARNING_MESSAGE);
        } catch (DocumentException ex) {
            JOptionPane.showMessageDialog(this, "Document Error savePDF!!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "This file can't Found savePDF !!! \n " + ex, "Error Massage", JOptionPane.ERROR_MESSAGE);
        }

        doc.close();

    }

    private void printInvoiceCopy(int x) {
        if (combo_type_jLayeredPane_invoice.getSelectedIndex() == 0 | combo_type_jLayeredPane_invoice.getSelectedIndex() == 2) {
            try {
                // InputStream is = new FileInputStream("report/reportinvoice.jasper"); 
                //    File f = new File(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                FileInputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                Map<String, Object> map = new HashMap<>();
                map.put("RefNo", x);  //tx_refno_jLayeredPane_invoice.getText()
                JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
                //    JasperViewer.viewReport(fileReport, false);
                try {
                    String pathPDF = "";
                    // File file = new File("DDRR.txt");
                    File file = new File(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    if (!file.exists()) {
                        // System.out.println("f");
                        file.createNewFile();
                        FileWriter fr = new FileWriter(file);

                        JFileChooser jfc = new JFileChooser();
                        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                        jfc.setMultiSelectionEnabled(false);
                        jfc.showSaveDialog(jfc);
                        pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                        fr.write("DB.mpa=" + pathPDF);
                        fr.close();
                        File pF = new File(pathPDF);
                        pF.mkdir();
                    }

                    InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    Properties prop = new Properties();
                    prop.load(input);
                    pathPDF = prop.getProperty("DB.mpa");
                    //  System.out.println(prop.getProperty("DB.mpa"));

                    JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\\\" + "Copy" + GenaratorPDFName("" + x));
                    //  JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                    // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
                } catch (IOException e) {
                    // e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "PDF not save printInvoice!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
                }

                JasperPrintManager.printReport(fileReport, false);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Repoting Error printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                FileInputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoicerx.jasper");
                //    InputStream is = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "reportinvoice.jasper");
                Map<String, Object> map = new HashMap<>();
                map.put("RefNo", x);  //tx_refno_jLayeredPane_invoice.getText()
                JasperPrint fileReport = JasperFillManager.fillReport(is, map, DBClass.con());
                //    JasperViewer.viewReport(fileReport, false);
                try {
                    String pathPDF = "";
                    // File file = new File("DDRR.txt");
                    File file = new File(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    if (!file.exists()) {
                        // System.out.println("f");
                        file.createNewFile();
                        FileWriter fr = new FileWriter(file);

                        JFileChooser jfc = new JFileChooser();
                        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);
                        jfc.setMultiSelectionEnabled(false);
                        jfc.showSaveDialog(jfc);
                        pathPDF = jfc.getSelectedFile().getPath().replace("\\", "\\\\");

                        fr.write("DB.mpa=" + pathPDF);
                        fr.close();
                        File pF = new File(pathPDF);
                        pF.mkdir();
                    }

                    InputStream input = new FileInputStream(SaveFilePath.REPORT_BASE_URL + "DDRR.txt");
                    Properties prop = new Properties();
                    prop.load(input);
                    pathPDF = prop.getProperty("DB.mpa");
                    //  System.out.println(prop.getProperty("DB.mpa"));

                    JasperExportManager.exportReportToPdfFile(fileReport, pathPDF + "\\\\" + "Copy" + GenaratorPDFName("" + x));
                    //   JasperExportManager.exportReportToXmlFile(fileReport, pathPDF + "\\\\" + GenaratorXMLName(tx_refno_jLayeredPane_invoice.getText()),true);
                    // System.out.println(pathPDF + "\\\\" + GenaratorPDFName(tx_refno_jLayeredPane_invoice.getText()));
                } catch (IOException e) {
                    // e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "PDF not save printInvoice!!! \n " + e, "Error Massage", JOptionPane.ERROR_MESSAGE);
                }

                JasperPrintManager.printReport(fileReport, false);

            } catch (JRException e) {
                JOptionPane.showMessageDialog(null, "Repot Not Compleate , Please Check It printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                // e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Repoting Error printInvoice!!!" + e, "Report Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

}
