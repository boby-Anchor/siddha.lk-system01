/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import small.bill.DBClass;

/**
 *
 * @author CHETHANA
 */
public class addemployee extends javax.swing.JFrame {

    /**
     * Creates new form addemployee
     */
    public addemployee() {
        initComponents();
        clearMethod();
    }

    private static addemployee call_popup_ = new addemployee();

    public static addemployee getCallPopup() {
        return call_popup_;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel37 = new javax.swing.JLabel();
        jScrollPane1_Employee = new javax.swing.JScrollPane();
        jList1_Employee = new javax.swing.JList();
        jLayeredPaneTop = new javax.swing.JLayeredPane();
        la_minimise = new javax.swing.JLabel();
        la_close = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        tx_name_Employee = new javax.swing.JTextField();
        b_clear_Employee = new javax.swing.JButton();
        b_search_Employee = new javax.swing.JButton();
        b_update_Employee = new javax.swing.JButton();
        b_enter_Employee = new javax.swing.JButton();
        jLabel59 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        tx_username_Employee = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        tx_ps1_Employee = new javax.swing.JPasswordField();
        tx_ps2_Employee = new javax.swing.JPasswordField();
        jLabel44 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        tx_nic_Employee = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(145, 45));
        setMinimumSize(new java.awt.Dimension(671, 505));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(671, 505));
        getContentPane().setLayout(null);

        jLabel37.setBackground(new java.awt.Color(23, 160, 160));
        jLabel37.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 0));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Employee");
        jLabel37.setOpaque(true);
        getContentPane().add(jLabel37);
        jLabel37.setBounds(0, 30, 670, 40);

        jList1_Employee.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jList1_Employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1_EmployeeKeyPressed(evt);
            }
        });
        jScrollPane1_Employee.setViewportView(jList1_Employee);

        getContentPane().add(jScrollPane1_Employee);
        jScrollPane1_Employee.setBounds(180, 130, 340, 131);

        jLayeredPaneTop.setBackground(new java.awt.Color(4, 37, 87));
        jLayeredPaneTop.setMinimumSize(new java.awt.Dimension(1380, 45));
        jLayeredPaneTop.setOpaque(true);

        la_minimise.setBackground(new java.awt.Color(4, 37, 87));
        la_minimise.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        la_minimise.setForeground(new java.awt.Color(255, 255, 255));
        la_minimise.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_minimise.setText("-");
        la_minimise.setOpaque(true);
        la_minimise.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_minimiseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_minimiseMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_minimiseMouseClicked(evt);
            }
        });
        jLayeredPaneTop.add(la_minimise);
        la_minimise.setBounds(580, 0, 35, 30);

        la_close.setBackground(new java.awt.Color(4, 37, 87));
        la_close.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        la_close.setForeground(new java.awt.Color(255, 255, 255));
        la_close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        la_close.setText("x");
        la_close.setOpaque(true);
        la_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                la_closeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                la_closeMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                la_closeMouseClicked(evt);
            }
        });
        jLayeredPaneTop.add(la_close);
        la_close.setBounds(620, 0, 40, 30);

        getContentPane().add(jLayeredPaneTop);
        jLayeredPaneTop.setBounds(0, 0, 670, 30);

        jLabel58.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(0, 0, 0));
        jLabel58.setText("Name");
        getContentPane().add(jLabel58);
        jLabel58.setBounds(20, 150, 120, 30);

        jLabel41.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 0, 0));
        jLabel41.setText(":");
        getContentPane().add(jLabel41);
        jLabel41.setBounds(150, 150, 10, 30);

        tx_name_Employee.setBackground(new java.awt.Color(255, 255, 255));
        tx_name_Employee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_name_Employee.setForeground(new java.awt.Color(0, 0, 0));
        tx_name_Employee.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_name_EmployeeAncestorRemoved(evt);
            }
        });
        tx_name_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_name_EmployeeActionPerformed(evt);
            }
        });
        tx_name_Employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_name_EmployeeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_name_EmployeeKeyReleased(evt);
            }
        });
        getContentPane().add(tx_name_Employee);
        tx_name_Employee.setBounds(180, 150, 340, 35);

        b_clear_Employee.setBackground(new java.awt.Color(210, 50, 50));
        b_clear_Employee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        b_clear_Employee.setForeground(new java.awt.Color(255, 255, 255));
        b_clear_Employee.setText("Clear");
        b_clear_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clear_EmployeeActionPerformed(evt);
            }
        });
        getContentPane().add(b_clear_Employee);
        b_clear_Employee.setBounds(20, 450, 140, 50);

        b_search_Employee.setBackground(new java.awt.Color(19, 198, 190));
        b_search_Employee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        b_search_Employee.setForeground(new java.awt.Color(255, 255, 255));
        b_search_Employee.setText("Search");
        b_search_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_search_EmployeeActionPerformed(evt);
            }
        });
        getContentPane().add(b_search_Employee);
        b_search_Employee.setBounds(525, 90, 140, 30);

        b_update_Employee.setBackground(new java.awt.Color(255, 204, 102));
        b_update_Employee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        b_update_Employee.setForeground(new java.awt.Color(255, 255, 255));
        b_update_Employee.setText("Update");
        b_update_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_update_EmployeeActionPerformed(evt);
            }
        });
        getContentPane().add(b_update_Employee);
        b_update_Employee.setBounds(180, 450, 140, 50);

        b_enter_Employee.setBackground(new java.awt.Color(19, 198, 190));
        b_enter_Employee.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        b_enter_Employee.setForeground(new java.awt.Color(255, 255, 255));
        b_enter_Employee.setText("Enter");
        b_enter_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_enter_EmployeeActionPerformed(evt);
            }
        });
        getContentPane().add(b_enter_Employee);
        b_enter_Employee.setBounds(520, 440, 140, 50);

        jLabel59.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(0, 0, 0));
        jLabel59.setText("User Name");
        getContentPane().add(jLabel59);
        jLabel59.setBounds(20, 210, 120, 30);

        jLabel42.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 0));
        jLabel42.setText(":");
        getContentPane().add(jLabel42);
        jLabel42.setBounds(150, 210, 10, 30);

        tx_username_Employee.setBackground(new java.awt.Color(255, 255, 255));
        tx_username_Employee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_username_Employee.setForeground(new java.awt.Color(0, 0, 0));
        tx_username_Employee.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_username_EmployeeAncestorRemoved(evt);
            }
        });
        tx_username_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_username_EmployeeActionPerformed(evt);
            }
        });
        tx_username_Employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_username_EmployeeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_username_EmployeeKeyReleased(evt);
            }
        });
        getContentPane().add(tx_username_Employee);
        tx_username_Employee.setBounds(180, 210, 340, 35);

        jLabel60.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(0, 0, 0));
        jLabel60.setText("Password");
        getContentPane().add(jLabel60);
        jLabel60.setBounds(20, 270, 120, 30);

        jLabel43.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setText(":");
        getContentPane().add(jLabel43);
        jLabel43.setBounds(150, 270, 10, 30);

        jCheckBox1.setText("A / I");
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(180, 390, 48, 30);

        jCheckBox2.setText("Show");
        jCheckBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox2MouseClicked(evt);
            }
        });
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox2);
        jCheckBox2.setBounds(540, 330, 80, 24);

        tx_ps1_Employee.setText("jPasswordField1");
        tx_ps1_Employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_ps1_EmployeeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_ps1_EmployeeKeyReleased(evt);
            }
        });
        getContentPane().add(tx_ps1_Employee);
        tx_ps1_Employee.setBounds(180, 270, 340, 30);

        tx_ps2_Employee.setText("jPasswordField1");
        tx_ps2_Employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_ps2_EmployeeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_ps2_EmployeeKeyReleased(evt);
            }
        });
        getContentPane().add(tx_ps2_Employee);
        tx_ps2_Employee.setBounds(180, 330, 340, 30);

        jLabel44.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 0));
        jLabel44.setText(":");
        getContentPane().add(jLabel44);
        jLabel44.setBounds(150, 330, 10, 30);

        jLabel61.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(0, 0, 0));
        jLabel61.setText("Password");
        getContentPane().add(jLabel61);
        jLabel61.setBounds(20, 330, 120, 30);

        jLabel62.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(0, 0, 0));
        jLabel62.setText("Active / Inactive");
        getContentPane().add(jLabel62);
        jLabel62.setBounds(20, 390, 120, 30);

        jLabel45.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 0));
        jLabel45.setText(":");
        getContentPane().add(jLabel45);
        jLabel45.setBounds(150, 390, 10, 30);

        jLabel46.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(0, 0, 0));
        jLabel46.setText(":");
        getContentPane().add(jLabel46);
        jLabel46.setBounds(150, 90, 10, 30);

        jLabel63.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(0, 0, 0));
        jLabel63.setText("NIC");
        getContentPane().add(jLabel63);
        jLabel63.setBounds(20, 90, 120, 30);

        tx_nic_Employee.setBackground(new java.awt.Color(255, 255, 255));
        tx_nic_Employee.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tx_nic_Employee.setForeground(new java.awt.Color(0, 0, 0));
        tx_nic_Employee.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                tx_nic_EmployeeAncestorRemoved(evt);
            }
        });
        tx_nic_Employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_nic_EmployeeActionPerformed(evt);
            }
        });
        tx_nic_Employee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_nic_EmployeeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_nic_EmployeeKeyReleased(evt);
            }
        });
        getContentPane().add(tx_nic_Employee);
        tx_nic_Employee.setBounds(180, 90, 340, 35);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void la_minimiseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseEntered
        la_minimise.setBackground(Color.GRAY);
    }//GEN-LAST:event_la_minimiseMouseEntered

    private void la_minimiseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseExited
        la_minimise.setBackground(new Color(4, 37, 87));
    }//GEN-LAST:event_la_minimiseMouseExited

    private void la_minimiseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_minimiseMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_la_minimiseMouseClicked

    private void la_closeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseEntered
        la_close.setBackground(Color.red);
    }//GEN-LAST:event_la_closeMouseEntered

    private void la_closeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseExited
        la_close.setBackground(new Color(4, 37, 87));
    }//GEN-LAST:event_la_closeMouseExited

    private void la_closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_la_closeMouseClicked
        int x = JOptionPane.showConfirmDialog(this, "Do you sure close ?", "Exit System", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearMethod();
            this.dispose();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            la_close.setBackground(new Color(4, 37, 87));
        }
    }//GEN-LAST:event_la_closeMouseClicked

    private void tx_name_EmployeeAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_name_EmployeeAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_name_EmployeeAncestorRemoved

    private void tx_name_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_name_EmployeeActionPerformed
        if (tx_name_Employee.getText().trim().equals("")) {
            tx_username_Employee.grabFocus();
        } else {
            tx_name_Employee.grabFocus();
        }
    }//GEN-LAST:event_tx_name_EmployeeActionPerformed

    private void tx_name_EmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_name_EmployeeKeyPressed
        txValidateKeyEvent(evt, tx_name_Employee, "A", 50);
        if (evt.getKeyCode() == 10) {
            if (!tx_name_Employee.getText().equals("")) {
                tx_name_Employee.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_name_EmployeeKeyPressed

    private void tx_name_EmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_name_EmployeeKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!tx_name_Employee.getText().isEmpty()) {
                jScrollPane1_Employee.setVisible(false);
                tx_username_Employee.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_name_EmployeeKeyReleased

    private void jList1_EmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1_EmployeeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!jList1_Employee.isSelectionEmpty()) {
                tx_nic_Employee.setText(jList1_Employee.getSelectedValue().toString());
                jScrollPane1_Employee.setVisible(false);
                tx_name_Employee.grabFocus();
            }
        }
    }//GEN-LAST:event_jList1_EmployeeKeyPressed

    private void b_clear_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clear_EmployeeActionPerformed
        int x = JOptionPane.showConfirmDialog(this, "Do you want to Clear All", "Clear All", JOptionPane.YES_NO_OPTION);
        if (JOptionPane.YES_OPTION == x) {
            clearMethod();
        } else if (JOptionPane.NO_OPTION == x) {
            setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_b_clear_EmployeeActionPerformed

    private void b_search_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_search_EmployeeActionPerformed
        if (!tx_nic_Employee.getText().trim().isEmpty()) {
            searchMethode();
        } else {
            tx_nic_Employee.grabFocus();
        }
    }//GEN-LAST:event_b_search_EmployeeActionPerformed

    private void b_update_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_update_EmployeeActionPerformed
        //        if (!(tx_itemid.getText().trim().isEmpty() | tx_itemname.getText().trim().isEmpty())) {
        //            int txt = selectTxt(jComboBox1.getSelectedIndex());
        //            try {
        //
        //                DBClass.putData("update"+jComboBox1.getSelectedItem()+" set amount='" + beroreamount + "' where  doctorid ='" + did + "' ");
        //            } catch (Exception e) {
        //                JOptionPane.showMessageDialog(null, " Error printButtonIncertQuery Update!!! \n " + e, "Error", JOptionPane.ERROR_MESSAGE);
        //            }
        //        } else {
        //            tx_itemid.grabFocus();
        //        }
    }//GEN-LAST:event_b_update_EmployeeActionPerformed

    private void b_enter_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_enter_EmployeeActionPerformed
        insertDataEmployeeTables();
    }//GEN-LAST:event_b_enter_EmployeeActionPerformed

    private void tx_username_EmployeeAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_username_EmployeeAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_username_EmployeeAncestorRemoved

    private void tx_username_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_username_EmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_username_EmployeeActionPerformed

    private void tx_username_EmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_username_EmployeeKeyPressed
        txValidateKeyEvent(evt, tx_username_Employee, "A", 13);
        if (evt.getKeyCode() == 10) {
            if (!tx_username_Employee.getText().trim().equals("")) {
                tx_ps1_Employee.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_username_EmployeeKeyPressed

    private void tx_username_EmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_username_EmployeeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_username_EmployeeKeyReleased

    private void tx_ps1_EmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_ps1_EmployeeKeyPressed
        txValidateKeyEvent(evt, tx_ps1_Employee, "NA", 9);
    }//GEN-LAST:event_tx_ps1_EmployeeKeyPressed

    private void tx_ps2_EmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_ps2_EmployeeKeyPressed
        txValidateKeyEvent(evt, tx_ps2_Employee, "NA", 9);
    }//GEN-LAST:event_tx_ps2_EmployeeKeyPressed

    private void tx_ps1_EmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_ps1_EmployeeKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_ps1_Employee.getText().trim().equals("")) {
                tx_ps1_Employee.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_ps1_EmployeeKeyReleased

    private void tx_ps2_EmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_ps2_EmployeeKeyReleased
        if (evt.getKeyCode() == 10) {
            if (!tx_ps2_Employee.getText().trim().equals("")) {
                if (tx_ps2_Employee.getText().equals(tx_ps1_Employee.getText().trim())) {
                    b_enter_Employee.grabFocus();
                } else {
                    tx_ps1_Employee.grabFocus();
                }
            }
        }
    }//GEN-LAST:event_tx_ps2_EmployeeKeyReleased

    private void jCheckBox2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox2MouseClicked


    }//GEN-LAST:event_jCheckBox2MouseClicked

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected() == true) {
            jCheckBox2.setSelected(true);
            tx_ps1_Employee.setEchoChar((char) 0);
            tx_ps2_Employee.setEchoChar((char) 0);
        } else {
            tx_ps1_Employee.setEchoChar('*');
            tx_ps2_Employee.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void tx_nic_EmployeeAncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tx_nic_EmployeeAncestorRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_nic_EmployeeAncestorRemoved

    private void tx_nic_EmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_nic_EmployeeActionPerformed
//        if (tx_nic_Employee.getText().trim().equals("")) {
//            tx_name_Employee.grabFocus();
//        } else {
//            tx_nic_Employee.grabFocus();
//        }
    }//GEN-LAST:event_tx_nic_EmployeeActionPerformed

    private void tx_nic_EmployeeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_nic_EmployeeKeyPressed
        txValidateKeyEvent(evt, tx_nic_Employee, "NIC", 14);
    }//GEN-LAST:event_tx_nic_EmployeeKeyPressed

    private void tx_nic_EmployeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_nic_EmployeeKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            jScrollPane1_Employee.setVisible(true);
            jList1_Employee.grabFocus();
        } else if (!(tx_nic_Employee.getText().trim().isEmpty())) {
            jScrollPane1_Employee.setVisible(true);
            searchANDList("employee", "nic", tx_nic_Employee.getText(), jList1_Employee);
        }else if(tx_nic_Employee.getText().trim().isEmpty()){
            jScrollPane1_Employee.setVisible(false);
            tx_nic_Employee.grabFocus();
        } else if (evt.getKeyCode() == 10) {
            if (!tx_nic_Employee.getText().trim().equals("")) {
                tx_name_Employee.grabFocus();
            }
        }
    }//GEN-LAST:event_tx_nic_EmployeeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addemployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addemployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_clear_Employee;
    private javax.swing.JButton b_enter_Employee;
    private javax.swing.JButton b_search_Employee;
    private javax.swing.JButton b_update_Employee;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLayeredPane jLayeredPaneTop;
    private javax.swing.JList jList1_Employee;
    private javax.swing.JScrollPane jScrollPane1_Employee;
    private javax.swing.JLabel la_close;
    private javax.swing.JLabel la_minimise;
    private static javax.swing.JTextField tx_name_Employee;
    private static javax.swing.JTextField tx_nic_Employee;
    private javax.swing.JPasswordField tx_ps1_Employee;
    private javax.swing.JPasswordField tx_ps2_Employee;
    private static javax.swing.JTextField tx_username_Employee;
    // End of variables declaration//GEN-END:variables

    private void txValidateKeyEvent(KeyEvent evt, JTextField txName, String txType, int lenthNeedFeld) {

        int iNumber = evt.getKeyCode();
        if (txName.getText().length() <= lenthNeedFeld) {

            if (txType.equals("N")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NIC")) {
                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber == 8) | evt.getKeyChar() == KeyEvent.VK_V) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }
            }
            if (txType.equals("A")) {

                if ((iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 32) | (iNumber == 46)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }
            if (txType.equals("NA")) {

                if ((iNumber >= 96 & iNumber <= 105) | (iNumber >= 48 & iNumber <= 57) | (iNumber >= 65 & iNumber <= 90) | (iNumber == 8) | (iNumber == 45) | (iNumber == 32) | (iNumber == 44) | (iNumber == 46) | (iNumber == 47)) {
                    txName.setEditable(true);
                } else {
                    txName.setEditable(false);
                }

            }

        } else if ((iNumber == 8)) {
            txName.setEditable(true);
        } else {
            txName.setEditable(false);
        }
    }

    private void clearMethod() {
        jCheckBox1.setSelected(false);
        tx_nic_Employee.setText(null);
        jCheckBox2.setSelected(false);
        jScrollPane1_Employee.setVisible(false);
        tx_name_Employee.setText(null);
        tx_username_Employee.setText(null);
        tx_ps2_Employee.setText(null);
        tx_ps1_Employee.setText(null);
        tx_nic_Employee.grabFocus();
    }

    private void insertDataEmployeeTables() {
        String nic = tx_nic_Employee.getText();
        String nam = tx_name_Employee.getText();
        String uname = tx_username_Employee.getText();
        String ps = tx_ps1_Employee.getText();

        if (!(tx_nic_Employee.getText().trim().isEmpty() | tx_name_Employee.getText().trim().isEmpty() | tx_username_Employee.getText().trim().isEmpty() | tx_ps1_Employee.getText().trim().isEmpty())) {
            try {
                DBClass.putData("insert into employee (nic,employeename,uname,password) values('"+nic+"','" + nam + "' , '" + uname + "' , '" + ps + "')");
                JOptionPane.showMessageDialog(null, "EMPLOYEE ADDED SUCCESSFULLY");
                clearMethod();
            } catch (java.sql.SQLIntegrityConstraintViolationException e) {
                int shoConform = JOptionPane.showConfirmDialog(this, "trying to save duplicate ITEM ID : " + nic + "\n  Please check the  recode!!");
                if (shoConform == JOptionPane.YES_OPTION) {
                    tx_nic_Employee.grabFocus();
                }
            } catch (Exception ex) {
              //  ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Wrong details \n" + ex);
                tx_nic_Employee.grabFocus();
            }
        }

    }

    public static void searchANDList(String dbtable, String searchAgainsed, String value, JList list) {  //  
        try {
            DBClass.getData("select " + searchAgainsed + " from " + dbtable + " where " + searchAgainsed + " like '" + value + "%' order by " + searchAgainsed);
           // System.out.println("query ekt psse");
            Vector v = new Vector();
            list.removeAll();
            if (DBClass.r.isBeforeFirst() == true) {
                while (DBClass.r.next()) {
                    v.add(DBClass.r.getString(searchAgainsed));
                    list.setListData(v);
                }
            } else {
               tx_nic_Employee.grabFocus();
            }
        } catch (SQLException sqle) {
          //  JOptionPane.showMessageDialog(null, "Wrong details " + sqle.getSQLState());
            tx_nic_Employee.grabFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error Massage Found" + e.getMessage());
            tx_nic_Employee.grabFocus();
        }
    }

    private void searchMethode() {
        try {

            String searchValue = tx_nic_Employee.getText().trim();
            String sql = "select * from  employee where nic ='" + searchValue + "'";
            DBClass.getData(sql);
            while (DBClass.r.next()) {
                tx_name_Employee.setText(DBClass.r.getString("employeename"));
                tx_username_Employee.setText(DBClass.r.getString("uname"));
                tx_ps1_Employee.setText(DBClass.r.getString("password"));
                tx_ps2_Employee.setText(DBClass.r.getString("password"));
                jCheckBox1.setSelected(true);
            }

        } catch (SQLException e) {
            //  System.out.println(e);
            JOptionPane.showMessageDialog(null, "Wrong id S \n" + e.getSQLState());
            tx_name_Employee.grabFocus();
        } catch (Exception e) {
            // e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Wrong id E \n" + e);
            tx_name_Employee.grabFocus();
        }
    }

}
